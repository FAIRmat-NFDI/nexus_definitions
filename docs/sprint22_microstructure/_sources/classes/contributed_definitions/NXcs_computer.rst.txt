.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXcs_computer.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXcs_computer (base class)
    ! cs_computer (base class)
    see: cs_computer (base class); NXcs_computer

.. _NXcs_computer:

=============
NXcs_computer
=============

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  Base class for reporting the description of a computer

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXcircuit`, :ref:`NXobject`

.. index:: NXobject (base class); used in base class, NXcircuit (base class); used in base class

**Structure**:

  .. _/NXcs_computer/name-field:

  .. index:: name (field)

  **name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Given name/alias to the computing system, e.g. MyDesktop.

  .. _/NXcs_computer/operating_system-field:

  .. index:: operating_system (field)

  **operating_system**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Name of the operating system, e.g. Windows, Linux, Mac, Android.

    .. _/NXcs_computer/operating_system@version-attribute:

    .. index:: version (field attribute)

    **@version**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Version plus build number, commit hash, or description of an ever ...

          Version plus build number, commit hash, or description of an ever
          persistent resource where the source code of the program and build
          instructions can be found so that the program can be configured in
          such a manner that the result file is ideally recreatable yielding
          the same results.

  .. _/NXcs_computer/uuid-field:

  .. index:: uuid (field)

  **uuid**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Ideally a (globally) unique persistent identifier of the computer, i.e. ...

        Ideally a (globally) unique persistent identifier of the computer, i.e.
        the Universally Unique Identifier (UUID) of the computing node.

  .. _/NXcs_computer/processing-group:

  **processing**: (optional) :ref:`NXobject` 

    .. collapse:: Details about the system of processing units e.g. (classical) processing units ...

        Details about the system of processing units e.g. (classical) processing units (CPUs),
        coprocessor, graphic cards, accelerator processing units or a system of these.

    .. _/NXcs_computer/processing/CIRCUIT-group:

    **CIRCUIT**: (optional) :ref:`NXcircuit` 

      .. collapse:: Granularizing the processing units. Typical examples, a desktop computer ...

          Granularizing the processing units. Typical examples, a desktop computer
          with a single CPU one could describe using one instance of NXcircuit.
          A dual-socket server one could describe using two instances NXcircuit
          A server with two dual-socket server nodes one could describe with
          four instances of NXcircuit surplus a field with their level in the hierarchy.

      .. _/NXcs_computer/processing/CIRCUIT/type-field:

      .. index:: type (field)

      **type**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: General type of the processing unit ...

            General type of the processing unit

            Any of these values: ``cpu`` | ``gpu`` | ``fpga`` | ``other``

      .. _/NXcs_computer/processing/CIRCUIT/name-field:

      .. index:: name (field)

      **name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        Given name

  .. _/NXcs_computer/memory-group:

  **memory**: (optional) :ref:`NXobject` 

    Details about the memory system.

    .. _/NXcs_computer/memory/CIRCUIT-group:

    **CIRCUIT**: (optional) :ref:`NXcircuit` 

      Granularizing the components of the memory system.

      .. _/NXcs_computer/memory/CIRCUIT/type-field:

      .. index:: type (field)

      **type**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: Qualifier for the type of random access memory. ...

            Qualifier for the type of random access memory.

            Any of these values: ``ddr4`` | ``ddr5``

      .. _/NXcs_computer/memory/CIRCUIT/max_physical_capacity-field:

      .. index:: max_physical_capacity (field)

      **max_physical_capacity**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_ANY <NX_ANY>`} 

        Total amount of data which the medium can hold.

      .. _/NXcs_computer/memory/CIRCUIT/name-field:

      .. index:: name (field)

      **name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        Given name

  .. _/NXcs_computer/storage-group:

  **storage**: (optional) :ref:`NXobject` 

    Details about the I/O system.

    .. _/NXcs_computer/storage/CIRCUIT-group:

    **CIRCUIT**: (optional) :ref:`NXcircuit` 

      Granularizing the components of the I/O system.

      .. _/NXcs_computer/storage/CIRCUIT/type-field:

      .. index:: type (field)

      **type**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: Qualifier for the type of storage medium used. ...

            Qualifier for the type of storage medium used.

            Any of these values: ``solid_state_disk`` | ``hard_disk`` | ``tape``

      .. _/NXcs_computer/storage/CIRCUIT/max_physical_capacity-field:

      .. index:: max_physical_capacity (field)

      **max_physical_capacity**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_ANY <NX_ANY>`} 

        Total amount of data which the medium can hold.

      .. _/NXcs_computer/storage/CIRCUIT/name-field:

      .. index:: name (field)

      **name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        Given name


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXcs_computer/memory-group </NXcs_computer/memory-group>`
* :ref:`/NXcs_computer/memory/CIRCUIT-group </NXcs_computer/memory/CIRCUIT-group>`
* :ref:`/NXcs_computer/memory/CIRCUIT/max_physical_capacity-field </NXcs_computer/memory/CIRCUIT/max_physical_capacity-field>`
* :ref:`/NXcs_computer/memory/CIRCUIT/name-field </NXcs_computer/memory/CIRCUIT/name-field>`
* :ref:`/NXcs_computer/memory/CIRCUIT/type-field </NXcs_computer/memory/CIRCUIT/type-field>`
* :ref:`/NXcs_computer/name-field </NXcs_computer/name-field>`
* :ref:`/NXcs_computer/operating_system-field </NXcs_computer/operating_system-field>`
* :ref:`/NXcs_computer/operating_system@version-attribute </NXcs_computer/operating_system@version-attribute>`
* :ref:`/NXcs_computer/processing-group </NXcs_computer/processing-group>`
* :ref:`/NXcs_computer/processing/CIRCUIT-group </NXcs_computer/processing/CIRCUIT-group>`
* :ref:`/NXcs_computer/processing/CIRCUIT/name-field </NXcs_computer/processing/CIRCUIT/name-field>`
* :ref:`/NXcs_computer/processing/CIRCUIT/type-field </NXcs_computer/processing/CIRCUIT/type-field>`
* :ref:`/NXcs_computer/storage-group </NXcs_computer/storage-group>`
* :ref:`/NXcs_computer/storage/CIRCUIT-group </NXcs_computer/storage/CIRCUIT-group>`
* :ref:`/NXcs_computer/storage/CIRCUIT/max_physical_capacity-field </NXcs_computer/storage/CIRCUIT/max_physical_capacity-field>`
* :ref:`/NXcs_computer/storage/CIRCUIT/name-field </NXcs_computer/storage/CIRCUIT/name-field>`
* :ref:`/NXcs_computer/storage/CIRCUIT/type-field </NXcs_computer/storage/CIRCUIT/type-field>`
* :ref:`/NXcs_computer/uuid-field </NXcs_computer/uuid-field>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXcs_computer.nxdl.xml
