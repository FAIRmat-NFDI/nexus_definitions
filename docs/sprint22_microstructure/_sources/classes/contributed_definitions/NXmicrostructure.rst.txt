.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXmicrostructure.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXmicrostructure (base class)
    ! microstructure (base class)
    see: microstructure (base class); NXmicrostructure

.. _NXmicrostructure:

================
NXmicrostructure
================

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  .. collapse:: Base class to describe a microstructure, its structural aspects, associated desc ...

      Base class to describe a microstructure, its structural aspects, associated descriptors, properties.

      Whether one uses a continuum or atomic scale description of materials, these are always a model
      the true internal structure of a material. Such models are useful as they enable a coarse graining and
      categorizing of properties and representational aspects from which measured or simulated descriptions
      can be correlated with properties i.e. descriptor values.

      Keep in mind that most specimens are thermo-chemo-mechanically processed prior their characterization.
      Therefore, the characterized microstructure may not have probe the same structure as of the untreated
      sample from which the region-of-interests on the specimen were probed.

      Fields such as time and increment enable a quantification of the spatiotemporal evolution of a materials
      structure by using multiple instances of NXmicrostructure. Both measurements and simulation virtually
      always sample this evolution. Most microscopy techniques support to generate only a two-dimensional
      representation (projection) of the characterized material, often materials are characterized only for
      specific states with much history or via sampling coarsely in time relative to the timescale at which the
      physical phenomena take place because of technical and practical limitations.

      The term microstructural feature covers here crystals and all sorts of crystal defects within the material. 
      A key challenge with the description representations and properties of microstructural features is that
      features with different dimensionality exist and combinations of features of different dimensionality are
      frequently expected to be documented with intuitive naming conventions using flat property lists.
      For these key-value dictionaries often folksonomies are used often relying on ad hoc documentation
      of such dictionaries in the literature and the metadata section of public data repositories.

      NXmicrostructure is an attempt to standardize these descriptions stronger.

      The descriptive variety is large especially for junctions. Like crystals and interfaces junctions are features in
      three-dimensional Euclidean space even if they are formed maybe only through a monolayer or pearl chain of atoms.
      Either way the local atomic and electronic environment is different compared to the situation of an ideal crystal
      which gives rise to a plethora of useful configurations of which some cause that materials have useful properties.

      Junctions are assumed, like crystals and interfaces to represent groups of atoms that have specific descriptor values
      which are different to other features. As an example a triple junction is practically a three-dimensional defect as its atoms
      are arrange in three-dimensional space but the characteristics of that defect can often be reduced to a lower-dimensional
      description such as a triple point or a triple line. Therefore, different representations can be used to describe the location,
      shape, and structure of the defect. As different types of crystal defects can interact there is a substantial number of
      in principle characterizable and representable objects. Take a triple line as an example. It is a tubular feature built from three
      adjoining interfaces. However, dislocations as line defects can interact with triple lines. Therefore, one can also argue that
      along a triple line there can be dislocation-line-triple-line junctions, likewise dislocations form own junctions.

      It is not the aim of this base class to cover all these cases, rather this base class currently provides examples how the
      typically most relevant types of features can be represented using a combination of base classes in NeXus. Currently,
      these are crystals, interfaces, triple lines, quadruple junctions.

      The description attempt here took inspiration from `E. E. Underwood <https://doi.org/10.1111/j.1365-2818.1972.tb03709.x>`_
      and E. E. Underwood's book on Quantitative Stereology published 1970 to categorize features based on their dimensionality.

      Identifiers can be defined either implicitly or explicitly. Identifiers for implicit indexing are defined
      on the interval :math:`[identifier\_offset, identifier\_offset + cardinality - 1]`.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **n_c_one**: The number of one-dimensional crystal projections

  **n_i_one**: The number of one-dimensional interface projections

  **n_c_two**: The number of two-dimensional crystal projections

  **n_i_two**: The number of two-dimensional interface projections

  **n_tj_two**: The number of two-dimensional triple line projections

  **n_ld_two**: The number of two-dimensional line defect projections

  **n_c_three**: The number of crystals (grain and sub-grain are exact synonyms for crystal).

  **n_i_three**: The number of interfaces (grain boundary and phase boundary are subclasses of interfaces).

  **n_tj_three**: The number of triple junctions (triple line is a exact synonym for triple junction, triple point is projection of a triple junction).

  **n_qj_three**: The number of quadruple junctions.

  **d**: The dimensionality of the representation that needs to match the value for configuration/dimensionality

**Groups cited**:
  :ref:`NXcg_grid`, :ref:`NXcg_point_set`, :ref:`NXcg_polyhedron_set`, :ref:`NXcg_polyline_set`, :ref:`NXcg_triangle_set`, :ref:`NXobject`, :ref:`NXprocess`

.. index:: NXprocess (base class); used in base class, NXcg_grid (base class); used in base class, NXcg_point_set (base class); used in base class, NXcg_polyline_set (base class); used in base class, NXcg_triangle_set (base class); used in base class, NXcg_polyhedron_set (base class); used in base class, NXobject (base class); used in base class

**Structure**:

  .. _/NXmicrostructure/comment-field:

  .. index:: comment (field)

  **comment**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Discouraged free-text field for leaving comments.

  .. _/NXmicrostructure/date-field:

  .. index:: date (field)

  **date**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>` 

    ISO8601 with offset to local time zone included when a timestamp is required.

  .. _/NXmicrostructure/time-field:

  .. index:: time (field)

  **time**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_TIME <NX_TIME>`} 

    .. collapse:: Measured or simulated physical time stamp for this microstructure snapshot. ...

        Measured or simulated physical time stamp for this microstructure snapshot.
        Not to be confused with wall-clock timing or profiling data.

  .. _/NXmicrostructure/iteration-field:

  .. index:: iteration (field)

  **iteration**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    Iteration or increment counter.

  .. _/NXmicrostructure/configuration-group:

  **configuration**: (optional) :ref:`NXprocess` 

    .. collapse:: Group where to store details about the configuration and parameterization of a ...

        Group where to store details about the configuration and parameterization of algorithms
        used whereby microstructural features were identified.

    .. _/NXmicrostructure/configuration/dimensionality-field:

    .. index:: dimensionality (field)

    **dimensionality**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Dimensionality of Euclidean space in which the analysis is performed. ...

          Dimensionality of Euclidean space in which the analysis is performed.

          This field can be used e.g. by a research data management system to identify
          if the description specifies one-, two-, or three-dimensional microstructural representations.

          Any of these values: ``1`` | ``2`` | ``3``

    .. _/NXmicrostructure/configuration/algorithm-field:

    .. index:: algorithm (field)

    **algorithm**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Algorithm whereby interfaces between crystals were reconstructed. ...

          Algorithm whereby interfaces between crystals were reconstructed.

          * Disorientation clustering groups nearby material points based on their crystallographic disorientation
          * Fast multiscale clustering based on `D. Kushnir et al. <https://doi.org/10.1016/j.patcog.2006.04.007>`_
          * Markov chain clustering `F. Niessen et al. <https://doi.org/10.1107/S1600576721011560>`_

          Any of these values:

            * ``unknown``

            * ``disorientation_clustering``

            * ``fast_multiscale_clustering``

            * ``markov_chain_clustering``


    .. _/NXmicrostructure/configuration/disorientation_threshold-field:

    .. index:: disorientation_threshold (field)

    **disorientation_threshold**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`} 

      .. collapse:: Threshold to define at which disorientation angle to assume two crystalline  ...

          Threshold to define at which disorientation angle to assume two crystalline regions have a significant
          orientation difference that warrants to assume that there exists an interface between the two regions.

  .. _/NXmicrostructure/CG_GRID-group:

  **CG_GRID**: (optional) :ref:`NXcg_grid` 


  .. _/NXmicrostructure/CG_POINT_SET-group:

  **CG_POINT_SET**: (optional) :ref:`NXcg_point_set` 


  .. _/NXmicrostructure/CG_POLYLINE_SET-group:

  **CG_POLYLINE_SET**: (optional) :ref:`NXcg_polyline_set` 


  .. _/NXmicrostructure/CG_TRIANGLE_SET-group:

  **CG_TRIANGLE_SET**: (optional) :ref:`NXcg_triangle_set` 


  .. _/NXmicrostructure/CG_POLYHEDRON_SET-group:

  **CG_POLYHEDRON_SET**: (optional) :ref:`NXcg_polyhedron_set` 


  .. _/NXmicrostructure/crystal-group:

  **crystal**: (optional) :ref:`NXobject` 

    .. collapse:: One- or two-dimensional projections, or three-dimensional representations of c ...

        One- or two-dimensional projections, or three-dimensional representations of crystals.

        An example for a volume bounded by other crystal defects. Crystals can be grains of
        different phases, precipitates, dispersoids; there are many terms used specifically in
        the materials engineering community.

        Typically, crystals are measured on the surface of a sample using with optical or electron microscopy
        represented or simulated as a set of pixel, voxel, or polygons and their polyline boundaries.
        Using X-ray diffraction methods crystals can be observed in bulk specimens.

    .. _/NXmicrostructure/crystal/representation-field:

    .. index:: representation (field)

    **representation**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Reference to an instance of: ...

          Reference to an instance of:

          * :ref:`NXcg_polyline_set` for a one-dimensional representation as only a projection is available (like in linear intercept analysis)
          * :ref`NXcg_polygon_set` for a two-dimensional representation as only a projection is available (like in most experiments)
          * :ref:`NXcg_polyhedron_set` or :ref:`NXcg_grid` for regularly pixelated or voxelated representation in one, two, or three dimensions
            (like in computer simulations or 3D experiments)

          which represent the geometrical entities of the discretization.

    .. _/NXmicrostructure/crystal/number_of_crystals-field:

    .. index:: number_of_crystals (field)

    **number_of_crystals**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: How many crystals are distinguished. ...

          How many crystals are distinguished.

          Crystals are listed irrespective of the phase to which these are assigned.

    .. _/NXmicrostructure/crystal/number_of_phases-field:

    .. index:: number_of_phases (field)

    **number_of_phases**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: How many phases are distinguished. ...

          How many phases are distinguished.

          Phases are typically distinguished based on statistical thermodynamics argument and crystal structure.

    .. _/NXmicrostructure/crystal/crystal_identifier_offset-field:

    .. index:: crystal_identifier_offset (field)

    **crystal_identifier_offset**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      First identifier whereby to identify crystals implicitly.

    .. _/NXmicrostructure/crystal/crystal_identifier-field:

    .. index:: crystal_identifier (field)

    **crystal_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Identifier whereby to identify each crystal explicitly.

    .. _/NXmicrostructure/crystal/phase_identifier_offset-field:

    .. index:: phase_identifier_offset (field)

    **phase_identifier_offset**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      First identifier whereby to identify phases implicitly.

    .. _/NXmicrostructure/crystal/phase_identifier-field:

    .. index:: phase_identifier (field)

    **phase_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Identifier whereby to identify phase for each crystal explicitly.

    .. _/NXmicrostructure/crystal/boundary_contact-field:

    .. index:: boundary_contact (field)

    **boundary_contact**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [i]) 

      .. collapse:: True or false value, one for each crystal, to communicate whether that featu ...

          True or false value, one for each crystal, to communicate whether that feature
          makes contact with the edge of the ROI.

    .. _/NXmicrostructure/crystal/orientation_spread-field:

    .. index:: orientation_spread (field)

    **orientation_spread**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_ANGLE <NX_ANGLE>`} 

      .. collapse:: Average disorientation angle for each crystal between individual orientation ...

          Average disorientation angle for each crystal between individual orientations
          of that crystal evaluated as a summary statistic for all probed positions vs the
          average disorientation of that crystal.

    .. _/NXmicrostructure/crystal/length-field:

    .. index:: length (field)

    **length**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      Length of each crystal

    .. _/NXmicrostructure/crystal/area-field:

    .. index:: area (field)

    **area**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_AREA <NX_AREA>`} 

      Area of each crystal.

    .. _/NXmicrostructure/crystal/volume-field:

    .. index:: volume (field)

    **volume**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_VOLUME <NX_VOLUME>`} 

      Volume of each crystal

  .. _/NXmicrostructure/interface-group:

  **interface**: (optional) :ref:`NXobject` 

    .. collapse:: One- or two-dimensional projections or three-dimensional representation of int ...

        One- or two-dimensional projections or three-dimensional representation of interfaces
        between crystals as topological entities equivalent to dual_junctions.

        An example for a surface defect. Most important are interfaces such as grain and phase boundaries
        but factually interfaces also exist between the environment and crystals exposed at the
        surface of the specimen or internal surfaces like between crystals, cracks and pores.

    .. _/NXmicrostructure/interface/representation-field:

    .. index:: representation (field)

    **representation**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Reference to an instance of: ...

          Reference to an instance of:

          * :ref:`NXcg_point_set` for a one-dimensional representation as only a projection is available (as in linear intercept analyses)
          * :ref:`NXcg_polyline_set` or :ref:`NXcg_polygon_set` for a two-dimensional representation as only a projection is available (like in most experiments)
          * :ref:`NXcg_grid` for regularly pixelated or voxelated representation in one, two, or three dimensions using (boolean) masks
            (like in computer simulations or 3D experiments)

          which represent the geometrical entities of the discretization.

    .. _/NXmicrostructure/interface/number_of_interfaces-field:

    .. index:: number_of_interfaces (field)

    **number_of_interfaces**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      How many interfaces are distinguished.

    .. _/NXmicrostructure/interface/identifier_offset-field:

    .. index:: identifier_offset (field)

    **identifier_offset**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      First identifier whereby to identify interfaces implicitly.

    .. _/NXmicrostructure/interface/identifier-field:

    .. index:: identifier (field)

    **identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Identifier whereby to identify each interface explicitly.

    .. _/NXmicrostructure/interface/crystal_identifier-field:

    .. index:: crystal_identifier (field)

    **crystal_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 2]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Set of pairs of crystal_identifier for each interface.

      .. _/NXmicrostructure/interface/crystal_identifier@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        The specific identifiers whereby to resolve ambiguities.

    .. _/NXmicrostructure/interface/phase_identifier-field:

    .. index:: phase_identifier (field)

    **phase_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 2]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Set of pairs of phase_identifier for each interface.

      .. _/NXmicrostructure/interface/phase_identifier@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        The specific identifiers whereby to resolve ambiguities.

    .. _/NXmicrostructure/interface/triple_junction_identifier-field:

    .. index:: triple_junction_identifier (field)

    **triple_junction_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 2]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Set of pairs of triple_junction_identifier for each interface.

      .. _/NXmicrostructure/interface/triple_junction_identifier@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        The specific identifiers whereby to resolve ambiguities.

    .. _/NXmicrostructure/interface/boundary_contact-field:

    .. index:: boundary_contact (field)

    **boundary_contact**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [i]) 

      .. collapse:: True or false value, one for each crystal, to communicate whether that featu ...

          True or false value, one for each crystal, to communicate whether that feature
          makes contact with the edge of the ROI.

    .. _/NXmicrostructure/interface/surface_energy-field:

    .. index:: surface_energy (field)

    **surface_energy**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

      Gibbs free surface energy for each interface.

    .. _/NXmicrostructure/interface/mobility-field:

    .. index:: mobility (field)

    **mobility**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

      Non-intrinsic mobility of each interface.

    .. _/NXmicrostructure/interface/length-field:

    .. index:: length (field)

    **length**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      .. collapse:: The length of each interface if only projections are available. ...

          The length of each interface if only projections are available.

          This is not necessarily the same as the length of the individual
          polyline segments whereby the interface is discretized.

    .. _/NXmicrostructure/interface/area-field:

    .. index:: area (field)

    **area**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_AREA <NX_AREA>`} 

      The surface area of all interfaces.

  .. _/NXmicrostructure/triple_junction-group:

  **triple_junction**: (optional) :ref:`NXobject` 

    .. collapse:: Projections of or representations of junctions at which three interfaces meet. ...

        Projections of or representations of junctions at which three interfaces meet.

        An example for a line defect. Triple junctions are characterized as triple lines or triple points as their projections,
        or junctions observed between crystals (at the specimen surface exposed to an environment)
        (including wetting phenomena) or inside the specimen (crack, pores).

    .. _/NXmicrostructure/triple_junction/representation-field:

    .. index:: representation (field)

    **representation**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Reference to an instance of: ...

          Reference to an instance of:

          * :ref:`NXcg_point_set` for a one-dimensional representation as only a projection is available (like in most experiments)
          * :ref:`NXcg_polyline_set` for a two-dimensional representation as only a projection is available
          * :ref:`NXcg_polygon_set` for a two-dimensional representation in the (seldom) case of sufficient spatial resolution
            and the line in the projection plane or cases where triple junction locations are approximated e.g. using a set of triangles
          * :ref:`NXcg_polyhedron_set` for a three-dimensional representation via e.g. a representation of Voronoi cells about atoms
          * :ref:`NXcg_grid` for regularly pixelated or voxelated representation in one, two, or three dimensions using (boolean) masks

          which represent the geometrical entities of the discretization.

    .. _/NXmicrostructure/triple_junction/number_of_junctions-field:

    .. index:: number_of_junctions (field)

    **number_of_junctions**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Number of triple junctions.

    .. _/NXmicrostructure/triple_junction/identifier_offset-field:

    .. index:: identifier_offset (field)

    **identifier_offset**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      First identifier to identify triple junctions implicitly.

    .. _/NXmicrostructure/triple_junction/identifier-field:

    .. index:: identifier (field)

    **identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Identifier to identify each triple junction explicitly.

    .. _/NXmicrostructure/triple_junction/location-field:

    .. index:: location (field)

    **location**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Set of identifier for positions whereby to identify the location of each ...

          Set of identifier for positions whereby to identify the location of each
          junction.

      .. _/NXmicrostructure/triple_junction/location@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        The specific identifiers whereby to resolve ambiguities.

    .. _/NXmicrostructure/triple_junction/position-field:

    .. index:: position (field)

    **position**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, d]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      Explicit positions.

    .. _/NXmicrostructure/triple_junction/crystal_identifier-field:

    .. index:: crystal_identifier (field)

    **crystal_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Set of tuples of identifier of crystals connected to the junction for each ...

          Set of tuples of identifier of crystals connected to the junction for each
          triple junction.

    .. _/NXmicrostructure/triple_junction/interface_identifier-field:

    .. index:: interface_identifier (field)

    **interface_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Set of tuples of identifier of interfaces connected to the junction for each ...

          Set of tuples of identifier of interfaces connected to the junction for each
          triple junction.

      .. _/NXmicrostructure/triple_junction/interface_identifier@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        The specific interface identifiers whereby to resolve ambiguities.

    .. _/NXmicrostructure/triple_junction/polyline_identifier-field:

    .. index:: polyline_identifier (field)

    **polyline_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Set of tuples of identifier for polyline segments connected to the junction  ...

          Set of tuples of identifier for polyline segments connected to the junction for
          each triple junction.

      .. _/NXmicrostructure/triple_junction/polyline_identifier@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        The specific polyline identifiers whereby to resolve ambiguities.

    .. _/NXmicrostructure/triple_junction/boundary_contact-field:

    .. index:: boundary_contact (field)

    **boundary_contact**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [i]) 

      .. collapse:: True or false value, one for each crystal, to communicate whether that featu ...

          True or false value, one for each crystal, to communicate whether that feature
          makes contact with the edge of the ROI.

    .. _/NXmicrostructure/triple_junction/line_energy-field:

    .. index:: line_energy (field)

    **line_energy**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

      Specific line energy of each triple junction

    .. _/NXmicrostructure/triple_junction/mobility-field:

    .. index:: mobility (field)

    **mobility**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

      Non-intrinsic mobility of each triple junction.

    .. _/NXmicrostructure/triple_junction/length-field:

    .. index:: length (field)

    **length**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      .. collapse:: The length of each triple junction. ...

          The length of each triple junction.

          This is not necessarily the same as the length of the individual
          polyline segments whereby the junction is discretized.

    .. _/NXmicrostructure/triple_junction/volume-field:

    .. index:: volume (field)

    **volume**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_VOLUME <NX_VOLUME>`} 

      The volume of the each triple junction

  .. _/NXmicrostructure/quadruple_junction-group:

  **quadruple_junction**: (optional) :ref:`NXobject` 

    .. collapse:: Quadruple junctions as a region where four crystals meet. ...

        Quadruple junctions as a region where four crystals meet.

        An example for a point defect.

    .. _/NXmicrostructure/quadruple_junction/representation-field:

    .. index:: representation (field)

    **representation**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Reference to an instance of: ...

          Reference to an instance of:

          * :ref:`NXcg_point_set`
          * :ref:`NXcg_grid` for regularly pixelated or voxelated representation in one, two, or three dimensions using (boolean) masks

    .. _/NXmicrostructure/quadruple_junction/number_of_junctions-field:

    .. index:: number_of_junctions (field)

    **number_of_junctions**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Number of quadruple junctions.

    .. _/NXmicrostructure/quadruple_junction/identifier_offset-field:

    .. index:: identifier_offset (field)

    **identifier_offset**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      First identifier to identify quadruple junctions implicitly.

    .. _/NXmicrostructure/quadruple_junction/identifier-field:

    .. index:: identifier (field)

    **identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Identifier to identify each quadruple junction explicitly.

    .. _/NXmicrostructure/quadruple_junction/location-field:

    .. index:: location (field)

    **location**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Set of identifier for positions whereby to identify the location of each ...

          Set of identifier for positions whereby to identify the location of each
          junction.

      .. _/NXmicrostructure/quadruple_junction/location@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        The specific point identifier whereby to resolve ambiguities.

    .. _/NXmicrostructure/quadruple_junction/position-field:

    .. index:: position (field)

    **position**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      Explicit positions.

    .. _/NXmicrostructure/quadruple_junction/crystal_identifier-field:

    .. index:: crystal_identifier (field)

    **crystal_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 4]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Set of tuples of identifier of crystals connected to the junction for each ...

          Set of tuples of identifier of crystals connected to the junction for each
          junction.

      .. _/NXmicrostructure/quadruple_junction/crystal_identifier@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: The specific identifier to instances of crystal identifiers whereby to res ...

            The specific identifier to instances of crystal identifiers whereby to resolve
            ambiguities.

    .. _/NXmicrostructure/quadruple_junction/interface_identifier-field:

    .. index:: interface_identifier (field)

    **interface_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 4]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Set of tuples of identifier of interfaces connected to the junction for each ...

          Set of tuples of identifier of interfaces connected to the junction for each
          junction.

      .. _/NXmicrostructure/quadruple_junction/interface_identifier@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: The specific identifier to instances of interface identifiers whereby to r ...

            The specific identifier to instances of interface identifiers whereby to resolve
            ambiguities.

    .. _/NXmicrostructure/quadruple_junction/triple_junction_identifier-field:

    .. index:: triple_junction_identifier (field)

    **triple_junction_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Set of tuples of identifier for triple junctions connected to the junction f ...

          Set of tuples of identifier for triple junctions connected to the junction for
          each quadruple junction.

      .. _/NXmicrostructure/quadruple_junction/triple_junction_identifier@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: The specific identifier to instances of triple junction identifiers whereb ...

            The specific identifier to instances of triple junction identifiers whereby to
            resolve ambiguities.

    .. _/NXmicrostructure/quadruple_junction/phase_identifier-field:

    .. index:: phase_identifier (field)

    **phase_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 2, Dimensions: [i, 4]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Set of tuples of identifier for phases of crystals connected to the junction ...

          Set of tuples of identifier for phases of crystals connected to the junction for
          each quadruple junction.

      .. _/NXmicrostructure/quadruple_junction/phase_identifier@use_these-attribute:

      .. index:: use_these (field attribute)

      **@use_these**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: The specific identifier to instances of phase identifier whereby to resolv ...

            The specific identifier to instances of phase identifier whereby to resolve
            ambiguities.

    .. _/NXmicrostructure/quadruple_junction/boundary_contact-field:

    .. index:: boundary_contact (field)

    **boundary_contact**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [i]) 

      .. collapse:: True or false value, one for each crystal, to communicate whether that featu ...

          True or false value, one for each crystal, to communicate whether that feature
          makes contact with the edge of the ROI.

    .. _/NXmicrostructure/quadruple_junction/energy-field:

    .. index:: energy (field)

    **energy**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

      Energy of the quadruple_junction as a defect.

    .. _/NXmicrostructure/quadruple_junction/mobility-field:

    .. index:: mobility (field)

    **mobility**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

      Non-intrinsic mobility of each quadruple_junction.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXmicrostructure/CG_GRID-group </NXmicrostructure/CG_GRID-group>`
* :ref:`/NXmicrostructure/CG_POINT_SET-group </NXmicrostructure/CG_POINT_SET-group>`
* :ref:`/NXmicrostructure/CG_POLYHEDRON_SET-group </NXmicrostructure/CG_POLYHEDRON_SET-group>`
* :ref:`/NXmicrostructure/CG_POLYLINE_SET-group </NXmicrostructure/CG_POLYLINE_SET-group>`
* :ref:`/NXmicrostructure/CG_TRIANGLE_SET-group </NXmicrostructure/CG_TRIANGLE_SET-group>`
* :ref:`/NXmicrostructure/comment-field </NXmicrostructure/comment-field>`
* :ref:`/NXmicrostructure/configuration-group </NXmicrostructure/configuration-group>`
* :ref:`/NXmicrostructure/configuration/algorithm-field </NXmicrostructure/configuration/algorithm-field>`
* :ref:`/NXmicrostructure/configuration/dimensionality-field </NXmicrostructure/configuration/dimensionality-field>`
* :ref:`/NXmicrostructure/configuration/disorientation_threshold-field </NXmicrostructure/configuration/disorientation_threshold-field>`
* :ref:`/NXmicrostructure/crystal-group </NXmicrostructure/crystal-group>`
* :ref:`/NXmicrostructure/crystal/area-field </NXmicrostructure/crystal/area-field>`
* :ref:`/NXmicrostructure/crystal/boundary_contact-field </NXmicrostructure/crystal/boundary_contact-field>`
* :ref:`/NXmicrostructure/crystal/crystal_identifier-field </NXmicrostructure/crystal/crystal_identifier-field>`
* :ref:`/NXmicrostructure/crystal/crystal_identifier_offset-field </NXmicrostructure/crystal/crystal_identifier_offset-field>`
* :ref:`/NXmicrostructure/crystal/length-field </NXmicrostructure/crystal/length-field>`
* :ref:`/NXmicrostructure/crystal/number_of_crystals-field </NXmicrostructure/crystal/number_of_crystals-field>`
* :ref:`/NXmicrostructure/crystal/number_of_phases-field </NXmicrostructure/crystal/number_of_phases-field>`
* :ref:`/NXmicrostructure/crystal/orientation_spread-field </NXmicrostructure/crystal/orientation_spread-field>`
* :ref:`/NXmicrostructure/crystal/phase_identifier-field </NXmicrostructure/crystal/phase_identifier-field>`
* :ref:`/NXmicrostructure/crystal/phase_identifier_offset-field </NXmicrostructure/crystal/phase_identifier_offset-field>`
* :ref:`/NXmicrostructure/crystal/representation-field </NXmicrostructure/crystal/representation-field>`
* :ref:`/NXmicrostructure/crystal/volume-field </NXmicrostructure/crystal/volume-field>`
* :ref:`/NXmicrostructure/date-field </NXmicrostructure/date-field>`
* :ref:`/NXmicrostructure/interface-group </NXmicrostructure/interface-group>`
* :ref:`/NXmicrostructure/interface/area-field </NXmicrostructure/interface/area-field>`
* :ref:`/NXmicrostructure/interface/boundary_contact-field </NXmicrostructure/interface/boundary_contact-field>`
* :ref:`/NXmicrostructure/interface/crystal_identifier-field </NXmicrostructure/interface/crystal_identifier-field>`
* :ref:`/NXmicrostructure/interface/crystal_identifier@use_these-attribute </NXmicrostructure/interface/crystal_identifier@use_these-attribute>`
* :ref:`/NXmicrostructure/interface/identifier-field </NXmicrostructure/interface/identifier-field>`
* :ref:`/NXmicrostructure/interface/identifier_offset-field </NXmicrostructure/interface/identifier_offset-field>`
* :ref:`/NXmicrostructure/interface/length-field </NXmicrostructure/interface/length-field>`
* :ref:`/NXmicrostructure/interface/mobility-field </NXmicrostructure/interface/mobility-field>`
* :ref:`/NXmicrostructure/interface/number_of_interfaces-field </NXmicrostructure/interface/number_of_interfaces-field>`
* :ref:`/NXmicrostructure/interface/phase_identifier-field </NXmicrostructure/interface/phase_identifier-field>`
* :ref:`/NXmicrostructure/interface/phase_identifier@use_these-attribute </NXmicrostructure/interface/phase_identifier@use_these-attribute>`
* :ref:`/NXmicrostructure/interface/representation-field </NXmicrostructure/interface/representation-field>`
* :ref:`/NXmicrostructure/interface/surface_energy-field </NXmicrostructure/interface/surface_energy-field>`
* :ref:`/NXmicrostructure/interface/triple_junction_identifier-field </NXmicrostructure/interface/triple_junction_identifier-field>`
* :ref:`/NXmicrostructure/interface/triple_junction_identifier@use_these-attribute </NXmicrostructure/interface/triple_junction_identifier@use_these-attribute>`
* :ref:`/NXmicrostructure/iteration-field </NXmicrostructure/iteration-field>`
* :ref:`/NXmicrostructure/quadruple_junction-group </NXmicrostructure/quadruple_junction-group>`
* :ref:`/NXmicrostructure/quadruple_junction/boundary_contact-field </NXmicrostructure/quadruple_junction/boundary_contact-field>`
* :ref:`/NXmicrostructure/quadruple_junction/crystal_identifier-field </NXmicrostructure/quadruple_junction/crystal_identifier-field>`
* :ref:`/NXmicrostructure/quadruple_junction/crystal_identifier@use_these-attribute </NXmicrostructure/quadruple_junction/crystal_identifier@use_these-attribute>`
* :ref:`/NXmicrostructure/quadruple_junction/energy-field </NXmicrostructure/quadruple_junction/energy-field>`
* :ref:`/NXmicrostructure/quadruple_junction/identifier-field </NXmicrostructure/quadruple_junction/identifier-field>`
* :ref:`/NXmicrostructure/quadruple_junction/identifier_offset-field </NXmicrostructure/quadruple_junction/identifier_offset-field>`
* :ref:`/NXmicrostructure/quadruple_junction/interface_identifier-field </NXmicrostructure/quadruple_junction/interface_identifier-field>`
* :ref:`/NXmicrostructure/quadruple_junction/interface_identifier@use_these-attribute </NXmicrostructure/quadruple_junction/interface_identifier@use_these-attribute>`
* :ref:`/NXmicrostructure/quadruple_junction/location-field </NXmicrostructure/quadruple_junction/location-field>`
* :ref:`/NXmicrostructure/quadruple_junction/location@use_these-attribute </NXmicrostructure/quadruple_junction/location@use_these-attribute>`
* :ref:`/NXmicrostructure/quadruple_junction/mobility-field </NXmicrostructure/quadruple_junction/mobility-field>`
* :ref:`/NXmicrostructure/quadruple_junction/number_of_junctions-field </NXmicrostructure/quadruple_junction/number_of_junctions-field>`
* :ref:`/NXmicrostructure/quadruple_junction/phase_identifier-field </NXmicrostructure/quadruple_junction/phase_identifier-field>`
* :ref:`/NXmicrostructure/quadruple_junction/phase_identifier@use_these-attribute </NXmicrostructure/quadruple_junction/phase_identifier@use_these-attribute>`
* :ref:`/NXmicrostructure/quadruple_junction/position-field </NXmicrostructure/quadruple_junction/position-field>`
* :ref:`/NXmicrostructure/quadruple_junction/representation-field </NXmicrostructure/quadruple_junction/representation-field>`
* :ref:`/NXmicrostructure/quadruple_junction/triple_junction_identifier-field </NXmicrostructure/quadruple_junction/triple_junction_identifier-field>`
* :ref:`/NXmicrostructure/quadruple_junction/triple_junction_identifier@use_these-attribute </NXmicrostructure/quadruple_junction/triple_junction_identifier@use_these-attribute>`
* :ref:`/NXmicrostructure/time-field </NXmicrostructure/time-field>`
* :ref:`/NXmicrostructure/triple_junction-group </NXmicrostructure/triple_junction-group>`
* :ref:`/NXmicrostructure/triple_junction/boundary_contact-field </NXmicrostructure/triple_junction/boundary_contact-field>`
* :ref:`/NXmicrostructure/triple_junction/crystal_identifier-field </NXmicrostructure/triple_junction/crystal_identifier-field>`
* :ref:`/NXmicrostructure/triple_junction/identifier-field </NXmicrostructure/triple_junction/identifier-field>`
* :ref:`/NXmicrostructure/triple_junction/identifier_offset-field </NXmicrostructure/triple_junction/identifier_offset-field>`
* :ref:`/NXmicrostructure/triple_junction/interface_identifier-field </NXmicrostructure/triple_junction/interface_identifier-field>`
* :ref:`/NXmicrostructure/triple_junction/interface_identifier@use_these-attribute </NXmicrostructure/triple_junction/interface_identifier@use_these-attribute>`
* :ref:`/NXmicrostructure/triple_junction/length-field </NXmicrostructure/triple_junction/length-field>`
* :ref:`/NXmicrostructure/triple_junction/line_energy-field </NXmicrostructure/triple_junction/line_energy-field>`
* :ref:`/NXmicrostructure/triple_junction/location-field </NXmicrostructure/triple_junction/location-field>`
* :ref:`/NXmicrostructure/triple_junction/location@use_these-attribute </NXmicrostructure/triple_junction/location@use_these-attribute>`
* :ref:`/NXmicrostructure/triple_junction/mobility-field </NXmicrostructure/triple_junction/mobility-field>`
* :ref:`/NXmicrostructure/triple_junction/number_of_junctions-field </NXmicrostructure/triple_junction/number_of_junctions-field>`
* :ref:`/NXmicrostructure/triple_junction/polyline_identifier-field </NXmicrostructure/triple_junction/polyline_identifier-field>`
* :ref:`/NXmicrostructure/triple_junction/polyline_identifier@use_these-attribute </NXmicrostructure/triple_junction/polyline_identifier@use_these-attribute>`
* :ref:`/NXmicrostructure/triple_junction/position-field </NXmicrostructure/triple_junction/position-field>`
* :ref:`/NXmicrostructure/triple_junction/representation-field </NXmicrostructure/triple_junction/representation-field>`
* :ref:`/NXmicrostructure/triple_junction/volume-field </NXmicrostructure/triple_junction/volume-field>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXmicrostructure.nxdl.xml
