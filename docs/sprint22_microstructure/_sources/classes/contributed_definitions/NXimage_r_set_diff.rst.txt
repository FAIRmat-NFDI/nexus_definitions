.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXimage_r_set_diff.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXimage_r_set_diff (base class)
    ! image_r_set_diff (base class)
    see: image_r_set_diff (base class); NXimage_r_set_diff

.. _NXimage_r_set_diff:

==================
NXimage_r_set_diff
==================

**Status**:

  base class, extends :ref:`NXimage_r_set`

**Description**:

  .. collapse:: Base class specialized for reporting a cuboidal stack of diffraction pattern. ...

      Base class specialized for reporting a cuboidal stack of diffraction pattern.

      Diffraction pattern, whether they were simulated or measured are the raw data
      for computational workflows to characterize the phase and orientation
      of crystalline regions in matter.

      Steps of post-processing the diffraction patterns should be documented using
      method-specific specialized base classes. All eventual post-processing of
      resulting orientation maps (2D or 3D) should be documented via NXmicrostructure.

      To implement an example how this base class can be used we focused in FAIRmat
      on Kikuchi diffraction pattern here specifically the research community
      of Electron Backscatter Diffraction (EBSD).

      For this reason, this base class and the :ref:`NXem_ebsd` base class extend the
      work of `M. A. Jackson et al. <https://doi.org/10.1186/2193-9772-3-4>`_
      (one of the developers of DREAM.3D) and the H5OINA public file format developed by
      `P. Pinard et al. <https://doi.org/10.1017/S1431927621006103>`_ with Oxford Instruments.

      Kikuchi pattern are typically collected with FIB/SEM microscopes,
      for two- and three-dimensional orientation microscopy.

      For a detailed overview of these techniques see e.g.

      * `M. A. Groeber et al. <https://doi.org/10.1186/2193-9772-3-5>`_
      * `A. J. Schwartz et al. <https://doi.org/10.1007/978-1-4757-3205-4>`_
      * `P. A. Rottman et al. <https://doi.org/10.1016/j.mattod.2021.05.003>`_

      Serial-sectioning demands a recurrent sequence of ion milling and measuring.
      This suggests that each serial section is at least an own NXevent_data_em
      instance. The three-dimensional characterization as such demands a computational
      step where the maps for each serial section get cleaned, aligned, and registered
      into an image stack. This image stack represents a digital model of the
      inspected microstructural volume. Often this volume is called a (representative)
      volume element (RVE). Several software packages exists for performing
      these post-processing tasks.

      This example may inspire users of other types of diffraction methods.

**Symbols**:


  **n_sc**: Number of scanned points. Scan point may have none, one, or more pattern.

  **n_p**: Number of diffraction pattern.

  **n_y**: Number of pixel per pattern in the slow direction.

  **n_x**: Number of pixel per pattern in the fast direction.

**Groups cited**:
  :ref:`NXdata`

.. index:: NXdata (base class); used in base class

**Structure**:

  .. _/NXimage_r_set_diff/pattern_type-field:

  .. index:: pattern_type (field)

  **pattern_type**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Category which type of diffraction pattern is reported. ...

        Category which type of diffraction pattern is reported.

        Obligatory value: ``kikuchi``

  .. _/NXimage_r_set_diff/stack-group:

  **stack**: (optional) :ref:`NXdata` 

    .. collapse:: Collected diffraction pattern as an image stack. As raw and closest to the ...

        Collected diffraction pattern as an image stack. As raw and closest to the
        first retrievable measured data as possible, i.e. do not use this
        container to store already averaged, filtered or whatever post-processed
        pattern unless these are generated unmodifiably in such manner by the
        instrument given the way how the instrument and control software
        was configured for your microscope session.

    .. _/NXimage_r_set_diff/stack/scan_point_identifier-field:

    .. index:: scan_point_identifier (field)

    **scan_point_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [n_p]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Array which resolves the scan point to which each pattern belongs. ...

          Array which resolves the scan point to which each pattern belongs.

          Scan points are evaluated in sequence starting from scan point zero
          until scan point n_sc - 1. Evaluating the cumulated of this array
          decodes which pattern in intensity belongs to which scan point.

          Take an example with three scan points: The first scan point has one
          pattern, the second has three pattern, the last scan point has no
          pattern. In this case the scan_point_identifier are 0, 1, 1, 1.
          The length of the scan_point_identifier array is four because four
          pattern were measured in total.

          In most cases usually one pattern is averaged by the detector for
          some amount of time and then reported as one pattern.

    .. _/NXimage_r_set_diff/stack/intensity-field:

    .. index:: intensity (field)

    **intensity**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 3, Dimensions: [n_p, n_y, n_x]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXdata/AXISNAME-field>`

      Intensity of the diffraction pattern.

      .. _/NXimage_r_set_diff/stack/intensity@long_name-attribute:

      .. index:: long_name (field attribute)

      **@long_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXdata/AXISNAME@long_name-attribute>`

        Pattern intensity

    .. _/NXimage_r_set_diff/stack/pattern_identifier-field:

    .. index:: pattern_identifier (field)

    **pattern_identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [n_p]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Pattern are enumerated starting from 0 to n_p - 1.

      .. _/NXimage_r_set_diff/stack/pattern_identifier@long_name-attribute:

      .. index:: long_name (field attribute)

      **@long_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        Pattern identifier


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXimage_r_set_diff/pattern_type-field </NXimage_r_set_diff/pattern_type-field>`
* :ref:`/NXimage_r_set_diff/stack-group </NXimage_r_set_diff/stack-group>`
* :ref:`/NXimage_r_set_diff/stack/intensity-field </NXimage_r_set_diff/stack/intensity-field>`
* :ref:`/NXimage_r_set_diff/stack/intensity@long_name-attribute </NXimage_r_set_diff/stack/intensity@long_name-attribute>`
* :ref:`/NXimage_r_set_diff/stack/pattern_identifier-field </NXimage_r_set_diff/stack/pattern_identifier-field>`
* :ref:`/NXimage_r_set_diff/stack/pattern_identifier@long_name-attribute </NXimage_r_set_diff/stack/pattern_identifier@long_name-attribute>`
* :ref:`/NXimage_r_set_diff/stack/scan_point_identifier-field </NXimage_r_set_diff/stack/scan_point_identifier-field>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXimage_r_set_diff.nxdl.xml
