.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXapm_paraprobe_clusterer_results.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXapm_paraprobe_clusterer_results (application definition)
    ! apm_paraprobe_clusterer_results (application definition)
    see: apm_paraprobe_clusterer_results (application definition); NXapm_paraprobe_clusterer_results

.. _NXapm_paraprobe_clusterer_results:

=================================
NXapm_paraprobe_clusterer_results
=================================

**Status**:

  application definition, extends :ref:`NXobject`

**Description**:

  .. collapse:: Application definition for results files of the paraprobe-spatstat tool. ...

      Application definition for results files of the paraprobe-spatstat tool.

      This tool is part of the paraprobe-toolbox. Inspect the base class :ref:`NXapm_paraprobe_tool_results`.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **n_ions**: The total number of ions in the reconstruction.

  **n_feat**: Number of clusters found.

**Groups cited**:
  :ref:`NXapm_paraprobe_tool_common`, :ref:`NXapm_paraprobe_tool_results`, :ref:`NXcoordinate_system_set`, :ref:`NXcoordinate_system`, :ref:`NXcs_filter_boolean_mask`, :ref:`NXcs_profiling`, :ref:`NXentry`, :ref:`NXprocess`, :ref:`NXprogram`, :ref:`NXserialized`, :ref:`NXsimilarity_grouping`, :ref:`NXuser`

.. index:: NXentry (base class); used in application definition, NXapm_paraprobe_tool_results (base class); used in application definition, NXserialized (base class); used in application definition, NXcs_filter_boolean_mask (base class); used in application definition, NXsimilarity_grouping (base class); used in application definition, NXprocess (base class); used in application definition, NXapm_paraprobe_tool_common (base class); used in application definition, NXprogram (base class); used in application definition, NXcs_profiling (base class); used in application definition, NXuser (base class); used in application definition, NXcoordinate_system_set (base class); used in application definition, NXcoordinate_system (base class); used in application definition

**Structure**:

  .. _/NXapm_paraprobe_clusterer_results/ENTRY-group:

  **ENTRY**: (required) :ref:`NXentry` 


    .. _/NXapm_paraprobe_clusterer_results/ENTRY/definition-field:

    .. index:: definition (field)

    **definition**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXentry/definition-field>`


      Obligatory value: ``NXapm_paraprobe_clusterer_results``

      .. _/NXapm_paraprobe_clusterer_results/ENTRY/definition@version-attribute:

      .. index:: version (field attribute)

      **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXentry/definition@version-attribute>`


    .. _/NXapm_paraprobe_clusterer_results/ENTRY/cameca_to_nexus-group:

    **cameca_to_nexus**: (optional) :ref:`NXapm_paraprobe_tool_results` 


    .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID-group:

    **cluster_analysisID**: (optional) :ref:`NXapm_paraprobe_tool_results` 


      .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/analysis_identifier-field:

      .. index:: analysis_identifier (field)

      **analysis_identifier**: (required) :ref:`NX_UINT <NX_UINT>` 


      .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config-group:

      **config**: (required) :ref:`NXserialized` 


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/type-field:

        .. index:: type (field)

        **type**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/type-field>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/path-field:

        .. index:: path (field)

        **path**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/path-field>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/checksum-field:

        .. index:: checksum (field)

        **checksum**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/checksum-field>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/algorithm-field:

        .. index:: algorithm (field)

        **algorithm**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/algorithm-field>`


      .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window-group:

      **window**: (required) :ref:`NXcs_filter_boolean_mask` :ref:`⤆ </NXapm_paraprobe_tool_results/window-group>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window/number_of_ions-field:

        .. index:: number_of_ions (field)

        **number_of_ions**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_results/window/number_of_ions-field>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window/bitdepth-field:

        .. index:: bitdepth (field)

        **bitdepth**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_results/window/bitdepth-field>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window/mask-field:

        .. index:: mask (field)

        **mask**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_results/window/mask-field>`


      .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID-group:

      **dbscanID**: (optional) :ref:`NXsimilarity_grouping` 

        Results of a DBScan clustering analysis.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/eps-field:

        .. index:: eps (field)

        **eps**: (required) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

          The epsilon (eps) parameter used.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/min_pts-field:

        .. index:: min_pts (field)

        **min_pts**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

          The minimum points (min_pts) parameter used.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/cardinality-field:

        .. index:: cardinality (field)

        **cardinality**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXsimilarity_grouping/cardinality-field>`

          .. collapse:: Number of members in the set which is partitioned into features. ...

              Number of members in the set which is partitioned into features.
              Specifically, this is the total number of targets filtered from the
              dataset, i.e. typically the number of clusters which is usually not and
              for sure not necessarily the total number of ions in the dataset.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/identifier_offset-field:

        .. index:: identifier_offset (field)

        **identifier_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXsimilarity_grouping/identifier_offset-field>`

          .. collapse:: Which identifier is the first to be used to label a cluster. ...

              Which identifier is the first to be used to label a cluster.

              The value should be chosen in such a way that special values can be resolved:
              * identifier_offset - 1 indicates an object belongs to no cluster.
              * identifier_offset - 2 indicates an object belongs to the noise category.

              Setting for instance identifier_offset to 1 recovers the commonly used
              case that objects of the noise category get the value of -1 and points of the
              unassigned category get the value 0.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/targets-field:

        .. index:: targets (field)

        **targets**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

          .. collapse:: The evaporation (sequence) identifier (aka evaporation_id) to figure out ...

              The evaporation (sequence) identifier (aka evaporation_id) to figure out
              which ions from the reconstruction were considered targets. The length
              of this array is not necessarily n_ions.
              Instead, it is the value of cardinality.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/number_of_solutions-field:

        .. index:: number_of_solutions (field)

        **number_of_solutions**: (optional) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [i]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

          .. collapse:: The number of solutions found for each target. Typically, ...

              The number of solutions found for each target. Typically,
              this value is 1 in which case the field can be omitted.
              Otherwise, this array is the concatenated set of values of solution
              tuples for each target that can be used to decode model_labels,
              core_sample_indices, and weight.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/model_labels-field:

        .. index:: model_labels (field)

        **model_labels**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [k]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

          .. collapse:: The raw labels from the DBScan clustering backend process. ...

              The raw labels from the DBScan clustering backend process.
              The length of this array is not necessarily n_ions.
              Instead, it is typically the value of cardinality provided that each
              target has only one associated cluster. If targets are assigned to
              multiple cluster this array is as long as the total number of solutions
              found and

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/core_sample_indices-field:

        .. index:: core_sample_indices (field)

        **core_sample_indices**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [k]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

          .. collapse:: The raw array of core sample indices which specify which of the ...

              The raw array of core sample indices which specify which of the
              targets are core points.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/numerical_labels-field:

        .. index:: numerical_labels (field)

        **numerical_labels**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [k]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

          Numerical label for each target (member in the set) aka cluster identifier.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/categorical_labels-field:

        .. index:: categorical_labels (field)

        **categorical_labels**: (optional) :ref:`NX_CHAR <NX_CHAR>` (Rank: 1, Dimensions: [k]) 

          Categorical label(s) for each target (member in the set) aka cluster name(s).

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/weights-field:

        .. index:: weights (field)

        **weights**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [k]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

          .. collapse:: Weights for each target that specifies how probable the target is assign ...

              Weights for each target that specifies how probable the target is assigned to
              a specific cluster.

              For the DBScan algorithm and atom probe tomography this value is the
              multiplicity of each ion with respect to the cluster. That is how many times
              should the position of the ion be accounted for because the ion is e.g. a
              molecular ion with several elements or nuclides of requested type.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/is_noise-field:

        .. index:: is_noise (field)

        **is_noise**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [k]) 

          Are targets assigned to the noise category or not.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/is_core-field:

        .. index:: is_core (field)

        **is_core**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [k]) 

          Are targets assumed a core point.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics-group:

        **statistics**: (recommended) :ref:`NXprocess` :ref:`⤆ </NXsimilarity_grouping/statistics-group>`

          .. collapse:: In addition to the detailed storage which members were grouped to which ...

              In addition to the detailed storage which members were grouped to which
              feature here summary statistics are stored that communicate e.g. how many
              cluster were found.

          .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_targets-field:

          .. index:: number_of_targets (field)

          **number_of_targets**: (required) :ref:`NX_UINT <NX_UINT>` 

            .. collapse:: Total number of targets in the set, i.e. ions that were filtered ...

                Total number of targets in the set, i.e. ions that were filtered
                and considered in this cluster analysis.

          .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_noise-field:

          .. index:: number_of_noise (field)

          **number_of_noise**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

            Total number of members in the set which are categorized as noise.

          .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_core-field:

          .. index:: number_of_core (field)

          **number_of_core**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

            Total number of members in the set which are categorized as a core point.

          .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_features-field:

          .. index:: number_of_features (field)

          **number_of_features**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

            Total number of clusters (excluding noise and unassigned).

          .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/feature_identifier-field:

          .. index:: feature_identifier (field)

          **feature_identifier**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_feat]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

            Numerical identifier of each feature aka cluster_identifier.

          .. _/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/feature_member_count-field:

          .. index:: feature_member_count (field)

          **feature_member_count**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_feat]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

            Number of members for each feature.

    .. _/NXapm_paraprobe_clusterer_results/ENTRY/common-group:

    **common**: (required) :ref:`NXapm_paraprobe_tool_common` 


      .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/status-field:

      .. index:: status (field)

      **status**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_paraprobe_tool_common/status-field>`


      .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/programID-group:

      **programID**: (required) :ref:`NXprogram` :ref:`⤆ </NXapm_paraprobe_tool_common/PROGRAM-group>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/programID/program-field:

        .. index:: program (field)

        **program**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXprogram/program-field>`


          .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/programID/program@version-attribute:

          .. index:: version (field attribute)

          **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXprogram/program@version-attribute>`


      .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling-group:

      **profiling**: (recommended) :ref:`NXcs_profiling` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling-group>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/start_time-field:

        .. index:: start_time (field)

        **start_time**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/start_time-field>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/end_time-field:

        .. index:: end_time (field)

        **end_time**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/end_time-field>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/total_elapsed_time-field:

        .. index:: total_elapsed_time (field)

        **total_elapsed_time**: (required) :ref:`NX_FLOAT <NX_FLOAT>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/total_elapsed_time-field>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/current_working_directory-field:

        .. index:: current_working_directory (field)

        **current_working_directory**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcs_profiling/current_working_directory-field>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/number_of_processes-field:

        .. index:: number_of_processes (field)

        **number_of_processes**: (required) :ref:`NX_POSINT <NX_POSINT>` 


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/number_of_threads-field:

        .. index:: number_of_threads (field)

        **number_of_threads**: (required) :ref:`NX_POSINT <NX_POSINT>` 


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/number_of_gpus-field:

        .. index:: number_of_gpus (field)

        **number_of_gpus**: (required) :ref:`NX_POSINT <NX_POSINT>` 


      .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/userID-group:

      **userID**: (optional) :ref:`NXuser` :ref:`⤆ </NXapm_paraprobe_tool_common/USER-group>`

        If used, metadata of at least the person who performed this analysis.

        .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/userID/name-field:

        .. index:: name (field)

        **name**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXuser/name-field>`


      .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set-group:

      **coordinate_system_set**: (required) :ref:`NXcoordinate_system_set` :ref:`⤆ </NXapm_paraprobe_tool_common/COORDINATE_SYSTEM_SET-group>`


        .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe-group:

        **paraprobe**: (required) :ref:`NXcoordinate_system` :ref:`⤆ </NXapm_paraprobe_tool_common/COORDINATE_SYSTEM_SET/COORDINATE_SYSTEM-group>`


          .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/type-field:

          .. index:: type (field)

          **type**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcoordinate_system/type-field>`


          .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/handedness-field:

          .. index:: handedness (field)

          **handedness**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcoordinate_system/handedness-field>`


          .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/x-field:

          .. index:: x (field)

          **x**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXcoordinate_system/x-field>`


          .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/y-field:

          .. index:: y (field)

          **y**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXcoordinate_system/y-field>`


          .. _/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/z-field:

          .. index:: z (field)

          **z**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXcoordinate_system/z-field>`



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY-group </NXapm_paraprobe_clusterer_results/ENTRY-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cameca_to_nexus-group </NXapm_paraprobe_clusterer_results/ENTRY/cameca_to_nexus-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID-group </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/analysis_identifier-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/analysis_identifier-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config-group </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/algorithm-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/algorithm-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/checksum-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/checksum-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/path-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/path-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/type-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/config/type-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID-group </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/cardinality-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/cardinality-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/categorical_labels-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/categorical_labels-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/core_sample_indices-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/core_sample_indices-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/eps-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/eps-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/identifier_offset-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/identifier_offset-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/is_core-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/is_core-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/is_noise-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/is_noise-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/min_pts-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/min_pts-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/model_labels-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/model_labels-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/number_of_solutions-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/number_of_solutions-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/numerical_labels-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/numerical_labels-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics-group </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/feature_identifier-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/feature_identifier-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/feature_member_count-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/feature_member_count-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_core-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_core-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_features-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_features-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_noise-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_noise-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_targets-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/statistics/number_of_targets-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/targets-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/targets-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/weights-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/dbscanID/weights-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window-group </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window/bitdepth-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window/bitdepth-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window/mask-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window/mask-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window/number_of_ions-field </NXapm_paraprobe_clusterer_results/ENTRY/cluster_analysisID/window/number_of_ions-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common-group </NXapm_paraprobe_clusterer_results/ENTRY/common-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set-group </NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe-group </NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/handedness-field </NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/handedness-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/type-field </NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/type-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/x-field </NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/x-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/y-field </NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/y-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/z-field </NXapm_paraprobe_clusterer_results/ENTRY/common/coordinate_system_set/paraprobe/z-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling-group </NXapm_paraprobe_clusterer_results/ENTRY/common/profiling-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/current_working_directory-field </NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/current_working_directory-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/end_time-field </NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/end_time-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/number_of_gpus-field </NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/number_of_gpus-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/number_of_processes-field </NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/number_of_processes-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/number_of_threads-field </NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/number_of_threads-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/start_time-field </NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/start_time-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/total_elapsed_time-field </NXapm_paraprobe_clusterer_results/ENTRY/common/profiling/total_elapsed_time-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/programID-group </NXapm_paraprobe_clusterer_results/ENTRY/common/programID-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/programID/program-field </NXapm_paraprobe_clusterer_results/ENTRY/common/programID/program-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/programID/program@version-attribute </NXapm_paraprobe_clusterer_results/ENTRY/common/programID/program@version-attribute>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/status-field </NXapm_paraprobe_clusterer_results/ENTRY/common/status-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/userID-group </NXapm_paraprobe_clusterer_results/ENTRY/common/userID-group>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/common/userID/name-field </NXapm_paraprobe_clusterer_results/ENTRY/common/userID/name-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/definition-field </NXapm_paraprobe_clusterer_results/ENTRY/definition-field>`
* :ref:`/NXapm_paraprobe_clusterer_results/ENTRY/definition@version-attribute </NXapm_paraprobe_clusterer_results/ENTRY/definition@version-attribute>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXapm_paraprobe_clusterer_results.nxdl.xml
