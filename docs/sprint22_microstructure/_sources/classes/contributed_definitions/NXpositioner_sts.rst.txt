.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXpositioner_sts.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXpositioner_sts (base class)
    ! positioner_sts (base class)
    see: positioner_sts (base class); NXpositioner_sts

.. _NXpositioner_sts:

================
NXpositioner_sts
================

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  A generic positioner such as a motor or piezo-electric transducer.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXtransformations`

.. index:: NXtransformations (base class); used in base class

**Structure**:

  .. _/NXpositioner_sts@default-attribute:

  .. index:: default (file attribute)

  **@default**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Declares which child group contains a path leading ...

        .. index:: plotting

        Declares which child group contains a path leading
        to a :ref:`NXdata` group.

        It is recommended (as of NIAC2014) to use this attribute
        to help define the path to the default dataset to be plotted.
        See https://www.nexusformat.org/2014_How_to_find_default_data.html
        for a summary of the discussion.

  .. _/NXpositioner_sts/name-field:

  .. index:: name (field)

  **name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    symbolic or mnemonic name (one word)

  .. _/NXpositioner_sts/description-field:

  .. index:: description (field)

  **description**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    description of positioner

  .. _/NXpositioner_sts/value-field:

  .. index:: value (field)

  **value**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

    best known value of positioner - need [n] as may be scanned

  .. _/NXpositioner_sts/raw_value-field:

  .. index:: raw_value (field)

  **raw_value**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

    raw value of positioner - need [n] as may be scanned

  .. _/NXpositioner_sts/target_value-field:

  .. index:: target_value (field)

  **target_value**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

    targeted (commanded) value of positioner - need [n] as may be scanned

  .. _/NXpositioner_sts/tolerance-field:

  .. index:: tolerance (field)

  **tolerance**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

    maximum allowable difference between target_value and value

  .. _/NXpositioner_sts/soft_limit_min-field:

  .. index:: soft_limit_min (field)

  **soft_limit_min**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANY <NX_ANY>`} 

    minimum allowed limit to set value

  .. _/NXpositioner_sts/soft_limit_max-field:

  .. index:: soft_limit_max (field)

  **soft_limit_max**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANY <NX_ANY>`} 

    maximum allowed limit to set value

  .. _/NXpositioner_sts/velocity-field:

  .. index:: velocity (field)

  **velocity**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANY <NX_ANY>`} 

    velocity of the positioner (distance moved per unit time)

  .. _/NXpositioner_sts/acceleration_time-field:

  .. index:: acceleration_time (field)

  **acceleration_time**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANY <NX_ANY>`} 

    time to ramp the velocity up to full speed

  .. _/NXpositioner_sts/controller_record-field:

  .. index:: controller_record (field)

  **controller_record**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Hardware device record, e.g. EPICS process variable, taco/tango ...

  .. _/NXpositioner_sts/depends_on-field:

  .. index:: depends_on (field)

  **depends_on**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: NeXus positions components by applying a set of translations and rotations ...

        NeXus positions components by applying a set of translations and rotations
        to apply to the component starting from 0, 0, 0. The order of these operations
        is critical and forms what NeXus calls a dependency chain. The depends_on
        field defines the path to the top most operation of the dependency chain or the
        string "." if located in the origin. Usually these operations are stored in a
        NXtransformations group. But NeXus allows them to be stored anywhere.

        .. todo::
           Add a definition for the reference point of a positioner.

  .. _/NXpositioner_sts/z_contronller-field:

  .. index:: z_contronller (field)

  **z_contronller**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` 

    .. collapse:: This controllers task is to continuously adjust the Z position of the stm tip  ...

        This controllers task is to continuously adjust the Z position of the stm tip in order 
        to keep the selected control signal as close as possible to the Set Point. Different control
        signals lead to different contronller beahvior.

  .. _/NXpositioner_sts/z_offset-field:

  .. index:: z_offset (field)

  **z_offset**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    Offset added to the initial averaged position Zaver before starting to swepp.

  .. _/NXpositioner_sts/tip_position_z-field:

  .. index:: tip_position_z (field)

  **tip_position_z**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Indicate the tip position Z between tip and sample. The tip position can also  ...

        Indicate the tip position Z between tip and sample. The tip position can also be varied when
        the controller is not running.

  .. _/NXpositioner_sts/controller_name-field:

  .. index:: controller_name (field)

  **controller_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Controller name. This name which will be displayed at places where you can sel ...

        Controller name. This name which will be displayed at places where you can select a 
        controller.

  .. _/NXpositioner_sts/setpoint-field:

  .. index:: setpoint (field)

  **setpoint**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_CURRENT <NX_CURRENT>`} 

    .. collapse:: Set Point is the desired value of the control signal. It can be set by editing ...

        Set Point is the desired value of the control signal. It can be set by editing the number
        or using the slider bar. Click the "Set" button above the input field to use the actual 
        value as Set Point. The slider shows the Set Point as well as the current value.

  .. _/NXpositioner_sts/tip_lift-field:

  .. index:: tip_lift (field)

  **tip_lift**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Lifts the tip by the specified amount when then controller is switched off. Th ...

        Lifts the tip by the specified amount when then controller is switched off. This can be
        a positive or a negative number, i.e. the tip can also be moved towards the sample. Be
        careful with sign and value when using this feature.

  .. _/NXpositioner_sts/switch_off_delay-field:

  .. index:: switch_off_delay (field)

  **switch_off_delay**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_TIME <NX_TIME>`} 

    .. collapse:: Use this parameter for a reproducible position when switching off the Z-contro ...

        Use this parameter for a reproducible position when switching off the Z-controller. 
        When >0 and the Z-controller is switched off, it doesn't switch off immediately but continues
        to run for the specified time and averages the Z position.

  .. _/NXpositioner_sts/z_controller_hold-field:

  .. index:: z_controller_hold (field)

  **z_controller_hold**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

    .. collapse:: (In bias spectroscopy) Select whether to set the Z-Controller on hold (i.e. di ...

        (In bias spectroscopy) Select whether to set the Z-Controller on hold (i.e. disabled) during
        the sweep. It is selected by default. When deselected, Z-offset and Z control time parameters
        are disabled.

  .. _/NXpositioner_sts/final_z-field:

  .. index:: final_z (field)

  **final_z**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: The final z-position during the bias spectroscopy scan. The availability of va ...

        The final z-position during the bias spectroscopy scan. The availability of values is 
        related to the mode of scanning.

  .. _/NXpositioner_sts/scanfield-field:

  .. index:: scanfield (field)

  **scanfield**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    Configure the scan frame like x position; y position; width; height.

  .. _/NXpositioner_sts/pixels_line-field:

  .. index:: pixels_line (field)

  **pixels_line**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_COUNT <NX_COUNT>`} 

    Scan resolution by setting the Lines equal to Pixels.

  .. _/NXpositioner_sts/lines-field:

  .. index:: lines (field)

  **lines**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANY <NX_ANY>`} 

    Define the image resolution.

  .. _/NXpositioner_sts/speed_forw-field:

  .. index:: speed_forw (field)

  **speed_forw**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANY <NX_ANY>`} 

    Define the scan forward speed in the forward direction.

  .. _/NXpositioner_sts/speed_backw-field:

  .. index:: speed_backw (field)

  **speed_backw**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANY <NX_ANY>`} 

    Define the scan backward speed in the forward direction.

  .. _/NXpositioner_sts/piezo_calibration-field:

  .. index:: piezo_calibration (field)

  **piezo_calibration**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Piezo calibration module is used to define the X Y Z piezos calibration.

  .. _/NXpositioner_sts/active_calib-field:

  .. index:: active_calib (field)

  **active_calib**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    The name of caliberation type.

  .. _/NXpositioner_sts/calib_N-field:

  .. index:: calib_N (field)

  **calib_N**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` 


  .. _/NXpositioner_sts/p_gain-field:

  .. index:: p_gain (field)

  **p_gain**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: The Type switches controller parameters between :math:`P/I` (proportional gain ...

        The Type switches controller parameters between :math:`P/I` (proportional gain/integral gain) and :math:`P/T` 
        (proportional gain/time constant). The formula for the controller in the frequency domain is:
        :math:`G(s) = P + I/s = P(1 + 1/(Ts))`. 
        The integral gain and time constant are related as follows: :math:`I = P/T`.

  .. _/NXpositioner_sts/i_gain-field:

  .. index:: i_gain (field)

  **i_gain**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: The Type switches controller parameters between :math:`P/I` (proportional gain ...

        The Type switches controller parameters between :math:`P/I` (proportional gain/integral gain) and
        P/T (proportional gain/time constant). The formula for the controller in the frequency 
        domain is: :math:`G(s) = P + I/s = P(1 + 1/(Ts))`. The integral gain and time constant are related
        as follows: `:math:I = P/T`.

  .. _/NXpositioner_sts/time_const-field:

  .. index:: time_const (field)

  **time_const**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_TIME <NX_TIME>`} 

    .. collapse:: The Type switches controller parameters between :math:`P/I` (proportional gain ...

        The Type switches controller parameters between :math:`P/I` (proportional gain/integral gain) and 
        :math:`P/T` (proportional gain/time constant). The formula for the controller in the frequency 
        domain is: :math:`G(s) = P + I/s = P(1 + 1/(Ts))`. The integral gain and time constant are related
        as follows: :math:`I = P/T`.

  .. _/NXpositioner_sts/scan_contronller-field:

  .. index:: scan_contronller (field)

  **scan_contronller**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` 

    .. collapse:: There are 2 parameters in X and Y directions. If you know them, you can enter  ...

        There are 2 parameters in X and Y directions. If you know them, you can enter the 2nd order 
        piezo characteristics to compensate for it. The following equation shows the interpretation
        of the 2nd order correction parameter: For the X-piezo: 
        :math:`Ux = 1/cx · X + cxx · X2`; with units: :math:`[V] = [V/m] · [m] + [V/m2] · [m2]` 
        where cx is the calibration of the piezo X and cxx is the 2nd order correction. :math:`(V/m^2)`

  .. _/NXpositioner_sts/drift-field:

  .. index:: drift (field)

  **drift**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANY <NX_ANY>`} 

    .. collapse:: There are 2 parameters in X and Y directions. Define the drift speed for all t ...

        There are 2 parameters in X and Y directions. Define the drift speed for all three axes.
        When the compensation is on, the piezos will start to move at that speed.

  .. _/NXpositioner_sts/drift_correction_status-field:

  .. index:: drift_correction_status (field)

  **drift_correction_status**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Use the button to turn on/off the drift compensation.

  .. _/NXpositioner_sts/TRANSFORMATIONS-group:

  **TRANSFORMATIONS**: (optional) :ref:`NXtransformations` 

    .. collapse:: This is the group recommended for holding the chain of translation ...

        This is the group recommended for holding the chain of translation
        and rotation operations necessary to position the component within
        the instrument. The dependency chain may however traverse similar groups in
        other component groups.

  .. _/NXpositioner_sts/position-group:

  **position**: (optional) :ref:`NXtransformations` 

    .. collapse:: To clarify the frame laboratory frame. The scanning area in x, y, and z positi ...

        To clarify the frame laboratory frame. The scanning area in x, y, and z position in the 
        frame.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXpositioner_sts/acceleration_time-field </NXpositioner_sts/acceleration_time-field>`
* :ref:`/NXpositioner_sts/active_calib-field </NXpositioner_sts/active_calib-field>`
* :ref:`/NXpositioner_sts/calib_N-field </NXpositioner_sts/calib_N-field>`
* :ref:`/NXpositioner_sts/controller_name-field </NXpositioner_sts/controller_name-field>`
* :ref:`/NXpositioner_sts/controller_record-field </NXpositioner_sts/controller_record-field>`
* :ref:`/NXpositioner_sts/depends_on-field </NXpositioner_sts/depends_on-field>`
* :ref:`/NXpositioner_sts/description-field </NXpositioner_sts/description-field>`
* :ref:`/NXpositioner_sts/drift-field </NXpositioner_sts/drift-field>`
* :ref:`/NXpositioner_sts/drift_correction_status-field </NXpositioner_sts/drift_correction_status-field>`
* :ref:`/NXpositioner_sts/final_z-field </NXpositioner_sts/final_z-field>`
* :ref:`/NXpositioner_sts/i_gain-field </NXpositioner_sts/i_gain-field>`
* :ref:`/NXpositioner_sts/lines-field </NXpositioner_sts/lines-field>`
* :ref:`/NXpositioner_sts/name-field </NXpositioner_sts/name-field>`
* :ref:`/NXpositioner_sts/p_gain-field </NXpositioner_sts/p_gain-field>`
* :ref:`/NXpositioner_sts/piezo_calibration-field </NXpositioner_sts/piezo_calibration-field>`
* :ref:`/NXpositioner_sts/pixels_line-field </NXpositioner_sts/pixels_line-field>`
* :ref:`/NXpositioner_sts/position-group </NXpositioner_sts/position-group>`
* :ref:`/NXpositioner_sts/raw_value-field </NXpositioner_sts/raw_value-field>`
* :ref:`/NXpositioner_sts/scan_contronller-field </NXpositioner_sts/scan_contronller-field>`
* :ref:`/NXpositioner_sts/scanfield-field </NXpositioner_sts/scanfield-field>`
* :ref:`/NXpositioner_sts/setpoint-field </NXpositioner_sts/setpoint-field>`
* :ref:`/NXpositioner_sts/soft_limit_max-field </NXpositioner_sts/soft_limit_max-field>`
* :ref:`/NXpositioner_sts/soft_limit_min-field </NXpositioner_sts/soft_limit_min-field>`
* :ref:`/NXpositioner_sts/speed_backw-field </NXpositioner_sts/speed_backw-field>`
* :ref:`/NXpositioner_sts/speed_forw-field </NXpositioner_sts/speed_forw-field>`
* :ref:`/NXpositioner_sts/switch_off_delay-field </NXpositioner_sts/switch_off_delay-field>`
* :ref:`/NXpositioner_sts/target_value-field </NXpositioner_sts/target_value-field>`
* :ref:`/NXpositioner_sts/time_const-field </NXpositioner_sts/time_const-field>`
* :ref:`/NXpositioner_sts/tip_lift-field </NXpositioner_sts/tip_lift-field>`
* :ref:`/NXpositioner_sts/tip_position_z-field </NXpositioner_sts/tip_position_z-field>`
* :ref:`/NXpositioner_sts/tolerance-field </NXpositioner_sts/tolerance-field>`
* :ref:`/NXpositioner_sts/TRANSFORMATIONS-group </NXpositioner_sts/TRANSFORMATIONS-group>`
* :ref:`/NXpositioner_sts/value-field </NXpositioner_sts/value-field>`
* :ref:`/NXpositioner_sts/velocity-field </NXpositioner_sts/velocity-field>`
* :ref:`/NXpositioner_sts/z_controller_hold-field </NXpositioner_sts/z_controller_hold-field>`
* :ref:`/NXpositioner_sts/z_contronller-field </NXpositioner_sts/z_contronller-field>`
* :ref:`/NXpositioner_sts/z_offset-field </NXpositioner_sts/z_offset-field>`
* :ref:`/NXpositioner_sts@default-attribute </NXpositioner_sts@default-attribute>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXpositioner_sts.nxdl.xml
