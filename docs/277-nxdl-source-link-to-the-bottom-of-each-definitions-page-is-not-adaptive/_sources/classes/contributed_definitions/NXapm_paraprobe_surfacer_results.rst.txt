.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXapm_paraprobe_surfacer_results.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXapm_paraprobe_surfacer_results (application definition)
    ! apm_paraprobe_surfacer_results (application definition)
    see: apm_paraprobe_surfacer_results (application definition); NXapm_paraprobe_surfacer_results

.. _NXapm_paraprobe_surfacer_results:

================================
NXapm_paraprobe_surfacer_results
================================

**Status**:

  *application definition* (contribution), extends :ref:`NXobject`

**Description**:

  .. collapse:: Application definition for results files of the paraprobe-surfacer tool. ...

      Application definition for results files of the paraprobe-surfacer tool.

      This tool is part of the paraprobe-toolbox. Inspect the base class :ref:`NXapm_paraprobe_tool_results`.
      The purpose and need of the paraprobe-surfacer tool is the generation of meshed
      representation of the surface of the the reconstructed volume (or a portion) of it
      using different algorithms from the computational geometry community.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **n_ions**: The total number of ions in the reconstruction.

  **n_v_tri**: The number of vertices of the alpha complex.

  **n_f_tri**: The number of faces of the alpha complex.

  **n_f_tri_xdmf**: The total number of XDMF values to represent all faces of triangles via XDMF.

  **n_f_tet_xdmf**: The total number of XDMF values to represent all faces of tetrahedra via XDMF.

**Groups cited**:
  :ref:`NXapm_paraprobe_tool_common`, :ref:`NXapm_paraprobe_tool_results`, :ref:`NXcg_alpha_complex`, :ref:`NXcg_face_list_data_structure`, :ref:`NXcg_tetrahedron`, :ref:`NXcg_triangle`, :ref:`NXcoordinate_system_set`, :ref:`NXcoordinate_system`, :ref:`NXcs_filter_boolean_mask`, :ref:`NXcs_profiling`, :ref:`NXentry`, :ref:`NXnote`, :ref:`NXprogram`, :ref:`NXuser`

.. index:: NXentry (base class); used in application definition, NXapm_paraprobe_tool_results (base class); used in application definition, NXcs_filter_boolean_mask (base class); used in application definition, NXcg_alpha_complex (base class); used in application definition, NXcg_triangle (base class); used in application definition, NXcg_face_list_data_structure (base class); used in application definition, NXcg_tetrahedron (base class); used in application definition, NXapm_paraprobe_tool_common (base class); used in application definition, NXnote (base class); used in application definition, NXprogram (base class); used in application definition, NXcs_profiling (base class); used in application definition, NXuser (base class); used in application definition, NXcoordinate_system_set (base class); used in application definition, NXcoordinate_system (base class); used in application definition

**Structure**:

  .. _/NXapm_paraprobe_surfacer_results/ENTRY-group:

  :bolditalic:`ENTRY`: (required) :ref:`NXentry` 


    .. _/NXapm_paraprobe_surfacer_results/ENTRY/definition-field:

    .. index:: definition (field)

    **definition**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXentry/definition-field>`


      Obligatory value: ``NXapm_paraprobe_surfacer_results``

      .. _/NXapm_paraprobe_surfacer_results/ENTRY/definition@version-attribute:

      .. index:: version (field attribute)

      **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXentry/definition@version-attribute>`


    .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping-group:

    **point_set_wrapping**: (required) :ref:`NXapm_paraprobe_tool_results` 

      .. collapse:: Paraprobe-surfacer can be used to load a ROI that is the entire or a ...

          Paraprobe-surfacer can be used to load a ROI that is the entire or a
          sub-set of the ion point cloud. In the point_cloud_wrapping process
          the tool computes a triangulated surface mesh which encloses the
          ROI/point cloud. This mesh can be seen as a model for the edge of
          the dataset.

          Different algorithms can be used with paraprobe-surfacer to create
          this mesh such as convex hulls, alpha-shapes as their generalization,
          or alpha wrappings.

          Ideally, the resulting mesh should be a watertight polyhedron.
          This polyhedron is not necessarily convex. For some algorithms there
          is no guarantee that the resulting mesh yields a watertight mesh.

      .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window-group:

      **window**: (required) :ref:`NXcs_filter_boolean_mask` :ref:`⤆ </NXapm_paraprobe_tool_results/window-group>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window/number_of_ions-field:

        .. index:: number_of_ions (field)

        **number_of_ions**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_results/window/number_of_ions-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window/bitdepth-field:

        .. index:: bitdepth (field)

        **bitdepth**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_results/window/bitdepth-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window/mask-field:

        .. index:: mask (field)

        **mask**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_results/window/mask-field>`


      .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX-group:

      :bolditalic:`ALPHA_COMPLEX`: (optional) :ref:`NXcg_alpha_complex` 

        Instances should use alpha_complex as a name prefix.

        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/dimensionality-field:

        .. index:: dimensionality (field)

        **dimensionality**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 


          Any of these values: ``2`` | ``3``

        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/type-field:

        .. index:: type (field)

        **type**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcg_alpha_complex/type-field>`


          Any of these values:

            * ``convex_hull``

            * ``alpha_shape``

            * ``alpha_wrapping``

            * ``other``

            * ``undefined``


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/mode-field:

        .. index:: mode (field)

        **mode**: (required) :ref:`NX_CHAR <NX_CHAR>` 


          Any of these values: ``general`` | ``regularized``

        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/alpha-field:

        .. index:: alpha (field)

        **alpha**: (required) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANY <NX_ANY>`} :ref:`⤆ </NXcg_alpha_complex/alpha-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/offset-field:

        .. index:: offset (field)

        **offset**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXcg_alpha_complex/offset-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window-group:

        **window**: (required) :ref:`NXcs_filter_boolean_mask` 

          .. collapse:: A bitmask which identifies exactly all those ions whose positions ...

              A bitmask which identifies exactly all those ions whose positions
              were considered when defining the filtered point set from which
              that alpha_complex instance was computed.

              This window can be different to the window of the *point_set_wrapping*
              parent group because irrelevant ions might have been filtered out in addition
              to the window defined in *point_set_wrapping* to reduce e.g. computational
              costs of the alpha complex computation.

          .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window/number_of_ions-field:

          .. index:: number_of_ions (field)

          **number_of_ions**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

            Number of ions covered by the mask.

          .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window/bitdepth-field:

          .. index:: bitdepth (field)

          **bitdepth**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXcs_filter_boolean_mask/bitdepth-field>`

            Number of bits assumed matching on a default datatype.

          .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window/mask-field:

          .. index:: mask (field)

          **mask**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_ions]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXcs_filter_boolean_mask/mask-field>`

            .. collapse:: The bitfield of the mask. See :ref:`NXcs_filter_boolean_mask` for ...

                The bitfield of the mask. See :ref:`NXcs_filter_boolean_mask` for
                how this bitfield is to be interpreted.

        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set-group:

        **triangle_set**: (optional) :ref:`NXcg_triangle` :ref:`⤆ </NXcg_alpha_complex/TRIANGLE_SOUP-group>`

          .. collapse:: The set of triangles in the coordinate system paraprobe ...

              The set of triangles in the coordinate system paraprobe
              which discretizes the exterior surface of the alpha complex.

          .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/identifier_offset-field:

          .. index:: identifier_offset (field)

          **identifier_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_primitive/identifier_offset-field>`


          .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles-group:

          **triangles**: (required) :ref:`NXcg_face_list_data_structure` :ref:`⤆ </NXcg_triangle/triangles-group>`


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/dimensionality-field:

            .. index:: dimensionality (field)

            **dimensionality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_primitive/dimensionality-field>`


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/number_of_vertices-field:

            .. index:: number_of_vertices (field)

            **number_of_vertices**: (required) :ref:`NX_POSINT <NX_POSINT>` 


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/number_of_faces-field:

            .. index:: number_of_faces (field)

            **number_of_faces**: (required) :ref:`NX_POSINT <NX_POSINT>` 


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/identifier_vertex_offset-field:

            .. index:: identifier_vertex_offset (field)

            **identifier_vertex_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_face_list_data_structure/identifier_vertex_offset-field>`


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/identifier_face_offset-field:

            .. index:: identifier_face_offset (field)

            **identifier_face_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_face_list_data_structure/identifier_face_offset-field>`


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/vertices-field:

            .. index:: vertices (field)

            **vertices**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 2, Dimensions: [n_v_tri, 3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/faces-field:

            .. index:: faces (field)

            **faces**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 2, Dimensions: [n_f_tri, 3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/xdmf_topology-field:

            .. index:: xdmf_topology (field)

            **xdmf_topology**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_f_tri_xdmf]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

              .. collapse:: A list of as many tuples of XDMF topology key, XDMF number ...

                  A list of as many tuples of XDMF topology key, XDMF number
                  of vertices and a triple of vertex indices specifying each
                  triangle. The total number of entries is n_f_tri * (1+1+3).

            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/is_watertight-field:

            .. index:: is_watertight (field)

            **is_watertight**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

              Do the triangles define a triangulated surface mesh that is watertight?

            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/volume-field:

            .. index:: volume (field)

            **volume**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_VOLUME <NX_VOLUME>`} 

              .. collapse:: The volume which the triangulated surface mesh ...

                  The volume which the triangulated surface mesh
                  encloses if that mesh is watertight.

        .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra-group:

        **interior_tetrahedra**: (optional) :ref:`NXcg_tetrahedron` :ref:`⤆ </NXcg_alpha_complex/TETRAHEDRALIZATION-group>`

          .. collapse:: The set of tetrahedra which represent the interior volume ...

              The set of tetrahedra which represent the interior volume
              of the complex if that is a closed two-manifold.

          .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/identifier_offset-field:

          .. index:: identifier_offset (field)

          **identifier_offset**: (required) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXcg_primitive/identifier_offset-field>`


          .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/volume-field:

          .. index:: volume (field)

          **volume**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_VOLUME <NX_VOLUME>`} 

            The accumulated volume of all interior tetrahedra.

          .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra-group:

          **tetrahedra**: (optional) :ref:`NXcg_face_list_data_structure` :ref:`⤆ </NXcg_tetrahedron/tetrahedra-group>`


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/number_of_vertices-field:

            .. index:: number_of_vertices (field)

            **number_of_vertices**: (required) :ref:`NX_POSINT <NX_POSINT>` 


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/number_of_faces-field:

            .. index:: number_of_faces (field)

            **number_of_faces**: (required) :ref:`NX_POSINT <NX_POSINT>` 


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/identifier_vertex_offset-field:

            .. index:: identifier_vertex_offset (field)

            **identifier_vertex_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_face_list_data_structure/identifier_vertex_offset-field>`


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/identifier_face_offset-field:

            .. index:: identifier_face_offset (field)

            **identifier_face_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_face_list_data_structure/identifier_face_offset-field>`


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/vertices-field:

            .. index:: vertices (field)

            **vertices**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 2, Dimensions: [n_v_tet, 3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 


            .. _/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/xdmf_topology-field:

            .. index:: xdmf_topology (field)

            **xdmf_topology**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_f_tet_xdmf]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

              .. collapse:: A list of as many tuples of XDMF topology key, XDMF number ...

                  A list of as many tuples of XDMF topology key, XDMF number
                  of vertices and a triple of vertex indices specifying each
                  triangle. The total number of entries is n_f_tet * (1+1+4).

    .. _/NXapm_paraprobe_surfacer_results/ENTRY/common-group:

    **common**: (required) :ref:`NXapm_paraprobe_tool_common` 


      .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/status-field:

      .. index:: status (field)

      **status**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_paraprobe_tool_common/status-field>`


      .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/identifier_analysis-field:

      .. index:: identifier_analysis (field)

      **identifier_analysis**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_common/identifier_analysis-field>`


      .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/config-group:

      **config**: (required) :ref:`NXnote` :ref:`⤆ </NXapm_paraprobe_tool_common/config-group>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/config/type-field:

        .. index:: type (field)

        **type**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXnote/type-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/config/file_name-field:

        .. index:: file_name (field)

        **file_name**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXnote/file_name-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/config/checksum-field:

        .. index:: checksum (field)

        **checksum**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXnote/checksum-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/config/algorithm-field:

        .. index:: algorithm (field)

        **algorithm**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXnote/algorithm-field>`


      .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/PROGRAM-group:

      :bolditalic:`PROGRAM`: (required) :ref:`NXprogram` :ref:`⤆ </NXapm_paraprobe_tool_common/PROGRAM-group>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/PROGRAM/program-field:

        .. index:: program (field)

        **program**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXprogram/program-field>`


          .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/PROGRAM/program@version-attribute:

          .. index:: version (field attribute)

          **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXprogram/program@version-attribute>`


      .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling-group:

      **profiling**: (recommended) :ref:`NXcs_profiling` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling-group>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/start_time-field:

        .. index:: start_time (field)

        **start_time**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/start_time-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/end_time-field:

        .. index:: end_time (field)

        **end_time**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/end_time-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/total_elapsed_time-field:

        .. index:: total_elapsed_time (field)

        **total_elapsed_time**: (required) :ref:`NX_FLOAT <NX_FLOAT>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/total_elapsed_time-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/current_working_directory-field:

        .. index:: current_working_directory (field)

        **current_working_directory**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcs_profiling/current_working_directory-field>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/number_of_processes-field:

        .. index:: number_of_processes (field)

        **number_of_processes**: (required) :ref:`NX_POSINT <NX_POSINT>` 


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/number_of_threads-field:

        .. index:: number_of_threads (field)

        **number_of_threads**: (required) :ref:`NX_POSINT <NX_POSINT>` 


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/number_of_gpus-field:

        .. index:: number_of_gpus (field)

        **number_of_gpus**: (required) :ref:`NX_POSINT <NX_POSINT>` 


      .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/USER-group:

      :bolditalic:`USER`: (optional) :ref:`NXuser` :ref:`⤆ </NXapm_paraprobe_tool_common/USER-group>`

        If used, metadata of at least the person who performed this analysis.

        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/USER/name-field:

        .. index:: name (field)

        **name**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXuser/name-field>`


      .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set-group:

      **coordinate_system_set**: (required) :ref:`NXcoordinate_system_set` :ref:`⤆ </NXapm_paraprobe_tool_common/COORDINATE_SYSTEM_SET-group>`


        .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe-group:

        **paraprobe**: (required) :ref:`NXcoordinate_system` :ref:`⤆ </NXapm_paraprobe_tool_common/COORDINATE_SYSTEM_SET/COORDINATE_SYSTEM-group>`


          .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/type-field:

          .. index:: type (field)

          **type**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcoordinate_system/type-field>`


          .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/handedness-field:

          .. index:: handedness (field)

          **handedness**: (required) :ref:`NX_CHAR <NX_CHAR>` 


          .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/x-field:

          .. index:: x (field)

          **x**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXcoordinate_system/x-field>`


          .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/y-field:

          .. index:: y (field)

          **y**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXcoordinate_system/y-field>`


          .. _/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/z-field:

          .. index:: z (field)

          **z**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXcoordinate_system/z-field>`



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY-group </NXapm_paraprobe_surfacer_results/ENTRY-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common-group </NXapm_paraprobe_surfacer_results/ENTRY/common-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/config-group </NXapm_paraprobe_surfacer_results/ENTRY/common/config-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/config/algorithm-field </NXapm_paraprobe_surfacer_results/ENTRY/common/config/algorithm-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/config/checksum-field </NXapm_paraprobe_surfacer_results/ENTRY/common/config/checksum-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/config/file_name-field </NXapm_paraprobe_surfacer_results/ENTRY/common/config/file_name-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/config/type-field </NXapm_paraprobe_surfacer_results/ENTRY/common/config/type-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set-group </NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe-group </NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/handedness-field </NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/handedness-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/type-field </NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/type-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/x-field </NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/x-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/y-field </NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/y-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/z-field </NXapm_paraprobe_surfacer_results/ENTRY/common/coordinate_system_set/paraprobe/z-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/identifier_analysis-field </NXapm_paraprobe_surfacer_results/ENTRY/common/identifier_analysis-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling-group </NXapm_paraprobe_surfacer_results/ENTRY/common/profiling-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/current_working_directory-field </NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/current_working_directory-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/end_time-field </NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/end_time-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/number_of_gpus-field </NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/number_of_gpus-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/number_of_processes-field </NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/number_of_processes-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/number_of_threads-field </NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/number_of_threads-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/start_time-field </NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/start_time-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/total_elapsed_time-field </NXapm_paraprobe_surfacer_results/ENTRY/common/profiling/total_elapsed_time-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/PROGRAM-group </NXapm_paraprobe_surfacer_results/ENTRY/common/PROGRAM-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/PROGRAM/program-field </NXapm_paraprobe_surfacer_results/ENTRY/common/PROGRAM/program-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/PROGRAM/program@version-attribute </NXapm_paraprobe_surfacer_results/ENTRY/common/PROGRAM/program@version-attribute>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/status-field </NXapm_paraprobe_surfacer_results/ENTRY/common/status-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/USER-group </NXapm_paraprobe_surfacer_results/ENTRY/common/USER-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/common/USER/name-field </NXapm_paraprobe_surfacer_results/ENTRY/common/USER/name-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/definition-field </NXapm_paraprobe_surfacer_results/ENTRY/definition-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/definition@version-attribute </NXapm_paraprobe_surfacer_results/ENTRY/definition@version-attribute>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping-group </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX-group </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/alpha-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/alpha-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/dimensionality-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/dimensionality-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra-group </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/identifier_offset-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/identifier_offset-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra-group </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/identifier_face_offset-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/identifier_face_offset-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/identifier_vertex_offset-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/identifier_vertex_offset-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/number_of_faces-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/number_of_faces-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/number_of_vertices-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/number_of_vertices-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/vertices-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/vertices-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/xdmf_topology-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/tetrahedra/xdmf_topology-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/volume-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/interior_tetrahedra/volume-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/mode-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/mode-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/offset-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/offset-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set-group </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/identifier_offset-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/identifier_offset-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles-group </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/dimensionality-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/dimensionality-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/faces-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/faces-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/identifier_face_offset-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/identifier_face_offset-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/identifier_vertex_offset-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/identifier_vertex_offset-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/is_watertight-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/is_watertight-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/number_of_faces-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/number_of_faces-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/number_of_vertices-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/number_of_vertices-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/vertices-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/vertices-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/volume-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/volume-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/xdmf_topology-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/triangle_set/triangles/xdmf_topology-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/type-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/type-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window-group </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window/bitdepth-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window/bitdepth-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window/mask-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window/mask-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window/number_of_ions-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/ALPHA_COMPLEX/window/number_of_ions-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window-group </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window-group>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window/bitdepth-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window/bitdepth-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window/mask-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window/mask-field>`
* :ref:`/NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window/number_of_ions-field </NXapm_paraprobe_surfacer_results/ENTRY/point_set_wrapping/window/number_of_ions-field>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXapm_paraprobe_surfacer_results.nxdl.xml
