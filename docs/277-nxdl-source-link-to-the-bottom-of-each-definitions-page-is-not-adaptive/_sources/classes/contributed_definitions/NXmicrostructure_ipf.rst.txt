.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXmicrostructure_ipf.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXmicrostructure_ipf (base class)
    ! microstructure_ipf (base class)
    see: microstructure_ipf (base class); NXmicrostructure_ipf

.. _NXmicrostructure_ipf:

====================
NXmicrostructure_ipf
====================

**Status**:

  *base class* (contribution), extends :ref:`NXprocess`

**Description**:

  Base class to store an inverse pole figure (IPF) mapping (IPF map).

**Symbols**:


  **n_z**: Number of pixel along the z slowest direction.

  **n_y**: Number of pixel along the y slow direction.

  **n_x**: Number of pixel along the x fast direction.

  **n_rgb**: Number of RGB values along the fastest direction, always three.

**Groups cited**:
  :ref:`NXcg_grid`, :ref:`NXdata`

.. index:: NXcg_grid (base class); used in base class, NXdata (base class); used in base class

**Structure**:

  .. _/NXmicrostructure_ipf/depends_on-field:

  .. index:: depends_on (field)

  **depends_on**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Reference to an :ref:`NXcoordinate_system` in which the projection_direction i ...

        Reference to an :ref:`NXcoordinate_system` in which the projection_direction is defined.

        If the field depends_on is not provided but parents of the instance of this base class or its
        specializations define an instance of :ref:`NXcoordinate_system`, projection_direction
        is defined in this coordinate system.

        If nothing is provided it is assumed that projection_direction is defined in the McStas coordinate system.

  .. _/NXmicrostructure_ipf/projection_direction-field:

  .. index:: projection_direction (field)

  **projection_direction**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    The direction along which orientations are projected.

  .. _/NXmicrostructure_ipf/interpolation-field:

  .. index:: interpolation (field)

  **interpolation**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: How where orientation values at positions of input_grid computed to values on  ...

        How where orientation values at positions of input_grid computed to values on output_grid.

        Nearest neighbour means the orientation of the closed (Euclidean distance) grid point of the input_grid was taken.

        Obligatory value: ``nearest_neighbour``

  .. _/NXmicrostructure_ipf/input_grid-group:

  **input_grid**: (optional) :ref:`NXcg_grid` 

    .. collapse:: Details about the original grid. ...

        Details about the original grid.

        Here original grid means the grid for which the IPF map was computed when that
        IPF map was exported from the tech partner's file format representation.

  .. _/NXmicrostructure_ipf/output_grid-group:

  **output_grid**: (optional) :ref:`NXcg_grid` 

    .. collapse:: Details about the grid onto which the IPF is recomputed. ...

        Details about the grid onto which the IPF is recomputed.

        Rescaling the visualization of the IPF map may be needed to enable
        visualization in specific software tools like H5Web.

  .. _/NXmicrostructure_ipf/map-group:

  **map**: (optional) :ref:`NXdata` :ref:`⤆ </NXobject/DATA-group>`

    .. collapse:: Inverse pole figure mapping. ...

        Inverse pole figure mapping.

        Instances named phase0 should by definition refer to the null phase notIndexed.
        Inspect the definition of :ref:`NXphase` and its field identifier_phase
        for further details.

        Details about possible regridding and associated interpolation
        during the computation of the IPF map visualization can be stored
        using the input_grid, output_grid, and interpolation fields.

        The main purpose of this map is to offer a normalized default representation
        of the IPF map for consumption by a research data management system (RDMS).
        This is aligned with the first aim of :ref:`NXmicrostructure_ipf`, to bring colleagues
        and users of IPF maps together to discuss which pieces of information need storage.

        We are convinced a step-by-step design and community-driven discussion is a practical
        strategy to work towards an interoperable description and data model for exchanging
        IPF maps as a specific community-accepted method to convey orientation maps.

        With this design the individual RDMS solutions and tools can still continue
        to support specific custom data analyses workflow and routes but at least
        there is one common understanding which enables also those users who are
        not necessarily experts in all the details of the underlying techniques an
        understanding if the dataset is worth to become reused or repurposed.

    .. _/NXmicrostructure_ipf/map/data-field:

    .. index:: data (field)

    **data**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 3, Dimensions: [n_y, n_x, 3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXdata/DATA-field>`

      Inverse pole figure color code for each map coordinate.

    .. _/NXmicrostructure_ipf/map/axis_z-field:

    .. index:: axis_z (field)

    **axis_z**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_z]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      Pixel center coordinate calibrated for step size along the z axis of the map.

    .. _/NXmicrostructure_ipf/map/axis_y-field:

    .. index:: axis_y (field)

    **axis_y**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_y]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      Pixel center coordinate calibrated for step size along the y axis of the map.

    .. _/NXmicrostructure_ipf/map/axis_x-field:

    .. index:: axis_x (field)

    **axis_x**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_x]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      Pixel center coordinate calibrated for step size along the x axis of the map.

  .. _/NXmicrostructure_ipf/legend-group:

  **legend**: (optional) :ref:`NXdata` :ref:`⤆ </NXobject/DATA-group>`

    .. collapse:: The color code which maps colors to orientation in the fundamental zone. ...

        The color code which maps colors to orientation in the fundamental zone.

        For each stereographic standard triangle (SST), i.e. a rendering of the
        fundamental zone of the crystal-symmetry-reduced orientation space
        SO3, it is possible to define a color model which assigns a color to each
        point in the fundamental zone.

        Different mapping models are used. These implement (slightly) different
        scaling relations. Differences exist across representations of tech partners.

        Differences are which base colors of the RGB color model are placed in
        which extremal position of the SST and where the white point is located.

        For further details see:

        * [G. Nolze et al.](https://doi.org/10.1107/S1600576716012942)
        * [S. Patala et al.](https://doi.org/10.1016/j.pmatsci.2012.04.002).

        Details are implementation-specific and not standardized yet.

        Given that the SST has a complicated geometry, it can not yet be
        visualized using tools like H5Web, which is why for now the matrix
        of a rasterized image which is rendered by the backend tool gets
        copied into an RGB matrix to offer a default plot.

    .. _/NXmicrostructure_ipf/legend/data-field:

    .. index:: data (field)

    **data**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 3, Dimensions: [n_y, n_x, 3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXdata/DATA-field>`

      Inverse pole figure color code for each map coordinate.

    .. _/NXmicrostructure_ipf/legend/axis_y-field:

    .. index:: axis_y (field)

    **axis_y**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_y]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Pixel along the y-axis.

    .. _/NXmicrostructure_ipf/legend/axis_x-field:

    .. index:: axis_x (field)

    **axis_x**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_x]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Pixel along the x-axis.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXmicrostructure_ipf/depends_on-field </NXmicrostructure_ipf/depends_on-field>`
* :ref:`/NXmicrostructure_ipf/input_grid-group </NXmicrostructure_ipf/input_grid-group>`
* :ref:`/NXmicrostructure_ipf/interpolation-field </NXmicrostructure_ipf/interpolation-field>`
* :ref:`/NXmicrostructure_ipf/legend-group </NXmicrostructure_ipf/legend-group>`
* :ref:`/NXmicrostructure_ipf/legend/axis_x-field </NXmicrostructure_ipf/legend/axis_x-field>`
* :ref:`/NXmicrostructure_ipf/legend/axis_y-field </NXmicrostructure_ipf/legend/axis_y-field>`
* :ref:`/NXmicrostructure_ipf/legend/data-field </NXmicrostructure_ipf/legend/data-field>`
* :ref:`/NXmicrostructure_ipf/map-group </NXmicrostructure_ipf/map-group>`
* :ref:`/NXmicrostructure_ipf/map/axis_x-field </NXmicrostructure_ipf/map/axis_x-field>`
* :ref:`/NXmicrostructure_ipf/map/axis_y-field </NXmicrostructure_ipf/map/axis_y-field>`
* :ref:`/NXmicrostructure_ipf/map/axis_z-field </NXmicrostructure_ipf/map/axis_z-field>`
* :ref:`/NXmicrostructure_ipf/map/data-field </NXmicrostructure_ipf/map/data-field>`
* :ref:`/NXmicrostructure_ipf/output_grid-group </NXmicrostructure_ipf/output_grid-group>`
* :ref:`/NXmicrostructure_ipf/projection_direction-field </NXmicrostructure_ipf/projection_direction-field>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXmicrostructure_ipf.nxdl.xml
