.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXdelocalization.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXdelocalization (base class)
    ! delocalization (base class)
    see: delocalization (base class); NXdelocalization

.. _NXdelocalization:

================
NXdelocalization
================

**Status**:

  *base class* (contribution), extends :ref:`NXobject`

**Description**:

  .. collapse:: Base class of the configuration and results of a delocalization algorithm. ...

      Base class of the configuration and results of a delocalization algorithm.

      Delocalization is used to distribute point-like objects on a grid to obtain
      e.g. smoother count, composition, or concentration values of scalar fields
      and compute gradients of these fields.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **n_p**: Number of points/objects.

  **n_m**: Number of mark data per point/object.

  **n_atoms**: Number of atoms in the whitelist.

  **n_nuclides**: Number of isotopes in the whitelist.

**Groups cited**:
  :ref:`NXcg_grid`, :ref:`NXmatch_filter`

.. index:: NXcg_grid (base class); used in base class, NXmatch_filter (base class); used in base class

**Structure**:

  .. _/NXdelocalization/grid-group:

  **grid**: (optional) :ref:`NXcg_grid` 

    Details about the grid on which the delocalization is applied.

  .. _/NXdelocalization/weighting_model-group:

  **weighting_model**: (optional) :ref:`NXmatch_filter` 

    .. collapse:: The weighting model specifies how mark data are mapped to a weight per ...

        The weighting model specifies how mark data are mapped to a weight per
        point/object.

    .. _/NXdelocalization/weighting_model/weighting_method-field:

    .. index:: weighting_method (field)

    **weighting_method**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: As an example from the research field of atom probe points/objects are (mole ...

          As an example from the research field of atom probe points/objects are (molecular) ions.
          Different methods are used for weighting ions:

          * default, points get all the same weight 1., which for atom probe is equivalent
             to (molecular) iontype-based delocalization.
          * element, points get as much weight as they have atoms representing a nuclide
            with a proton number that is matching to a respective entry in whitelist.
            In atom probe jargon, this means atomic_decomposition.
          * isotope, points get as much weight as they have atoms representing a nuclides
            from a respective entry in whitelist.
            In atom probe jargon, this means isotope_decomposition.

          Any of these values: ``default`` | ``element`` | ``isotope``

    .. _/NXdelocalization/weighting_model/method-field:

    .. index:: method (field)

    **method**: (optional) :ref:`NX_CHAR <NX_CHAR>` :ref:`â¤† </NXmatch_filter/method-field>`


      Obligatory value: ``whitelist``

    .. _/NXdelocalization/weighting_model/match-field:

    .. index:: match (field)

    **match**: (optional) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_nuclides]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: A list of nuclides based on which to evaluate the weight. Nuclides need to e ...

          A list of nuclides based on which to evaluate the weight. Nuclides need to exist in the nuclide table.
          Values are nuclide (isotope) hash values using the following hashing rule :math:`H = Z + N \cdot 256`
          with :math:`Z` the number of protons and :math:`N` the number of neutrons of the nuclide.
          For elements set :math:`N` to zero.

    .. _/NXdelocalization/weighting_model/mark-field:

    .. index:: mark (field)

    **mark**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [n_p, n_m]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Attribute data for each member of the point cloud. For APM these are the ...

          Attribute data for each member of the point cloud. For APM these are the
          iontypes generated via ranging. The number of mark data per point is 1
          in the case for atom probe.

    .. _/NXdelocalization/weighting_model/weight-field:

    .. index:: weight (field)

    **weight**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_p]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Weighting factor with which the integrated intensity per grid cell is ...

          Weighting factor with which the integrated intensity per grid cell is
          multiplied specifically for each point/object. For APM the weight are
          positive integer values, specifically the multiplicity of the ion,
          according to the details of the weighting_method.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXdelocalization/grid-group </NXdelocalization/grid-group>`
* :ref:`/NXdelocalization/weighting_model-group </NXdelocalization/weighting_model-group>`
* :ref:`/NXdelocalization/weighting_model/mark-field </NXdelocalization/weighting_model/mark-field>`
* :ref:`/NXdelocalization/weighting_model/match-field </NXdelocalization/weighting_model/match-field>`
* :ref:`/NXdelocalization/weighting_model/method-field </NXdelocalization/weighting_model/method-field>`
* :ref:`/NXdelocalization/weighting_model/weight-field </NXdelocalization/weighting_model/weight-field>`
* :ref:`/NXdelocalization/weighting_model/weighting_method-field </NXdelocalization/weighting_model/weighting_method-field>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXdelocalization.nxdl.xml
