.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXcg_primitive.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXcg_primitive (base class)
    ! cg_primitive (base class)
    see: cg_primitive (base class); NXcg_primitive

.. _NXcg_primitive:

==============
NXcg_primitive
==============

**Status**:

  *base class* (contribution), extends :ref:`NXobject`

**Description**:

  .. collapse:: Computational geometry description of a set of primitives in Euclidean space. ...

      Computational geometry description of a set of primitives in Euclidean space.

      Primitives must neither be degenerated nor self-intersect.
      Individual primitives can differ in their properties (e.g. size, shape, rotation).

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **d**: The dimensionality of the embedding space.

  **c**: The cardinality of the set, i.e. the number of members.

**Groups cited**:
  :ref:`NXcg_unit_normal`

.. index:: NXcg_unit_normal (base class); used in base class

**Structure**:

  .. _/NXcg_primitive/depends_on-field:

  .. index:: depends_on (field)

  **depends_on**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Reference to an instance of :ref:`NXcoordinate_system` in which these primitiv ...

        Reference to an instance of :ref:`NXcoordinate_system` in which these primitives
        are defined.

  .. _/NXcg_primitive/dimensionality-field:

  .. index:: dimensionality (field)

  **dimensionality**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: The dimensionality of the primitive set with value up to d. ...

        The dimensionality of the primitive set with value up to d.

        Any of these values: ``1`` | ``2`` | ``3``

  .. _/NXcg_primitive/cardinality-field:

  .. index:: cardinality (field)

  **cardinality**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    The cardinality of the primitive set. Value should be equal to c.

  .. _/NXcg_primitive/identifier_offset-field:

  .. index:: identifier_offset (field)

  **identifier_offset**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Integer offset whereby the identifier of the first member ...

        Integer offset whereby the identifier of the first member
        of the set differs from zero.

        Identifiers can be defined either implicitly or explicitly.
        For implicit indexing identifiers are defined on the interval
        :math:`[identifier\_offset, identifier\_offset + c - 1]`.

        Therefore, implicit identifier are completely defined by the value of
        identifier_offset and cardinality. For example if identifier run from
        -2 to 3 the value for identifier_offset is -2.

        For explicit indexing the field identifier has to be used.
        Fortran-/Matlab- and C-/Python-style indexing have specific implicit
        identifier conventions where identifier_offset is 1 and 0 respectively.

  .. _/NXcg_primitive/identifier-field:

  .. index:: identifier (field)

  **identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [c]) 

    Identifier of each member for explicit indexing.

  .. _/NXcg_primitive/center-field:

  .. index:: center (field)

  **center**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [c, d]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

    The center of each primitive

  .. _/NXcg_primitive/is_center_of_mass-field:

  .. index:: is_center_of_mass (field)

  **is_center_of_mass**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [c]) 

    True if the center is a center of mass.

  .. _/NXcg_primitive/shape-field:

  .. index:: shape (field)

  **shape**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [c, d]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    Shape of each primitive

  .. _/NXcg_primitive/length-field:

  .. index:: length (field)

  **length**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Length of each primitive ...

        Length of each primitive

        Often the term is associated with the assumption that one
        edge is parallel to an axis of the coordinate system.

  .. _/NXcg_primitive/width-field:

  .. index:: width (field)

  **width**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Width of each primitive ...

        Width of each primitive

        Often the term is associated with the assumption that one
        edge is parallel to an axis of the coordinate system.

  .. _/NXcg_primitive/height-field:

  .. index:: height (field)

  **height**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Height of each primitive ...

        Height of each primitive

        Often the term is associated with the assumption that one
        edge is parallel to an axis of the coordinate system.

  .. _/NXcg_primitive/is_closed-field:

  .. index:: is_closed (field)

  **is_closed**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [c]) 

    True if primitive is closed such that it has properties like area or volume.

  .. _/NXcg_primitive/volume-field:

  .. index:: volume (field)

  **volume**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

    .. collapse:: Volume of each primitive. ...

        Volume of each primitive.

        Set to NaN if does not apply for primitives for which is_closed is False.
        Volume is an N-D concept for values of dimensionality larger than 1,
        Area is an alias for the two-dimensional case.

  .. _/NXcg_primitive/area-field:

  .. index:: area (field)

  **area**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_AREA <NX_AREA>`} 

    .. collapse:: Alias for surface_area of each primitive. ...

        Alias for surface_area of each primitive.

        Set to NaN if does not apply for primitives for which is_closed is False.

  .. _/NXcg_primitive/orientation-field:

  .. index:: orientation (field)

  **orientation**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [c, d]) {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`} 

    .. collapse:: Direction unit vector which points along the ...

        Direction unit vector which points along the
        longest principal axis of each primitive.

        Use the depends_on attribute to specify in which coordinate system
        these direction unit vectors are defined.

  .. _/NXcg_primitive/is_mesh-field:

  .. index:: is_mesh (field)

  **is_mesh**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

    Do the primitives define a mesh.

  .. _/NXcg_primitive/is_triangle_mesh-field:

  .. index:: is_triangle_mesh (field)

  **is_triangle_mesh**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

    Do the primitives define a triangle mesh or not.

  .. _/NXcg_primitive/is_surface_mesh-field:

  .. index:: is_surface_mesh (field)

  **is_surface_mesh**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

    Do the primitives discretize the surface of an object or not.

  .. _/NXcg_primitive/is_geodesic_mesh-field:

  .. index:: is_geodesic_mesh (field)

  **is_geodesic_mesh**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

    .. collapse:: Do the primitives define a geodesic mesh or not. ...

        Do the primitives define a geodesic mesh or not.

        A geodesic surface mesh is a triangulated surface mesh with metadata which
        can be used as an approximation to describe the surface of a sphere.
        Triangulation of spheres are commonly used in Materials Science
        for quantifying texture of materials, i.e. the relative rotation of
        crystals to sample directions.

        For additional details or an introduction into the topic of geodesic meshes
        see (from which specifically the section on subdivision schemes is relevant).

        * `E. S. Popko and C. J. Kitrick <https://doi.org/10.1201/9781003134114>`_

        Earth scientists have specific demands and different views about what should
        be included in such a base class, given that nested geodesic meshes are a key
        component of climate modelling software. For now we propose to use this
        base class as a container for organizing data related to geodesic meshes.

        Specifically an instance of this base class should detail the rule set how
        e.g. a geodesic (surface) mesh was instantiated as there are many
        possibilities to do so.

  .. _/NXcg_primitive/description-field:

  .. index:: description (field)

  **description**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Possibility to store details such as when primitives form a (specific) type ...

        Possibility to store details such as when primitives form a (specific) type
        of mesh such as geodesic meshes.

  .. _/NXcg_primitive/vertex_normal-group:

  **vertex_normal**: (optional) :ref:`NXcg_unit_normal` 


  .. _/NXcg_primitive/edge_normal-group:

  **edge_normal**: (optional) :ref:`NXcg_unit_normal` 


  .. _/NXcg_primitive/face_normal-group:

  **face_normal**: (optional) :ref:`NXcg_unit_normal` 



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXcg_primitive/area-field </NXcg_primitive/area-field>`
* :ref:`/NXcg_primitive/cardinality-field </NXcg_primitive/cardinality-field>`
* :ref:`/NXcg_primitive/center-field </NXcg_primitive/center-field>`
* :ref:`/NXcg_primitive/depends_on-field </NXcg_primitive/depends_on-field>`
* :ref:`/NXcg_primitive/description-field </NXcg_primitive/description-field>`
* :ref:`/NXcg_primitive/dimensionality-field </NXcg_primitive/dimensionality-field>`
* :ref:`/NXcg_primitive/edge_normal-group </NXcg_primitive/edge_normal-group>`
* :ref:`/NXcg_primitive/face_normal-group </NXcg_primitive/face_normal-group>`
* :ref:`/NXcg_primitive/height-field </NXcg_primitive/height-field>`
* :ref:`/NXcg_primitive/identifier-field </NXcg_primitive/identifier-field>`
* :ref:`/NXcg_primitive/identifier_offset-field </NXcg_primitive/identifier_offset-field>`
* :ref:`/NXcg_primitive/is_center_of_mass-field </NXcg_primitive/is_center_of_mass-field>`
* :ref:`/NXcg_primitive/is_closed-field </NXcg_primitive/is_closed-field>`
* :ref:`/NXcg_primitive/is_geodesic_mesh-field </NXcg_primitive/is_geodesic_mesh-field>`
* :ref:`/NXcg_primitive/is_mesh-field </NXcg_primitive/is_mesh-field>`
* :ref:`/NXcg_primitive/is_surface_mesh-field </NXcg_primitive/is_surface_mesh-field>`
* :ref:`/NXcg_primitive/is_triangle_mesh-field </NXcg_primitive/is_triangle_mesh-field>`
* :ref:`/NXcg_primitive/length-field </NXcg_primitive/length-field>`
* :ref:`/NXcg_primitive/orientation-field </NXcg_primitive/orientation-field>`
* :ref:`/NXcg_primitive/shape-field </NXcg_primitive/shape-field>`
* :ref:`/NXcg_primitive/vertex_normal-group </NXcg_primitive/vertex_normal-group>`
* :ref:`/NXcg_primitive/volume-field </NXcg_primitive/volume-field>`
* :ref:`/NXcg_primitive/width-field </NXcg_primitive/width-field>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXcg_primitive.nxdl.xml
