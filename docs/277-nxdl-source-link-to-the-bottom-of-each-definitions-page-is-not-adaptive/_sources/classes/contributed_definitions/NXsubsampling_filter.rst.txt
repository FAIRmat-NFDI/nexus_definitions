.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXsubsampling_filter.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXsubsampling_filter (base class)
    ! subsampling_filter (base class)
    see: subsampling_filter (base class); NXsubsampling_filter

.. _NXsubsampling_filter:

====================
NXsubsampling_filter
====================

**Status**:

  *base class* (contribution), extends :ref:`NXobject`

**Description**:

  Base class of a filter to sample members in a set based on their identifier.

**Symbols**:

  No symbol table

**Groups cited**:
  none

**Structure**:

  .. _/NXsubsampling_filter/min_incr_max-field:

  .. index:: min_incr_max (field)

  **min_incr_max**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Triplet of the minimum, the increment, and the maximum identifier to ...

        Triplet of the minimum, the increment, and the maximum identifier to
        include of a sequence :math:`[i_0, i_0 + 1, i_0 + 2, \ldots, i_0 + \mathcal{N}] with i_0 \in \mathcal{Z}`
        of identifier. The increment controls which n-th identifier (value) to take.

        Take as an example a dataset with 100 identifier (aka entries). Assume that
        the identifier start at zero, i.e. identifier_offset is 0). Assume further
        that min_incr_max is set to [0, 1, 99]. In this case the filter will
        yield all identifier. Setting min_incr_max to [0, 2, 99] will take each
        second identifier. Setting min_incr_max to [90, 3, 99] will take each
        third identifier beginning from identifier 90 up to 99.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXsubsampling_filter/min_incr_max-field </NXsubsampling_filter/min_incr_max-field>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXsubsampling_filter.nxdl.xml
