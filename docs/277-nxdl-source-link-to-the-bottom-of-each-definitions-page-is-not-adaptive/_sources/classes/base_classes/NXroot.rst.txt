.. auto-generated by dev_tools.docs.nxdl from the NXDL source base_classes/NXroot.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXroot (base class)
    ! root (base class)
    see: root (base class); NXroot

.. _NXroot:

======
NXroot
======

**Status**:

  base class, extends none

**Description**:

  .. collapse:: The root of a NeXus file. ...

      The root of a NeXus file.

      In the NeXus standard, only NXentry groups are allowed at the
      root level of a file, although it is permitted to include
      additional groups and fields that are not part of the NeXus
      standard and will not be validated by NeXus tools. NeXus defines
      a number of root-level attributes that can be used to annotate
      the NeXus tree.

      Note that NXroot is the only base class that does not inherit
      from the NXobject class, since the latter permits the inclusion
      of NeXus objects that are not allowed at the root level.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXentry`

.. index:: NXentry (base class); used in base class

**Structure**:

  .. _/NXroot@file_time-attribute:

  .. index:: file_time (file attribute)

  **@file_time**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>` 

    Date and time file was originally created

  .. _/NXroot@file_name-attribute:

  .. index:: file_name (file attribute)

  **@file_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    File name of original NeXus file

  .. _/NXroot@file_update_time-attribute:

  .. index:: file_update_time (file attribute)

  **@file_update_time**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>` 

    Date and time of last file change at close

  .. _/NXroot@NeXus_version-attribute:

  .. index:: NeXus_version (file attribute)

  **@NeXus_version**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Version of NeXus API used in writing the file. ...

        Version of NeXus API used in writing the file.

        Note that this is different from the version of the
        base class or application definition version number.

  .. _/NXroot@NeXus_repository-attribute:

  .. index:: NeXus_repository (file attribute)

  **@NeXus_repository**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: A repository containing the application definitions ...

        A repository containing the application definitions
        used for creating this file.
        If the ``NeXus_release`` attribute contains a commit distance and hash,
        this should refer to this repository.

  .. _/NXroot@NeXus_release-attribute:

  .. index:: NeXus_release (file attribute)

  **@NeXus_release**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: The version of NeXus definitions used in writing the file. This can either be  ...

        The version of NeXus definitions used in writing the file. This can either be a date-based
        NeXus release (e.g., YYYY.MM), see https://github.com/nexusformat/definitions/releases or
        a version tag that includes additional development information, such as a commit distance and
        a Git hash. This is typically formatted as  `vYYYY.MM.post1.dev<commit-distance>-g<git-hash>`,
        where `YYYY.MM` refers to the base version of the NeXus definitions. `post1.dev<commit-distance>` 
        indicates that the definitions are based on a commit after the base version (post1), with
        `<commit-distance>` being the number of commits since that version. `g<git-hash>` is the 
        abbreviated Git hash that identifies the specific commit of the definitions being used.

        If the version includes both a commit distance and a Git hash, the ``NeXus_repository`` 
        attribute must be included, specifying the URL of the repository containing that version.

  .. _/NXroot@HDF_version-attribute:

  .. index:: HDF_version (file attribute)

  **@HDF_version**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Version of HDF (version 4) library used in writing the file

  .. _/NXroot@HDF5_Version-attribute:

  .. index:: HDF5_Version (file attribute)

  **@HDF5_Version**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Version of HDF5 library used in writing the file. ...

        Version of HDF5 library used in writing the file.

        Note this attribute is spelled with uppercase "V",
        different than other version attributes.

  .. _/NXroot@XML_version-attribute:

  .. index:: XML_version (file attribute)

  **@XML_version**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Version of XML support library used in writing the XML file

  .. _/NXroot@h5py_version-attribute:

  .. index:: h5py_version (file attribute)

  **@h5py_version**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Version of h5py Python package used in writing the file

  .. _/NXroot@partial-attribute:

  .. index:: partial (file attribute)

  **@partial**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: A list of concepts in an application definition this file describes. ...

        A list of concepts in an application definition this file describes.
        This is for partially filling an application definition.
        If this attribute is not present the application definition is assumed
        to be valid, if not only the specified concepts/paths are assumed to be valid.

  .. _/NXroot@creator-attribute:

  .. index:: creator (file attribute)

  **@creator**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    facility or program where file originated

  .. _/NXroot@creator_version-attribute:

  .. index:: creator_version (file attribute)

  **@creator_version**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Version of facility or program used in writing the file

  .. _/NXroot@default-attribute:

  .. index:: default (file attribute)

  **@default**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Declares which :ref:`NXentry` group contains ...

        .. index:: find the default plottable data
        .. index:: plotting
        .. index:: default attribute value

        Declares which :ref:`NXentry` group contains
        the data to be shown by default.
        It is used to resolve ambiguity when
        more than one :ref:`NXentry` group exists.
        The value :ref:`names <validItemName>` the default :ref:`NXentry` group.  The
        value must be the name of a child of the current group. The child must be a
        NeXus group or a link to a NeXus group.

        It is recommended (as of NIAC2014) to use this attribute
        to help define the path to the default dataset to be plotted.
        See https://www.nexusformat.org/2014_How_to_find_default_data.html
        for a summary of the discussion.

  .. _/NXroot/ENTRY-group:

  :bolditalic:`ENTRY`: (optional) :ref:`NXentry` 

    entries


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXroot/ENTRY-group </NXroot/ENTRY-group>`
* :ref:`/NXroot@creator-attribute </NXroot@creator-attribute>`
* :ref:`/NXroot@creator_version-attribute </NXroot@creator_version-attribute>`
* :ref:`/NXroot@default-attribute </NXroot@default-attribute>`
* :ref:`/NXroot@file_name-attribute </NXroot@file_name-attribute>`
* :ref:`/NXroot@file_time-attribute </NXroot@file_time-attribute>`
* :ref:`/NXroot@file_update_time-attribute </NXroot@file_update_time-attribute>`
* :ref:`/NXroot@h5py_version-attribute </NXroot@h5py_version-attribute>`
* :ref:`/NXroot@HDF5_Version-attribute </NXroot@HDF5_Version-attribute>`
* :ref:`/NXroot@HDF_version-attribute </NXroot@HDF_version-attribute>`
* :ref:`/NXroot@NeXus_release-attribute </NXroot@NeXus_release-attribute>`
* :ref:`/NXroot@NeXus_repository-attribute </NXroot@NeXus_repository-attribute>`
* :ref:`/NXroot@NeXus_version-attribute </NXroot@NeXus_version-attribute>`
* :ref:`/NXroot@partial-attribute </NXroot@partial-attribute>`
* :ref:`/NXroot@XML_version-attribute </NXroot@XML_version-attribute>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/base_classes/NXroot.nxdl.xml
