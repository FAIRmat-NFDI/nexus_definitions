.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXapm_paraprobe_surfacer_config.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXapm_paraprobe_surfacer_config (application definition)
    ! apm_paraprobe_surfacer_config (application definition)
    see: apm_paraprobe_surfacer_config (application definition); NXapm_paraprobe_surfacer_config

.. _NXapm_paraprobe_surfacer_config:

===============================
NXapm_paraprobe_surfacer_config
===============================

**Status**:

  application definition, extends :ref:`NXobject`

**Description**:

  .. collapse:: Application definition for a configuration file of the paraprobe-surfacer tool. ...

      Application definition for a configuration file of the paraprobe-surfacer tool.

      This tool is part of the paraprobe-toolbox. Inspect :ref:`NXapm_paraprobe_tool_config` for details.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **n_alpha_values**: Number of alpha values (and offset values) to probe.

  **n_values**: How many different match values does the filter specify.

**Groups cited**:
  :ref:`NXapm_paraprobe_tool_common`, :ref:`NXapm_paraprobe_tool_config`, :ref:`NXcg_cylinder_set`, :ref:`NXcg_ellipsoid_set`, :ref:`NXcg_face_list_data_structure`, :ref:`NXcg_hexahedron_set`, :ref:`NXcg_polyhedron_set`, :ref:`NXcs_filter_boolean_mask`, :ref:`NXcs_profiling`, :ref:`NXentry`, :ref:`NXidentifier`, :ref:`NXmatch_filter`, :ref:`NXprocess`, :ref:`NXprogram`, :ref:`NXserialized`, :ref:`NXspatial_filter`, :ref:`NXsubsampling_filter`

.. index:: NXentry (base class); used in application definition, NXapm_paraprobe_tool_config (base class); used in application definition, NXidentifier (base class); used in application definition, NXserialized (base class); used in application definition, NXspatial_filter (base class); used in application definition, NXcg_hexahedron_set (base class); used in application definition, NXcg_face_list_data_structure (base class); used in application definition, NXcg_cylinder_set (base class); used in application definition, NXcg_ellipsoid_set (base class); used in application definition, NXcg_polyhedron_set (base class); used in application definition, NXcs_filter_boolean_mask (base class); used in application definition, NXsubsampling_filter (base class); used in application definition, NXmatch_filter (base class); used in application definition, NXprocess (base class); used in application definition, NXapm_paraprobe_tool_common (base class); used in application definition, NXprogram (base class); used in application definition, NXcs_profiling (base class); used in application definition

**Structure**:

  .. _/NXapm_paraprobe_surfacer_config/ENTRY-group:

  **ENTRY**: (required) :ref:`NXentry` 


    .. _/NXapm_paraprobe_surfacer_config/ENTRY/definition-field:

    .. index:: definition (field)

    **definition**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXentry/definition-field>`


      Obligatory value: ``NXapm_paraprobe_surfacer_config``

      .. _/NXapm_paraprobe_surfacer_config/ENTRY/definition@version-attribute:

      .. index:: version (field attribute)

      **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXentry/definition@version-attribute>`


    .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing-group:

    **surface_meshing**: (required) :ref:`NXapm_paraprobe_tool_config` 


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/analysis_identifier-field:

      .. index:: analysis_identifier (field)

      **analysis_identifier**: (recommended) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_config/analysis_identifier-field>`


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/alpha_value_choice-field:

      .. index:: alpha_value_choice (field)

      **alpha_value_choice**: (required) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: Specifies which method to use to define the alpha value. ...

            Specifies which method to use to define the alpha value.

            The value *convex_hull_naive* is the default. The setting instructs
            the tool to use a fast specialized algorithm for computing only
            the convex hull. The resulting triangles can be skinny.

            The value *convex_hull_refine* instructs to tool to refine the
            quality of the mesh resulting from *convex_hull_naive*
            via triangle flipping and splitting.

            The value *smallest_solid* instructs the CGAL library to choose a
            value which realizes an alpha-shape that is the smallest solid.

            The value *cgal_optimal* instructs the CGAL library to choose a
            value which the library considers as to be an optimal value.
            Details are defined in the respective section of the CGAL library
            on 3D alpha shapes.

            The value *set_of_values* instructs the tool to compute a list
            collection of alpha-shapes for the specified alpha-values.

            The value *set_of_alpha_wrappings* instructs the tool to generate
            a set of so-called alpha wrappings. These are similar to alpha-shapes
            but provide additional guarantees (such as watertightness and
            proximity constraints) on the resulting wrapping.

            Any of these values:

              * ``convex_hull_naive``

              * ``convex_hull_refine``

              * ``smallest_solid``

              * ``cgal_optimal``

              * ``set_of_values``

              * ``set_of_alpha_wrappings``


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/alpha_values-field:

      .. index:: alpha_values (field)

      **alpha_values**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 1, Dimensions: [n_alpha_values]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

        .. collapse:: Array of alpha values to use when alpha_value_choice is  ...

            Array of alpha values to use when alpha_value_choice is 
            set_of_values or when alpha_value_choice is set_of_alpha_wrappings.

      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/offset_values-field:

      .. index:: offset_values (field)

      **offset_values**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 1, Dimensions: [n_alpha_values]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

        .. collapse:: Array of offset values to use when alpha_value_choice is set_of_alpha_wrap ...

            Array of offset values to use when alpha_value_choice is set_of_alpha_wrappings.
            The array of alpha_values and offset_values define a sequence of (alpha and offset value).

      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/has_exterior_facets-field:

      .. index:: has_exterior_facets (field)

      **has_exterior_facets**: (required) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

        .. collapse:: Specifies if the tool should compute the set of exterior triangle facets ...

            Specifies if the tool should compute the set of exterior triangle facets
            for each alpha complex (for convex hull, alpha shapes, and wrappings).

      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/has_closure-field:

      .. index:: has_closure (field)

      **has_closure**: (required) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

        .. collapse:: Specifies if the tool should check if the alpha complex of ...

            Specifies if the tool should check if the alpha complex of
            exterior triangular facets is a closed polyhedron.

      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/has_interior_tetrahedra-field:

      .. index:: has_interior_tetrahedra (field)

      **has_interior_tetrahedra**: (required) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

        .. collapse:: Specifies if the tool should compute all interior tetrahedra ...

            Specifies if the tool should compute all interior tetrahedra
            of the alpha complex (currently only for alpha shapes).

      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/IDENTIFIER-group:

      **IDENTIFIER**: (optional) :ref:`NXidentifier` :ref:`⤆ </NXapm_paraprobe_tool_config/IDENTIFIER-group>`


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction-group:

      **reconstruction**: (required) :ref:`NXserialized` :ref:`⤆ </NXapm_paraprobe_tool_config/reconstruction-group>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/type-field:

        .. index:: type (field)

        **type**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/type-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/path-field:

        .. index:: path (field)

        **path**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/path-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/checksum-field:

        .. index:: checksum (field)

        **checksum**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/checksum-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/algorithm-field:

        .. index:: algorithm (field)

        **algorithm**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/algorithm-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/position-field:

        .. index:: position (field)

        **position**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_paraprobe_tool_config/reconstruction/position-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/mass_to_charge-field:

        .. index:: mass_to_charge (field)

        **mass_to_charge**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_paraprobe_tool_config/reconstruction/mass_to_charge-field>`


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging-group:

      **ranging**: (required) :ref:`NXserialized` :ref:`⤆ </NXapm_paraprobe_tool_config/ranging-group>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/type-field:

        .. index:: type (field)

        **type**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/type-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/path-field:

        .. index:: path (field)

        **path**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/path-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/checksum-field:

        .. index:: checksum (field)

        **checksum**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/checksum-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/algorithm-field:

        .. index:: algorithm (field)

        **algorithm**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/algorithm-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/ranging_definitions-field:

        .. index:: ranging_definitions (field)

        **ranging_definitions**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_paraprobe_tool_config/ranging/ranging_definitions-field>`


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter-group:

      **spatial_filter**: (required) :ref:`NXspatial_filter` :ref:`⤆ </NXapm_paraprobe_tool_config/SPATIAL_FILTER-group>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/windowing_method-field:

        .. index:: windowing_method (field)

        **windowing_method**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXspatial_filter/windowing_method-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set-group:

        **hexahedron_set**: (optional) :ref:`NXcg_hexahedron_set` :ref:`⤆ </NXspatial_filter/CG_HEXAHEDRON_SET-group>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/dimensionality-field:

          .. index:: dimensionality (field)

          **dimensionality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_primitive_set/dimensionality-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/cardinality-field:

          .. index:: cardinality (field)

          **cardinality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_primitive_set/cardinality-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/identifier_offset-field:

          .. index:: identifier_offset (field)

          **identifier_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_primitive_set/identifier_offset-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/hexahedra-group:

          **hexahedra**: (required) :ref:`NXcg_face_list_data_structure` :ref:`⤆ </NXcg_hexahedron_set/hexahedra-group>`


            .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/hexahedra/vertices-field:

            .. index:: vertices (field)

            **vertices**: (required) :ref:`NX_UINT <NX_UINT>` 


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set-group:

        **cylinder_set**: (optional) :ref:`NXcg_cylinder_set` :ref:`⤆ </NXspatial_filter/CG_CYLINDER_SET-group>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/dimensionality-field:

          .. index:: dimensionality (field)

          **dimensionality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_primitive_set/dimensionality-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/cardinality-field:

          .. index:: cardinality (field)

          **cardinality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_primitive_set/cardinality-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/identifier_offset-field:

          .. index:: identifier_offset (field)

          **identifier_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_primitive_set/identifier_offset-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/center-field:

          .. index:: center (field)

          **center**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_primitive_set/center-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/height-field:

          .. index:: height (field)

          **height**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_cylinder_set/height-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/radii-field:

          .. index:: radii (field)

          **radii**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_cylinder_set/radii-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set-group:

        **ellipsoid_set**: (optional) :ref:`NXcg_ellipsoid_set` :ref:`⤆ </NXspatial_filter/CG_ELLIPSOID_SET-group>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/dimensionality-field:

          .. index:: dimensionality (field)

          **dimensionality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_primitive_set/dimensionality-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/cardinality-field:

          .. index:: cardinality (field)

          **cardinality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_primitive_set/cardinality-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/identifier_offset-field:

          .. index:: identifier_offset (field)

          **identifier_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_primitive_set/identifier_offset-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/center-field:

          .. index:: center (field)

          **center**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_primitive_set/center-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/half_axes_radii-field:

          .. index:: half_axes_radii (field)

          **half_axes_radii**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_ellipsoid_set/half_axes_radii-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/orientation-field:

          .. index:: orientation (field)

          **orientation**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_primitive_set/orientation-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/polyhedron_set-group:

        **polyhedron_set**: (optional) :ref:`NXcg_polyhedron_set` :ref:`⤆ </NXspatial_filter/CG_POLYHEDRON_SET-group>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask-group:

        **bitmask**: (optional) :ref:`NXcs_filter_boolean_mask` :ref:`⤆ </NXspatial_filter/CS_FILTER_BOOLEAN_MASK-group>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/number_of_objects-field:

          .. index:: number_of_objects (field)

          **number_of_objects**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXcs_filter_boolean_mask/number_of_objects-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/bitdepth-field:

          .. index:: bitdepth (field)

          **bitdepth**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXcs_filter_boolean_mask/bitdepth-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/mask-field:

          .. index:: mask (field)

          **mask**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXcs_filter_boolean_mask/mask-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/identifier-field:

          .. index:: identifier (field)

          **identifier**: (required) :ref:`NX_UINT <NX_UINT>` 


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/evaporation_id_filter-group:

      **evaporation_id_filter**: (optional) :ref:`NXsubsampling_filter` :ref:`⤆ </NXapm_paraprobe_tool_config/SUBSAMPLING_FILTER-group>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/evaporation_id_filter/min_incr_max-field:

        .. index:: min_incr_max (field)

        **min_incr_max**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXsubsampling_filter/min_incr_max-field>`


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/iontype_filter-group:

      **iontype_filter**: (optional) :ref:`NXmatch_filter` :ref:`⤆ </NXapm_paraprobe_tool_config/MATCH_FILTER-group>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/iontype_filter/method-field:

        .. index:: method (field)

        **method**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXmatch_filter/method-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/iontype_filter/match-field:

        .. index:: match (field)

        **match**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXmatch_filter/match-field>`


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/hit_multiplicity_filter-group:

      **hit_multiplicity_filter**: (optional) :ref:`NXmatch_filter` :ref:`⤆ </NXapm_paraprobe_tool_config/MATCH_FILTER-group>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/hit_multiplicity_filter/method-field:

        .. index:: method (field)

        **method**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXmatch_filter/method-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/hit_multiplicity_filter/match-field:

        .. index:: match (field)

        **match**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXmatch_filter/match-field>`


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/preprocessing-group:

      **preprocessing**: (required) :ref:`NXprocess` 


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/preprocessing/method-field:

        .. index:: method (field)

        **method**: (required) :ref:`NX_CHAR <NX_CHAR>` 

          .. collapse:: Specifies the method that is used to preprocess the point cloud ...

              Specifies the method that is used to preprocess the point cloud
              prior to the alpha-shape computation.

              The option *default* specifies that no such filtering is applied.
              The option *kuehbach* specifies that a Hoshen-Kopelman
              percolation analysis is used to identify points that lie closer
              to the edge of the dataset. Details about the methods are reported
              in `M. Kühbach et al. <https://doi.org/10.1038/s41524-020-00486-1>`_.

              Any of these values: ``default`` | ``kuehbach``

        .. _/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/preprocessing/kernel_width-field:

        .. index:: kernel_width (field)

        **kernel_width**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

          .. collapse:: When using the kuehbach preprocessing, this is the width of the ...

              When using the kuehbach preprocessing, this is the width of the
              kernel for identifying which ions are in voxels close to the
              edge of the point cloud.

    .. _/NXapm_paraprobe_surfacer_config/ENTRY/common-group:

    **common**: (required) :ref:`NXapm_paraprobe_tool_common` 


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/common/status-field:

      .. index:: status (field)

      **status**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_paraprobe_tool_common/status-field>`


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/common/programID-group:

      **programID**: (required) :ref:`NXprogram` :ref:`⤆ </NXapm_paraprobe_tool_common/PROGRAM-group>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/common/programID/program-field:

        .. index:: program (field)

        **program**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXprogram/program-field>`


          .. _/NXapm_paraprobe_surfacer_config/ENTRY/common/programID/program@version-attribute:

          .. index:: version (field attribute)

          **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXprogram/program@version-attribute>`


      .. _/NXapm_paraprobe_surfacer_config/ENTRY/common/profiling-group:

      **profiling**: (recommended) :ref:`NXcs_profiling` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling-group>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/start_time-field:

        .. index:: start_time (field)

        **start_time**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/start_time-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/end_time-field:

        .. index:: end_time (field)

        **end_time**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/end_time-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/total_elapsed_time-field:

        .. index:: total_elapsed_time (field)

        **total_elapsed_time**: (required) :ref:`NX_FLOAT <NX_FLOAT>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/total_elapsed_time-field>`


        .. _/NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/current_working_directory-field:

        .. index:: current_working_directory (field)

        **current_working_directory**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcs_profiling/current_working_directory-field>`



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY-group </NXapm_paraprobe_surfacer_config/ENTRY-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/common-group </NXapm_paraprobe_surfacer_config/ENTRY/common-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/common/profiling-group </NXapm_paraprobe_surfacer_config/ENTRY/common/profiling-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/current_working_directory-field </NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/current_working_directory-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/end_time-field </NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/end_time-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/start_time-field </NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/start_time-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/total_elapsed_time-field </NXapm_paraprobe_surfacer_config/ENTRY/common/profiling/total_elapsed_time-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/common/programID-group </NXapm_paraprobe_surfacer_config/ENTRY/common/programID-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/common/programID/program-field </NXapm_paraprobe_surfacer_config/ENTRY/common/programID/program-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/common/programID/program@version-attribute </NXapm_paraprobe_surfacer_config/ENTRY/common/programID/program@version-attribute>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/common/status-field </NXapm_paraprobe_surfacer_config/ENTRY/common/status-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/definition-field </NXapm_paraprobe_surfacer_config/ENTRY/definition-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/definition@version-attribute </NXapm_paraprobe_surfacer_config/ENTRY/definition@version-attribute>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/alpha_value_choice-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/alpha_value_choice-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/alpha_values-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/alpha_values-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/analysis_identifier-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/analysis_identifier-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/evaporation_id_filter-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/evaporation_id_filter-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/evaporation_id_filter/min_incr_max-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/evaporation_id_filter/min_incr_max-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/has_closure-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/has_closure-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/has_exterior_facets-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/has_exterior_facets-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/has_interior_tetrahedra-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/has_interior_tetrahedra-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/hit_multiplicity_filter-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/hit_multiplicity_filter-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/hit_multiplicity_filter/match-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/hit_multiplicity_filter/match-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/hit_multiplicity_filter/method-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/hit_multiplicity_filter/method-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/IDENTIFIER-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/IDENTIFIER-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/iontype_filter-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/iontype_filter-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/iontype_filter/match-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/iontype_filter/match-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/iontype_filter/method-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/iontype_filter/method-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/offset_values-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/offset_values-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/preprocessing-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/preprocessing-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/preprocessing/kernel_width-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/preprocessing/kernel_width-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/preprocessing/method-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/preprocessing/method-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/algorithm-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/algorithm-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/checksum-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/checksum-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/path-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/path-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/ranging_definitions-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/ranging_definitions-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/type-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/ranging/type-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/algorithm-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/algorithm-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/checksum-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/checksum-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/mass_to_charge-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/mass_to_charge-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/path-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/path-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/position-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/position-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/type-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/reconstruction/type-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/bitdepth-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/bitdepth-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/identifier-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/identifier-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/mask-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/mask-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/number_of_objects-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/bitmask/number_of_objects-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/cardinality-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/cardinality-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/center-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/center-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/dimensionality-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/dimensionality-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/height-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/height-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/identifier_offset-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/identifier_offset-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/radii-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/cylinder_set/radii-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/cardinality-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/cardinality-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/center-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/center-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/dimensionality-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/dimensionality-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/half_axes_radii-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/half_axes_radii-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/identifier_offset-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/identifier_offset-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/orientation-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/ellipsoid_set/orientation-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/cardinality-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/cardinality-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/dimensionality-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/dimensionality-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/hexahedra-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/hexahedra-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/hexahedra/vertices-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/hexahedra/vertices-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/identifier_offset-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/hexahedron_set/identifier_offset-field>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/polyhedron_set-group </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/polyhedron_set-group>`
* :ref:`/NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/windowing_method-field </NXapm_paraprobe_surfacer_config/ENTRY/surface_meshing/spatial_filter/windowing_method-field>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXapm_paraprobe_surfacer_config.nxdl.xml
