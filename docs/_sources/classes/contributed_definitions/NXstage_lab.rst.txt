.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXstage_lab.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXstage_lab (base class)
    ! stage_lab (base class)
    see: stage_lab (base class); NXstage_lab

.. _NXstage_lab:

===========
NXstage_lab
===========

**Status**:

  base class, extends :ref:`NXcomponent_em`

**Description**:

  .. collapse:: Base class for a stage (lab) used to hold, orient, and prepare a specimen. ...

      Base class for a stage (lab) used to hold, orient, and prepare a specimen.

      Modern stages are multi-functional devices. Stages provide a controlled
      environment around the specimen. Stages enable experimentalists to apply
      controlled external stimuli on the specimen. A stage_lab is a multi-purpose
      /-functional tool that is constructed from multiple actuators, sensors,
      and other components.

      With such stages comes the need for storing various (meta)data
      that are generated while working and modifying the sample.

      Modern stages realize a hierarchy of components. Two examples are given to help
      clarify how :ref:`NXstage_lab` instances should be used: Take a specimen that is
      mounted on a multi-axial tilt rotation holder. This holder is fixed in the
      support unit which connects the holder to the rest of the instrument.
      Evidently different components are all considerable as to represent instances
      of stages.

      In another example, taken from atom probe microscopy, researchers may work
      with wire samples which are clipped into a larger fixing unit to enable
      careful specimen handling. Alternatively, a microtip is a silicon post
      upon which e.g. an atom probe specimen is mounted.
      Multiple microtips are grouped into a microtip array to conveniently enable
      loading of multiple specimens into the instrument with fewer operations.
      That microtip array is fixed on a holder. Fixture units in atom probe are known
      as stubs. Stubs in turn are positioned onto pucks. Pucks are then loaded onto
      carousels. A carousel is a carrier unit with which eventually entire sets of
      specimens can be moved in between parts of the microscope. All of these units
      can be considered stage_lab instances.

      The :ref:`NXstage_lab` base class reflects this hierarchy. To cover for an as flexible
      design of complex stages as possible, users should nest multiple instances of
      :ref:`NXstage_lab` according to their needs to reflect the differences between what
      they consider as the holder and what they consider is the stage.
      The alias field can be used to specify the community jargon if necessary.

      However, a much clearer approach to reflect the hierarchy of all :ref:`NXstage_lab`
      instances is postfix each instance named stage_lab with integers starting
      from 1 as the top level unit.
      In the microtip example one could thus use stage_lab1 for the microtip,
      stage_lab2 for the microtip array, stage_lab3 holder, etc.
      The depends_on keyword should be used to additional clarify the hierarchy
      especially when users decide to not follow the above-mentioned postfixing
      notation or when is not obvious from the postfixes which stage_lab is at
      which level of the stage_lab hierarchy.

      Some examples for stage_labs in applications:

      * A nanoparticle on a copper grid. The copper grid is the holder.
        The grid itself is fixed to a stage.
      * An atom probe specimen fixed in a stub. In this case the stub can be
        considered the holder, while the cryostat temperature control unit is
        a component of the stage.
      * Samples with arrays of specimens, like a microtip on a microtip array
        is an example of an at least three-layer hierarchy commonly employed for
        efficient sequential processing of atom probe experiments.
      * With one entry of an application definition only one microtip should be
        described. Therefore, the microtip is the specimen,
        the array is the holder and the remaining mounting unit
        that is attached to the cryo-controller is the stage.
      * For in-situ experiments with e.g. chips with read-out electronics
        as actuators, the chips are again placed in a larger unit. A typical
        example are in-situ experiments using e.g. the tools of `Protochips <https://www.protochips.com>`_.
      * Other examples are (quasi) in-situ experiments where experimentalists
        anneal or deform the specimen via e.g. in-situ tensile testing machines
        which are mounted on the specimen holder.

      For specific details and inspiration about stages in electron microscopes:

      * `Holders with multiple axes <https://www.nanotechnik.com/e5as.html>`_
      * `Chip-based designs <https://www.protochips.com/products/fusion/fusion-select-components/>`_
      * `Further chip-based designs <https://www.nanoprobetech.com/about>`_
      * `Stages in transmission electron microscopy <https://doi.org/10.1007/978-3-662-14824-2>`_ (page 103, table 4.2)
      * `Further stages in transmission electron microscopy <https://doi.org/10.1007/978-1-4757-2519-3>`_ (page 124ff)
      * `Specimens in atom probe <https://doi.org/10.1007/978-1-4614-8721-0>`_ (page 47ff)
      * `Exemplar micro-manipulators <https://nano.oxinst.com/products/omniprobe/omniprobe-200>`_

      We are looking forward to suggestions from the scientists.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXpositioner`, :ref:`NXsensor`

.. index:: NXpositioner (base class); used in base class, NXsensor (base class); used in base class

**Structure**:

  .. _/NXstage_lab/design-field:

  .. index:: design (field)

  **design**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Principal design of the stage. ...

        Principal design of the stage.

        Exemplar terms could be side_entry, top_entry,
        single_tilt, quick_change, multiple_specimen,
        bulk_specimen, double_tilt, tilt_rotate,
        heating_chip, atmosphere_chip,
        electrical_biasing_chip, liquid_cell_chip

  .. _/NXstage_lab/alias-field:

  .. index:: alias (field)

  **alias**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Free-text field to give a term how that a stage_lab at this level of the ...

        Free-text field to give a term how that a stage_lab at this level of the
        stage_lab hierarchy is commonly referred to. Examples could be stub,
        puck, carousel, microtip, clip, holder, etc.

  .. _/NXstage_lab/tilt_1-field:

  .. index:: tilt_1 (field)

  **tilt_1**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`} 

    .. collapse:: The interpretation of this tilt should be specialized ...

        The interpretation of this tilt should be specialized
        and thus detailed via the application definition.

  .. _/NXstage_lab/tilt_2-field:

  .. index:: tilt_2 (field)

  **tilt_2**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`} 

    .. collapse:: The interpretation of this tilt should be specialized ...

        The interpretation of this tilt should be specialized
        and thus detailed via the application definition.

  .. _/NXstage_lab/rotation-field:

  .. index:: rotation (field)

  **rotation**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`} 

    .. collapse:: The interpretation of this tilt should be specialized ...

        The interpretation of this tilt should be specialized
        and thus detailed via the application definition.

  .. _/NXstage_lab/position-field:

  .. index:: position (field)

  **position**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: The interpretation of this tilt should be specialized ...

        The interpretation of this tilt should be specialized
        and thus detailed via the application definition.

  .. _/NXstage_lab/bias_voltage-field:

  .. index:: bias_voltage (field)

  **bias_voltage**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_VOLTAGE <NX_VOLTAGE>`} 

    Voltage applied to the stage to decelerate electrons.

  .. _/NXstage_lab/POSITIONER-group:

  **POSITIONER**: (optional) :ref:`NXpositioner` 


  .. _/NXstage_lab/SENSOR-group:

  **SENSOR**: (optional) :ref:`NXsensor` 



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXstage_lab/alias-field </NXstage_lab/alias-field>`
* :ref:`/NXstage_lab/bias_voltage-field </NXstage_lab/bias_voltage-field>`
* :ref:`/NXstage_lab/design-field </NXstage_lab/design-field>`
* :ref:`/NXstage_lab/position-field </NXstage_lab/position-field>`
* :ref:`/NXstage_lab/POSITIONER-group </NXstage_lab/POSITIONER-group>`
* :ref:`/NXstage_lab/rotation-field </NXstage_lab/rotation-field>`
* :ref:`/NXstage_lab/SENSOR-group </NXstage_lab/SENSOR-group>`
* :ref:`/NXstage_lab/tilt_1-field </NXstage_lab/tilt_1-field>`
* :ref:`/NXstage_lab/tilt_2-field </NXstage_lab/tilt_2-field>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXstage_lab.nxdl.xml
