.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXms_ipf.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXms_ipf (base class)
    ! ms_ipf (base class)
    see: ms_ipf (base class); NXms_ipf

.. _NXms_ipf:

========
NXms_ipf
========

**Status**:

  base class, extends :ref:`NXprocess`

**Description**:

  Base class to store an inverse pole figure (IPF) mapping (IPF map).

**Symbols**:


  **n_z**: Number of pixel along the z slowest direction.

  **n_y**: Number of pixel along the y slow direction.

  **n_x**: Number of pixel along the x fast direction.

  **n_rgb**: Number of RGB values along the fastest direction, always three.

  **d**: Dimensionality of the mapping (either 2 or 3).

**Groups cited**:
  :ref:`NXcg_grid`, :ref:`NXdata`

.. index:: NXcg_grid (base class); used in base class, NXdata (base class); used in base class

**Structure**:

  .. _/NXms_ipf@depends_on-attribute:

  .. index:: depends_on (file attribute)

  **@depends_on**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Reference to the coordinate system whereby the projection_direction is defined ...

        Reference to the coordinate system whereby the projection_direction is defined.

        If the field depends_on is not provided but a parent of the instance
        of this base class or its specialization defines an :ref:`NXcoordinate_system_set`
        and exactly one :ref:`NXcoordinate_system`, the reference points to this system.

        If nothing is provided and none of the above-mentioned references pointing
        in a parent, McStas is assumed.

  .. _/NXms_ipf/projection_direction-field:

  .. index:: projection_direction (field)

  **projection_direction**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    The direction along which orientations are projected.

  .. _/NXms_ipf/interpolation-field:

  .. index:: interpolation (field)

  **interpolation**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: How where orientation values at the location of the output grid ...

        How where orientation values at the location of the output grid
        positions computed.

        Nearest neighbour means the orientation of the closed (Euclidean distance)
        grid point of the input_grid was taken.

        Obligatory value: ``nearest_neighbour``

  .. _/NXms_ipf/input_grid-group:

  **input_grid**: (optional) :ref:`NXcg_grid` 

    .. collapse:: Details about the original grid. ...

        Details about the original grid.

        Here original grid means the one onto which the IPF map was computed
        when exported from the tech partner's file format representation.

  .. _/NXms_ipf/output_grid-group:

  **output_grid**: (optional) :ref:`NXcg_grid` 

    .. collapse:: Details about the grid onto which the IPF is recomputed. ...

        Details about the grid onto which the IPF is recomputed.

        Rescaling the visualization of the IPF map may be needed to enable
        visualization in specific software tools like H5Web.
        The value specifies the fractional change of the spacing between
        the original mapping and the scaled one.

  .. _/NXms_ipf/map-group:

  **map**: (optional) :ref:`NXdata` 

    .. collapse:: Inverse pole figure mapping. ...

        Inverse pole figure mapping.

        Default inverse pole figure (IPF) plot of the data specific for each
        phase. No ipf_mapID instances for non-indexed scan points as these are
        by definition assigned the null phase with phase_identifier 0.
        Inspect the definition of :ref:`NXcrystal_structure` and its field
        phase_identifier for further details.

        Details about possible regridding and associated interpolation
        during the computation of the IPF map visualization can be stored
        using the input_grid, output_grid, and interpolation fields.

        The main purpose of this map is to offer a normalized default representation
        of the IPF map for consumption by a research data management system (RDMS).
        This is aligned with the first aim of :ref:`NXms_ipf`, to bring colleagues and
        users of IPF maps together to discuss which pieces of information
        need to be stored together. We are convinced a step-by-step design and
        community-driven discussion about which pieces of information should
        and/or need to be included is a practical strategy to work towards an
        interoperable description and data model for exchanging IPF maps as specific
        community-accepted tools to convey orientation maps.

        With this design the individual RDMS solutions and tools can still continue
        to support specific custom data analyses workflow and routes but at least
        there is one common understanding which enables also those users who are
        not necessarily experts in all the details of the underlying techniques
        can understand and thus eventually judge if the dataset is worth to be
        reused or repurposed.

    .. _/NXms_ipf/map/data-field:

    .. index:: data (field)

    **data**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 3, Dimensions: [n_y, n_x, 3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXdata/DATA-field>`

      Inverse pole figure color code for each map coordinate.

    .. _/NXms_ipf/map/axis_z-field:

    .. index:: axis_z (field)

    **axis_z**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_z]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXdata/AXISNAME-field>`

      Pixel center coordinate calibrated for step size along the z axis of the map.

    .. _/NXms_ipf/map/axis_y-field:

    .. index:: axis_y (field)

    **axis_y**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_y]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXdata/AXISNAME-field>`

      Pixel center coordinate calibrated for step size along the y axis of the map.

    .. _/NXms_ipf/map/axis_x-field:

    .. index:: axis_x (field)

    **axis_x**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_x]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXdata/AXISNAME-field>`

      Pixel center coordinate calibrated for step size along the x axis of the map.

  .. _/NXms_ipf/legend-group:

  **legend**: (optional) :ref:`NXdata` 

    .. collapse:: The color code which maps colors into orientation into the fundamental zone. ...

        The color code which maps colors into orientation into the fundamental zone.

        For each stereographic standard triangle (SST), i.e. a rendering of the
        fundamental zone of the crystal-symmetry-reduced orientation space
        SO3, it is possible to define a color model which assigns each point in
        the fundamental zone a color.

        Different mapping models are used. These implement (slightly) different
        scaling relations. Differences exist across representations of tech partners.

        Differences are which base colors of the RGB color model are placed in
        which extremal position of the SST and where the white point is located.

        For further details see:

        * [G. Nolze et al.](https://doi.org/10.1107/S1600576716012942)
        * Srikanth Patala and coworkers"'" work and of others.

        Details are implementation-specific and not standardized yet.

        Given that the SST has a complicated geometry, it cannot yet be
        visualized using tools like H5Web, which is why for now the matrix
        of a rasterized image which is rendered by the backend tool gets
        copied into an RGB matrix to offer a default plot.

    .. _/NXms_ipf/legend/data-field:

    .. index:: data (field)

    **data**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 3, Dimensions: [n_y, n_x, 3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXdata/DATA-field>`

      Inverse pole figure color code for each map coordinate.

    .. _/NXms_ipf/legend/axis_y-field:

    .. index:: axis_y (field)

    **axis_y**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_y]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXdata/AXISNAME-field>`

      Pixel along the y-axis.

    .. _/NXms_ipf/legend/axis_x-field:

    .. index:: axis_x (field)

    **axis_x**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_x]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXdata/AXISNAME-field>`

      Pixel along the x-axis.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXms_ipf/input_grid-group </NXms_ipf/input_grid-group>`
* :ref:`/NXms_ipf/interpolation-field </NXms_ipf/interpolation-field>`
* :ref:`/NXms_ipf/legend-group </NXms_ipf/legend-group>`
* :ref:`/NXms_ipf/legend/axis_x-field </NXms_ipf/legend/axis_x-field>`
* :ref:`/NXms_ipf/legend/axis_y-field </NXms_ipf/legend/axis_y-field>`
* :ref:`/NXms_ipf/legend/data-field </NXms_ipf/legend/data-field>`
* :ref:`/NXms_ipf/map-group </NXms_ipf/map-group>`
* :ref:`/NXms_ipf/map/axis_x-field </NXms_ipf/map/axis_x-field>`
* :ref:`/NXms_ipf/map/axis_y-field </NXms_ipf/map/axis_y-field>`
* :ref:`/NXms_ipf/map/axis_z-field </NXms_ipf/map/axis_z-field>`
* :ref:`/NXms_ipf/map/data-field </NXms_ipf/map/data-field>`
* :ref:`/NXms_ipf/output_grid-group </NXms_ipf/output_grid-group>`
* :ref:`/NXms_ipf/projection_direction-field </NXms_ipf/projection_direction-field>`
* :ref:`/NXms_ipf@depends_on-attribute </NXms_ipf@depends_on-attribute>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXms_ipf.nxdl.xml
