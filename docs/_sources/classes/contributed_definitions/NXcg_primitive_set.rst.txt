.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXcg_primitive_set.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXcg_primitive_set (base class)
    ! cg_primitive_set (base class)
    see: cg_primitive_set (base class); NXcg_primitive_set

.. _NXcg_primitive_set:

==================
NXcg_primitive_set
==================

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  .. collapse:: Computational geometry description of a set of primitives in Euclidean space. ...

      Computational geometry description of a set of primitives in Euclidean space.

      Primitives must neither be degenerated nor self-intersect.
      Individual primitives can differ in their properties (e.g. size, shape, rotation).

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **d**: The dimensionality of the space.

  **c**: The cardinality of the set, i.e. the number of members.

**Groups cited**:
  :ref:`NXcg_unit_normal_set`

.. index:: NXcg_unit_normal_set (base class); used in base class

**Structure**:

  .. _/NXcg_primitive_set@depends_on-attribute:

  .. index:: depends_on (file attribute)

  **@depends_on**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Hint to help resolve in which Euclidean coordinate system field values ...

        Hint to help resolve in which Euclidean coordinate system field values
        like center or orientation are defined.

  .. _/NXcg_primitive_set/dimensionality-field:

  .. index:: dimensionality (field)

  **dimensionality**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: The dimensionality of the primitive set. ...

        The dimensionality of the primitive set.

        Any of these values: ``1`` | ``2`` | ``3``

  .. _/NXcg_primitive_set/cardinality-field:

  .. index:: cardinality (field)

  **cardinality**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    The cardinality of the primitive set.

  .. _/NXcg_primitive_set/identifier_offset-field:

  .. index:: identifier_offset (field)

  **identifier_offset**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Integer offset whereby the identifier of the first member ...

        Integer offset whereby the identifier of the first member
        of the set differs from zero.

        Identifiers can be defined either implicitly or explicitly.
        For implicit indexing identifiers are defined on the interval
        :math:`[identifier\_offset, identifier\_offset + c - 1]`.

        Therefore, implicit identifier are completely defined by the value of
        identifier_offset and cardinality. For example if identifier run from
        -2 to 3 the value for identifier_offset is -2.

        For explicit indexing the field identifier has to be used.
        Fortran-/Matlab- and C-/Python-style indexing have specific implicit
        identifier conventions where identifier_offset is 1 and 0 respectively.

  .. _/NXcg_primitive_set/identifier-field:

  .. index:: identifier (field)

  **identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [c]) 

    Identifier of each member for explicit indexing.

  .. _/NXcg_primitive_set/center-field:

  .. index:: center (field)

  **center**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [c, d]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

    The center of mass position of each primitive.

  .. _/NXcg_primitive_set/is_center_of_mass-field:

  .. index:: is_center_of_mass (field)

  **is_center_of_mass**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [c]) 

    True if the center is a center of mass.

  .. _/NXcg_primitive_set/shape-field:

  .. index:: shape (field)

  **shape**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [c, d]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    A qualitative description of the shape of each primitive.

  .. _/NXcg_primitive_set/length-field:

  .. index:: length (field)

  **length**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Qualifier for the length of characteristic features of the primitive. ...

        Qualifier for the length of characteristic features of the primitive.

        Often the term length is associated with the assumption that one
        edge is parallel to an axis of the coordinate system.

  .. _/NXcg_primitive_set/width-field:

  .. index:: width (field)

  **width**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Qualifier often used to describe the length of one characteristic edge ...

        Qualifier often used to describe the length of one characteristic edge
        within the coordinate system.

  .. _/NXcg_primitive_set/is_closed-field:

  .. index:: is_closed (field)

  **is_closed**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [c]) 

    True if primitive is closed such that it has properties like area or volume.

  .. _/NXcg_primitive_set/volume-field:

  .. index:: volume (field)

  **volume**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_VOLUME <NX_VOLUME>`} 

    .. collapse:: Volume of each primitive. ...

        Volume of each primitive.

        Set to NaN if does not apply for primitives for which is_closed is False.

  .. _/NXcg_primitive_set/area-field:

  .. index:: area (field)

  **area**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_AREA <NX_AREA>`} 

    .. collapse:: Alias for surface_area of each primitive. ...

        Alias for surface_area of each primitive.

        Set to NaN if does not apply for primitives for which is_closed is False.

  .. _/NXcg_primitive_set/orientation-field:

  .. index:: orientation (field)

  **orientation**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [c, d]) {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`} 

    .. collapse:: Direction unit vector which points along the ...

        Direction unit vector which points along the
        longest principal axis of each primitive.

        Use the depends_on attribute to specify in which coordinate system
        these direction unit vectors are defined.

  .. _/NXcg_primitive_set/vertex_normal-group:

  **vertex_normal**: (optional) :ref:`NXcg_unit_normal_set` 


  .. _/NXcg_primitive_set/edge_normal-group:

  **edge_normal**: (optional) :ref:`NXcg_unit_normal_set` 


  .. _/NXcg_primitive_set/face_normal-group:

  **face_normal**: (optional) :ref:`NXcg_unit_normal_set` 



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXcg_primitive_set/area-field </NXcg_primitive_set/area-field>`
* :ref:`/NXcg_primitive_set/cardinality-field </NXcg_primitive_set/cardinality-field>`
* :ref:`/NXcg_primitive_set/center-field </NXcg_primitive_set/center-field>`
* :ref:`/NXcg_primitive_set/dimensionality-field </NXcg_primitive_set/dimensionality-field>`
* :ref:`/NXcg_primitive_set/edge_normal-group </NXcg_primitive_set/edge_normal-group>`
* :ref:`/NXcg_primitive_set/face_normal-group </NXcg_primitive_set/face_normal-group>`
* :ref:`/NXcg_primitive_set/identifier-field </NXcg_primitive_set/identifier-field>`
* :ref:`/NXcg_primitive_set/identifier_offset-field </NXcg_primitive_set/identifier_offset-field>`
* :ref:`/NXcg_primitive_set/is_center_of_mass-field </NXcg_primitive_set/is_center_of_mass-field>`
* :ref:`/NXcg_primitive_set/is_closed-field </NXcg_primitive_set/is_closed-field>`
* :ref:`/NXcg_primitive_set/length-field </NXcg_primitive_set/length-field>`
* :ref:`/NXcg_primitive_set/orientation-field </NXcg_primitive_set/orientation-field>`
* :ref:`/NXcg_primitive_set/shape-field </NXcg_primitive_set/shape-field>`
* :ref:`/NXcg_primitive_set/vertex_normal-group </NXcg_primitive_set/vertex_normal-group>`
* :ref:`/NXcg_primitive_set/volume-field </NXcg_primitive_set/volume-field>`
* :ref:`/NXcg_primitive_set/width-field </NXcg_primitive_set/width-field>`
* :ref:`/NXcg_primitive_set@depends_on-attribute </NXcg_primitive_set@depends_on-attribute>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXcg_primitive_set.nxdl.xml
