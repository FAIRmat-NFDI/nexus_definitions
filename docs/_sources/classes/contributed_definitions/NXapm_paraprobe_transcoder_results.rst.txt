.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXapm_paraprobe_transcoder_results.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXapm_paraprobe_transcoder_results (application definition)
    ! apm_paraprobe_transcoder_results (application definition)
    see: apm_paraprobe_transcoder_results (application definition); NXapm_paraprobe_transcoder_results

.. _NXapm_paraprobe_transcoder_results:

==================================
NXapm_paraprobe_transcoder_results
==================================

**Status**:

  application definition, extends :ref:`NXobject`

**Description**:

  .. collapse:: Application definition for results files of the paraprobe-transcoder tool. ...

      Application definition for results files of the paraprobe-transcoder tool.

      This tool is part of the paraprobe-toolbox. Inspect the base class :ref:`NXapm_paraprobe_tool_results`.
      The purpose and need of the paraprobe-transcoder tool is to create a standardized representation
      of reconstructed position and mass-to-charge-state-ratio values surplus other pieces of information
      to enable working with atom probe data in reconstruction space in the paraprobe-toolbox.
      This includes ranging definitions which map mass-to-charge-state ratio values onto iontypes.

      So far the atom probe community has not yet agreed upon a comprehensive standardization on how to
      exchange information especially when it comes to the communication of configurations and results
      from analyses of atom probe data. Instead, different simplistic file formats are used, such as POS, ePOS,
      APT, or RNG and RRNG. None of these formats, though, are self-descriptive, standardize, or document
      their origin and thus the sequence in which the file was generated during an analysis.

      Paraprobe-transcoder solves this limitation by interpreting the information content in such files
      and standardize the representation prior injection into the scientific data analysis tools of the toolbox.
      Therefore, the here proposed set of NeXus base classes and application definitions can be a useful
      starting point for the atom probe community to take advantage of standardized information
      exchange and improve the here proposed classes and concepts to become more inclusive.

      Paraprobe-transcoder uses a Python library developed based on efforts by members of the
      global atom probe community `International Field Emission Society (IFES) Atom Probe Technical Committee (APT TC) <https://www.github.com/atomprobe-tc/ifes_apt_tc_data_modeling>`_. This library offers the
      actual low-level I/O operations and respective information interpretation of above-mentioned file formats.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **n_ions**: The total number of ions in the reconstruction.

  **n_ivec_max**: Maximum number of allowed atoms per (molecular) ion (fragment). Needs to match maximum_number_of_atoms_per_molecular_ion.

  **n_topology**: Total number of integers in the supplementary XDMF topology array.

**Groups cited**:
  :ref:`NXapm_paraprobe_tool_common`, :ref:`NXapm_paraprobe_tool_results`, :ref:`NXcoordinate_system_set`, :ref:`NXcoordinate_system`, :ref:`NXcs_filter_boolean_mask`, :ref:`NXcs_profiling`, :ref:`NXentry`, :ref:`NXion`, :ref:`NXprocess`, :ref:`NXprogram`, :ref:`NXserialized`, :ref:`NXuser`

.. index:: NXentry (base class); used in application definition, NXapm_paraprobe_tool_results (base class); used in application definition, NXserialized (base class); used in application definition, NXcs_filter_boolean_mask (base class); used in application definition, NXprocess (base class); used in application definition, NXion (base class); used in application definition, NXapm_paraprobe_tool_common (base class); used in application definition, NXprogram (base class); used in application definition, NXcs_profiling (base class); used in application definition, NXuser (base class); used in application definition, NXcoordinate_system_set (base class); used in application definition, NXcoordinate_system (base class); used in application definition

**Structure**:

  .. _/NXapm_paraprobe_transcoder_results/ENTRY-group:

  **ENTRY**: (required) :ref:`NXentry` 


    .. _/NXapm_paraprobe_transcoder_results/ENTRY/definition-field:

    .. index:: definition (field)

    **definition**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXentry/definition-field>`


      Obligatory value: ``NXapm_paraprobe_transcoder_results``

      .. _/NXapm_paraprobe_transcoder_results/ENTRY/definition@version-attribute:

      .. index:: version (field attribute)

      **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXentry/definition@version-attribute>`


    .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe-group:

    **atom_probe**: (required) :ref:`NXapm_paraprobe_tool_results` 


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/analysis_identifier-field:

      .. index:: analysis_identifier (field)

      **analysis_identifier**: (required) :ref:`NX_UINT <NX_UINT>` 


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config-group:

      **config**: (required) :ref:`NXserialized` 


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/type-field:

        .. index:: type (field)

        **type**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/type-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/path-field:

        .. index:: path (field)

        **path**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/path-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/checksum-field:

        .. index:: checksum (field)

        **checksum**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/checksum-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/algorithm-field:

        .. index:: algorithm (field)

        **algorithm**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/algorithm-field>`


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window-group:

      **window**: (optional) :ref:`NXcs_filter_boolean_mask` :ref:`⤆ </NXapm_paraprobe_tool_results/window-group>`

        .. collapse:: By default the entire reconstructed volume is processed. ...

            By default the entire reconstructed volume is processed.
            In this case, using window is also equivalent to an
            NXspatial_filter that specified a window *entire_dataset*.

        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window/number_of_ions-field:

        .. index:: number_of_ions (field)

        **number_of_ions**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_results/window/number_of_ions-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window/bitdepth-field:

        .. index:: bitdepth (field)

        **bitdepth**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_results/window/bitdepth-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window/mask-field:

        .. index:: mask (field)

        **mask**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_results/window/mask-field>`


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/mass_to_charge_conversion-group:

      **mass_to_charge_conversion**: (required) :ref:`NXprocess` 


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/mass_to_charge_conversion/mass_to_charge-field:

        .. index:: mass_to_charge (field)

        **mass_to_charge**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 1, Dimensions: [n_ions]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

          Mass-to-charge-state-ratio values.

      .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction-group:

      **reconstruction**: (required) :ref:`NXprocess` 


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/reconstructed_positions-field:

        .. index:: reconstructed_positions (field)

        **reconstructed_positions**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 2, Dimensions: [n_ions, 3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

          .. collapse:: Three-dimensional reconstructed positions of the ions. ...

              Three-dimensional reconstructed positions of the ions.
              Interleaved array of x, y, z positions in the specimen space.

          .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/reconstructed_positions@depends_on-attribute:

          .. index:: depends_on (field attribute)

          **@depends_on**: (required) :ref:`NX_CHAR <NX_CHAR>` 

            Point to the coordinate system in which these positions are defined.

        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/visualization-group:

        **visualization**: (recommended) :ref:`NXprocess` 


          .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/visualization/xdmf_topology-field:

          .. index:: xdmf_topology (field)

          **xdmf_topology**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_topology]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

            .. collapse:: An array of triplets of integers which can serve as a supplementary ...

                An array of triplets of integers which can serve as a supplementary
                array for Paraview to display the reconstruction. The XDMF datatype
                is here 1, the number of primitives 1 per triplet, the last integer
                in each triplet is the identifier of each point starting from zero.

      .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging-group:

      **ranging**: (required) :ref:`NXprocess` 


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification-group:

        **peak_identification**: (required) :ref:`NXprocess` 

          Details about how peaks are interpreted as ion types or not.

          .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION-group:

          **ION**: (required) :ref:`NXion` 


            .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/nuclide_hash-field:

            .. index:: nuclide_hash (field)

            **nuclide_hash**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXion/nuclide_hash-field>`


            .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/nuclide_list-field:

            .. index:: nuclide_list (field)

            **nuclide_list**: (recommended) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXion/nuclide_list-field>`


            .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/charge_state-field:

            .. index:: charge_state (field)

            **charge_state**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXion/charge_state-field>`


            .. _/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/mass_to_charge_range-field:

            .. index:: mass_to_charge_range (field)

            **mass_to_charge_range**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 2, Dimensions: [i, 2]) {units=\ :ref:`NX_ANY <NX_ANY>`} 


    .. _/NXapm_paraprobe_transcoder_results/ENTRY/common-group:

    **common**: (required) :ref:`NXapm_paraprobe_tool_common` 


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/status-field:

      .. index:: status (field)

      **status**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_paraprobe_tool_common/status-field>`


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/analysis_identifier-field:

      .. index:: analysis_identifier (field)

      **analysis_identifier**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXapm_paraprobe_tool_common/analysis_identifier-field>`


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/config-group:

      **config**: (required) :ref:`NXserialized` :ref:`⤆ </NXapm_paraprobe_tool_common/config-group>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/config/type-field:

        .. index:: type (field)

        **type**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/type-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/config/path-field:

        .. index:: path (field)

        **path**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/path-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/config/checksum-field:

        .. index:: checksum (field)

        **checksum**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/checksum-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/config/algorithm-field:

        .. index:: algorithm (field)

        **algorithm**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXserialized/algorithm-field>`


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/programID-group:

      **programID**: (required) :ref:`NXprogram` :ref:`⤆ </NXapm_paraprobe_tool_common/PROGRAM-group>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/programID/program-field:

        .. index:: program (field)

        **program**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXprogram/program-field>`


          .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/programID/program@version-attribute:

          .. index:: version (field attribute)

          **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXprogram/program@version-attribute>`


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling-group:

      **profiling**: (recommended) :ref:`NXcs_profiling` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling-group>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/start_time-field:

        .. index:: start_time (field)

        **start_time**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/start_time-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/end_time-field:

        .. index:: end_time (field)

        **end_time**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/end_time-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/total_elapsed_time-field:

        .. index:: total_elapsed_time (field)

        **total_elapsed_time**: (required) :ref:`NX_FLOAT <NX_FLOAT>` :ref:`⤆ </NXapm_paraprobe_tool_common/profiling/total_elapsed_time-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/current_working_directory-field:

        .. index:: current_working_directory (field)

        **current_working_directory**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcs_profiling/current_working_directory-field>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/number_of_processes-field:

        .. index:: number_of_processes (field)

        **number_of_processes**: (required) :ref:`NX_POSINT <NX_POSINT>` 


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/number_of_threads-field:

        .. index:: number_of_threads (field)

        **number_of_threads**: (required) :ref:`NX_POSINT <NX_POSINT>` 


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/number_of_gpus-field:

        .. index:: number_of_gpus (field)

        **number_of_gpus**: (required) :ref:`NX_POSINT <NX_POSINT>` 


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/userID-group:

      **userID**: (optional) :ref:`NXuser` :ref:`⤆ </NXapm_paraprobe_tool_common/USER-group>`

        If used, metadata of at least the person who performed this analysis.

        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/userID/name-field:

        .. index:: name (field)

        **name**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXuser/name-field>`


      .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set-group:

      **coordinate_system_set**: (required) :ref:`NXcoordinate_system_set` :ref:`⤆ </NXapm_paraprobe_tool_common/COORDINATE_SYSTEM_SET-group>`


        .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe-group:

        **paraprobe**: (required) :ref:`NXcoordinate_system` :ref:`⤆ </NXapm_paraprobe_tool_common/COORDINATE_SYSTEM_SET/COORDINATE_SYSTEM-group>`


          .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/type-field:

          .. index:: type (field)

          **type**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcoordinate_system/type-field>`


          .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/handedness-field:

          .. index:: handedness (field)

          **handedness**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcoordinate_system/handedness-field>`


          .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/x-field:

          .. index:: x (field)

          **x**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXcoordinate_system/x-field>`


          .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/y-field:

          .. index:: y (field)

          **y**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXcoordinate_system/y-field>`


          .. _/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/z-field:

          .. index:: z (field)

          **z**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} :ref:`⤆ </NXcoordinate_system/z-field>`



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY-group </NXapm_paraprobe_transcoder_results/ENTRY-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe-group </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/analysis_identifier-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/analysis_identifier-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config-group </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/algorithm-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/algorithm-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/checksum-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/checksum-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/path-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/path-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/type-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/config/type-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/mass_to_charge_conversion-group </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/mass_to_charge_conversion-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/mass_to_charge_conversion/mass_to_charge-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/mass_to_charge_conversion/mass_to_charge-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging-group </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification-group </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION-group </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/charge_state-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/charge_state-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/mass_to_charge_range-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/mass_to_charge_range-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/nuclide_hash-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/nuclide_hash-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/nuclide_list-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/ranging/peak_identification/ION/nuclide_list-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction-group </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/reconstructed_positions-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/reconstructed_positions-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/reconstructed_positions@depends_on-attribute </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/reconstructed_positions@depends_on-attribute>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/visualization-group </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/visualization-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/visualization/xdmf_topology-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/reconstruction/visualization/xdmf_topology-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window-group </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window/bitdepth-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window/bitdepth-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window/mask-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window/mask-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window/number_of_ions-field </NXapm_paraprobe_transcoder_results/ENTRY/atom_probe/window/number_of_ions-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common-group </NXapm_paraprobe_transcoder_results/ENTRY/common-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/analysis_identifier-field </NXapm_paraprobe_transcoder_results/ENTRY/common/analysis_identifier-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/config-group </NXapm_paraprobe_transcoder_results/ENTRY/common/config-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/config/algorithm-field </NXapm_paraprobe_transcoder_results/ENTRY/common/config/algorithm-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/config/checksum-field </NXapm_paraprobe_transcoder_results/ENTRY/common/config/checksum-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/config/path-field </NXapm_paraprobe_transcoder_results/ENTRY/common/config/path-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/config/type-field </NXapm_paraprobe_transcoder_results/ENTRY/common/config/type-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set-group </NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe-group </NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/handedness-field </NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/handedness-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/type-field </NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/type-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/x-field </NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/x-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/y-field </NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/y-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/z-field </NXapm_paraprobe_transcoder_results/ENTRY/common/coordinate_system_set/paraprobe/z-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling-group </NXapm_paraprobe_transcoder_results/ENTRY/common/profiling-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/current_working_directory-field </NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/current_working_directory-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/end_time-field </NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/end_time-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/number_of_gpus-field </NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/number_of_gpus-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/number_of_processes-field </NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/number_of_processes-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/number_of_threads-field </NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/number_of_threads-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/start_time-field </NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/start_time-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/total_elapsed_time-field </NXapm_paraprobe_transcoder_results/ENTRY/common/profiling/total_elapsed_time-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/programID-group </NXapm_paraprobe_transcoder_results/ENTRY/common/programID-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/programID/program-field </NXapm_paraprobe_transcoder_results/ENTRY/common/programID/program-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/programID/program@version-attribute </NXapm_paraprobe_transcoder_results/ENTRY/common/programID/program@version-attribute>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/status-field </NXapm_paraprobe_transcoder_results/ENTRY/common/status-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/userID-group </NXapm_paraprobe_transcoder_results/ENTRY/common/userID-group>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/common/userID/name-field </NXapm_paraprobe_transcoder_results/ENTRY/common/userID/name-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/definition-field </NXapm_paraprobe_transcoder_results/ENTRY/definition-field>`
* :ref:`/NXapm_paraprobe_transcoder_results/ENTRY/definition@version-attribute </NXapm_paraprobe_transcoder_results/ENTRY/definition@version-attribute>`

**NXDL Source**:
  https://github.com/FAIRmat-NFDI/nexus_definitions/tree/fairmat/contributed_definitions/NXapm_paraprobe_transcoder_results.nxdl.xml
