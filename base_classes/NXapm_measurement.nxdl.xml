<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2025-2025 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXapm_measurement" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <doc>
        Base class for collecting a session with a real or simulated atom probe or field-ion microscope.
        
        Workflows used during experiments or simulations of atom probe and related field-evaporation
        research should be documented in more detail and be better contextualized not only because of
        ongoing developments and the tighter becoming connection between atom probe and other
        methods for material characterization foremost electron microscopy see e.g.:
        
        * `T. Kelly et al. &lt;https://doi.org/10.1017/S1431927620022205&gt;`_
        * `C. Fleischmann et al. &lt;https://doi.org/10.1016/j.ultramic.2018.08.010&gt;`_
        * `W. Windl et al. &lt;https://doi.org/10.1093/micmic/ozad067.294&gt;`_
        * `C. Freysoldt et al. &lt;https://doi.org/10.1103/PhysRevLett.124.176801&gt;`_
        * `G. da Costa et al. &lt;https://doi.org/10.1038/s41467-024-54169-2&gt;`_
        
        to mention but a few.
        
        To arrive at a design of base classes and an application definition that can be used
        for both real and simulated atom probe experiments, it is worthwhile to recall concepts
        that are related to events and (molecular) ions:
        
        * Pulsing events which are used to trigger ion extraction events.
        * Physical events and corresponding signal triggered by an ion hitting the detector.
          Some of these events are not necessarily caused by or directly correlated with an identifiable pulsing event.
        * Processed ion hits which are the result of a processing that takes the physical and pulsing events as input
          returns some of these as events of sufficient quality to qualify as (molecular) ions that are
          worthwhile to be considered further and eventually included in the reconstructed volume.
        * Calibration and signal filtering steps applied to these processed ion hits as input which results in
          actually selected (molecular) ions based on which an instance of a reconstruction is created.
        * Correlation of these ions with a statistics and theoretical model of mass-to-charge-state ratio values
          and charge states of the (molecular) ions to substantiate that some of these ions can be considered
          as rangeable ions and hence an iontype can be assigned to these via running peak finding algorithms
          and subsequent peak labeling. In the field of atom probe this these peak identification methods
          are known as ranging definitions.
        
        Not only in AMETEK/Cameca's IVAS/APSuite software, which the majority of atom probers use, these concepts
        are well distinguished. However, the algorithms used to transform correlations between pulses and physical
        events into actual events (detector hits) ions is a proprietary one - the so-called hit finding algorithm.
        
        Due to this practical inaccessibility of details, virtually all atom probe studies currently use a reporting
        schema where the course of the specimen evaporation is documented such that quantities are a function of
        evaporation_id i.e. actual event/ion, i.e. after having the hit finding algorithm and correlations applied.
        That is evaporation_id values take the role of an implicit time and course of the experiment given that
        ion extraction physically is a sequential process.
        
        There is a number of research groups who build their own instruments and share different aspects of the
        technical specifications and approaches including how these groups apply data processing e.g.:
        
        * `M. Monajem et al. &lt;https://doi.org/10.1017/S1431927622003397&gt;`_
        * `P. Stender et al. &lt;https://doi.org/10.1017/S1431927621013982&gt;`_
        * `I. Dimkou et al. &lt;https://doi.org/10.1093/micmic/ozac051&gt;`_
        
        to name but a few.
        
        Despite some of these activities embrace practices of open-source development, they use essentially the same
        workflow that has been proposed by AMETEK/Cameca and its forerunner company Imago: A graphical user interface
        software that is used to explore and analyze reconstructed atom probe datasets - the reconstructed volume.
        
        Specifically, software is used to correlate and interpret pulsing and physical events into processed ion hits.
        Some of these ion hits are reported as (molecular) ions with ranged iontypes to yield a dataset based on which
        scientific conclusions about the characterized material volume are made. Also here a reconstruction is a
        point cloud that serves as the proxy for the characterized material volume, i.e. the reconstruction is a model.
        
        By contrast, simulations of field-evaporation have the luxury to document the flight path and allow following of all
        the whereabouts of each ion evaporated. This level of detail is currently not characterizable in experiment.
        Thus, there is a divide between schemas describing simulations of atom probe vs measurements of atom probe.
        NXapm is an attempt to bridge this divide realizing the above-mentioned context and the fact that
        similar concepts are used in both research realms. Many concepts not only are similar but exactly the same.
        
        A further argument to support this view is that computer simulations of atom probe usually are compared to
        reconstructed volume/datasets, either to the input configuration that served as the virtual specimen or to a
        real world atom probe experiment and reconstructions computed from these.
        
        In both cases, the recorded simulated physical events of simulated ions hitting a simulated detector is not the
        end of the research workflow but typically the input to apply additional algorithms such as
        (spatial) filtering and reconstruction algorithms.
        
        Only the practical need for making ranging definitions is (at least as of now) not as much needed in field-evaporation
        simulations than it is in real world measurements because each ion has a prescribed iontype in the simulation.
        Be it a specifically charged nuclid or a molecular ion whose flight path the simulation resolves.
        Although, in principle simpler though, we have to consider that this is caused by many assumptions made in the
        simulations.
        
        Indeed, the multi-scale (time and space) aspects of the challenge that is the simulating of field-evaporation often
        require simplifications because of otherwise too high becoming computing resource demands and existent knowledge gaps
        in how to deal with all quantum physics complexities involved in ion removal.
        
        Molecular ion dissociation upon flight is one such complexity.
        Also the complexity of simulation setups is typically defined simpler in simulation (e.g. straight flight path assumption)
        than in a measurement with a real instrument. In addition, simulation often also ignore objects and fields in the flight path
        such as local electrodes or physical obstacles and electric fields (controlled or stray fields).
    </doc>
    <field name="status" type="NX_CHAR">
        <doc>
            A statement whether the measurement was successful or failed prematurely.
        </doc>
        <enumeration>
            <item value="success"/>
            <item value="failed"/>
        </enumeration>
    </field>
    <field name="quality" type="NX_CHAR">
        <doc>
            CAnalysis.CResults.fQuality
        </doc>
    </field>
    <group type="NXinstrument_apm"/>
    <group type="NXevent_data_apm"/>
</definition>
