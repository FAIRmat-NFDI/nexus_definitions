category: base
doc: |
  Any information on the sample.
  
  This could include scanned variables that
  are associated with one of the data dimensions, e.g. the magnetic field, or
  logged data, e.g. monitored temperature vs elapsed time.
symbols:
  doc: |
    symbolic array lengths to be coordinated between various fields
  n_comp: |
    number of compositions
  n_Temp: |
    number of temperatures
  n_eField: |
    number of values in applied electric field
  n_mField: |
    number of values in applied magnetic field
  n_pField: |
    number of values in applied pressure field
  n_sField: |
    number of values in applied stress field
type: group
NXsample(NXobject):
  name:
    doc: |
      Descriptive name of sample
  sample_id:
    doc: |
      Identification number or signatures of the sample used.
  chemical_formula:
    doc: |
      The chemical formula specified using CIF conventions.
      Abbreviated version of CIF standard:
      
      * Only recognized element symbols may be used.
      * Each element symbol is followed by a 'count' number. A count of '1' may be omitted.
      * A space or parenthesis must separate each cluster of (element symbol + count).
      * Where a group of elements is enclosed in parentheses, the multiplier for the
        group must follow the closing parentheses. That is, all element and group
        multipliers are assumed to be printed as subscripted numbers.
      * Unless the elements are ordered in a manner that corresponds to their chemical
        structure, the order of the elements within any group or moiety depends on
        whether or not carbon is present.
      * If carbon is present, the order should be:
      
        - C, then H, then the other elements in alphabetical order of their symbol.
        - If carbon is not present, the elements are listed purely in alphabetic order of their symbol.
        
      * This is the *Hill* system used by Chemical Abstracts.
  temperature(NX_FLOAT):
    unit: NX_TEMPERATURE
    doc: |
      Sample temperature. This could be a scanned variable
    dimensions:
      rank: anyRank
      
      # could be any length
      dim: [[1, n_Temp]]
  electric_field(NX_FLOAT):
    unit: NX_VOLTAGE
    doc: |
      Applied electric field
    dimensions:
      
      # could be any length
      dim: [[1, n_eField]]
    \@direction:
      enumeration: [x, y, z]
  magnetic_field(NX_FLOAT):
    unit: NX_ANY
    doc: |
      Applied magnetic field
    dimensions:
      
      # could be any length
      dim: [[1, n_mField]]
    \@direction:
      enumeration: [x, y, z]
  stress_field(NX_FLOAT):
    unit: NX_ANY
    doc: |
      Applied external stress field
    dimensions:
      
      # could be any length
      dim: [[1, n_sField]]
    \@direction:
      enumeration: [x, y, z]
  pressure(NX_FLOAT):
    unit: NX_PRESSURE
    doc: |
      Applied pressure
    dimensions:
      
      # could be any length
      dim: [[1, n_pField]]
  changer_position(NX_INT):
    unit: NX_UNITLESS
    doc: |
      Sample changer position
  unit_cell_abc(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      Crystallography unit cell parameters a, b, and c
    dimensions:
      dim: [[1, 3]]
  unit_cell_alphabetagamma(NX_FLOAT):
    unit: NX_ANGLE
    doc: |
      Crystallography unit cell parameters alpha, beta, and gamma
    dimensions:
      dim: [[1, 3]]
  unit_cell(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      Unit cell parameters (lengths and angles)
    dimensions:
      rank: 2
      dim: [[1, n_comp], [2, 6]]
  unit_cell_volume(NX_FLOAT):
    unit: NX_VOLUME
    doc: |
      Volume of the unit cell
    dimensions:
      rank: 1
      dim: [[1, n_comp]]
  sample_orientation(NX_FLOAT):
    unit: NX_ANGLE
    doc: |
      This will follow the Busing-Levy convention:
      W. R. Busing and H. A. Levy (1967). Acta Cryst. 22, 457-464
    dimensions:
      rank: 1
      dim: [[1, 3]]
  orientation_matrix(NX_FLOAT):
    doc: |
      Orientation matrix of single crystal sample using Busing-Levy convention:
      W. R. Busing and H. A. Levy (1967). Acta Cryst. 22, 457-464
    dimensions:
      rank: 3
      dim: [[1, n_comp], [2, 3], [3, 3]]
  ub_matrix(NX_FLOAT):
    doc: |
      UB matrix of single crystal sample using Busing-Levy convention:
      W. R. Busing and H. A. Levy (1967). Acta Cryst. 22, 457-464. This is
      the multiplication of the orientation_matrix, given above,
      with the :math:`B` matrix which
      can be derived from the lattice constants.
    dimensions:
      rank: 3
      dim: [[1, n_comp], [2, 3], [3, 3]]
  mass(NX_FLOAT):
    unit: NX_MASS
    doc: |
      Mass of sample
    dimensions:
      rank: 1
      dim: [[1, n_comp]]
  density(NX_FLOAT):
    unit: NX_MASS_DENSITY
    doc: |
      Density of sample
    dimensions:
      rank: 1
      dim: [[1, n_comp]]
  relative_molecular_mass(NX_FLOAT):
    unit: NX_MASS
    doc: |
      Relative Molecular Mass of sample
    dimensions:
      rank: 1
      dim: [[1, n_comp]]
  type:
    enumeration: [sample, sample+can, can, sample+buffer, buffer, calibration sample, normalisation sample, simulated data, none, sample environment]
  situation:
    doc: |
      The atmosphere will be one of the components, which is where
      its details will be stored; the relevant components will be
      indicated by the entry in the sample_component member.
    enumeration: [air, vacuum, inert atmosphere, oxidising atmosphere, reducing atmosphere, sealed can, other]
  description:
    doc: |
      Description of the sample
  preparation_date(NX_DATE_TIME):
    doc: |
      Date of preparation of the sample
  geometry(NXgeometry):
    deprecated: |
      Use the field `depends_on` and :ref:`NXtransformations` to position the sample and NXoff_geometry to describe its shape instead
    doc: |
      The position and orientation of the center of mass of the sample
  (NXbeam):
    doc: |
      Details of beam incident on sample - used to calculate sample/beam interaction
      point
  (NXsample_component):
    doc: |
      One group per sample component
      This is the perferred way of recording per component information over the n_comp arrays
  component:
    doc: |
      Details of the component of the sample and/or can
    dimensions:
      rank: 1
      dim: [[1, n_comp]]
  sample_component:
    doc: |
      Type of component
    dimensions:
      rank: 1
      dim: [[1, n_comp]]
    enumeration: [sample, can, atmosphere, kit]
  concentration(NX_FLOAT):
    unit: NX_MASS_DENSITY
    doc: |
      Concentration of each component
    dimensions:
      rank: 1
      dim: [[1, n_comp]]
  volume_fraction(NX_FLOAT):
    doc: |
      Volume fraction of each component
    dimensions:
      rank: 1
      dim: [[1, n_comp]]
  scattering_length_density(NX_FLOAT):
    unit: NX_SCATTERING_LENGTH_DENSITY
    doc: |
      Scattering length density of each component
    dimensions:
      rank: 1
      dim: [[1, n_comp]]
  unit_cell_class:
    doc: |
      In case it is all we know and we want to record/document it
    enumeration: [triclinic, monoclinic, orthorhombic, tetragonal, rhombohedral, hexagonal, cubic]
  space_group:
    doc: |
      Crystallographic space group
    dimensions:
      dim: [[1, n_comp]]
  point_group:
    doc: |
      Crystallographic point group, deprecated if space_group present
    dimensions:
      dim: [[1, n_comp]]
  path_length(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      Path length through sample/can for simple case when
      it does not vary with scattering direction
  path_length_window(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      Thickness of a beam entry/exit window on the can (mm)
      - assumed same for entry and exit
  thickness(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      sample thickness
  transmission(NXdata):
    doc: |
      As a function of Wavelength
  temperature_log(NXlog):
    deprecated: |
      use ``temperature``, see: https://github.com/nexusformat/definitions/issues/816
    doc: |
      temperature_log.value is a link to e.g. temperature_env.sensor1.value_log.value
  temperature_env(NXenvironment):
    doc: |
      Additional sample temperature environment information
  magnetic_field(NXlog):
    doc: |
      magnetic_field.value is a link to e.g. magnetic_field_env.sensor1.value
  magnetic_field_log(NXlog):
    deprecated: |
      use ``magnetic_field``, see: https://github.com/nexusformat/definitions/issues/816
    doc: |
      magnetic_field_log.value is a link to e.g.
      magnetic_field_env.sensor1.value_log.value
  magnetic_field_env(NXenvironment):
    doc: |
      Additional sample magnetic environment information
  external_DAC(NX_FLOAT):
    unit: NX_ANY
    doc: |
      value sent to user's sample setup
  external_ADC(NXlog):
    doc: |
      logged value (or logic state) read from user's setup
  short_title:
    doc: |
      20 character fixed length sample description for legends
  
  # How is the string length limitation imposed by the XSD?
  rotation_angle(NX_FLOAT):
    unit: NX_ANGLE
    doc: |
      Optional rotation angle for the case when the powder diagram has
      been obtained through an omega-2theta scan like from a traditional
      single detector powder diffractometer.
      Note, it is recommended to use NXtransformations instead.
  x_translation(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      Translation of the sample along the X-direction of the laboratory coordinate system
      Note, it is recommended to use NXtransformations instead.
  distance(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      Translation of the sample along the Z-direction of the laboratory coordinate system.
      Note, it is recommended to use NXtransformations instead.
  (NXpositioner):
    doc: |
      Any positioner (motor, PZT, ...) used to locate the sample
  (NXoff_geometry):
    
    # exists: ['min', '0']
    doc: |
      This group describes the shape of the sample
  (NXsingle_crystal):
    doc: |
      If the sample is a single crystal, add description of single crystal and unit
      cell.
  (NXsample_component_set):
    doc: |
      Set of sample components and their configuration.

      There can only be one NXsample_component_set in one sample.

      .. figure:: sample/NXsample_component_scheme.png
		   
		   The figure illustrates the use of NXsample_component_set, 
       NXsample_component, and NXsubstance. If the sample only contains a 
       pure substance, then there should be at maximum one NXsubstance inside
       NXsample. In case the sample is made up of multiple components,
       NXsample should contain one NXsample_component_set which contains one or
       more NXsample_components, alongside fields describing the distribution
       of these individual components. Each component itself can also be a pure
       substance (i.e., contain at most one NXsubstance) or be made up of multiple
       components (i.e, it contains one NXsample_component_set with multiple 
       sub_components.)
  # exists: [max, 1]
  (NXsubstance):
    doc: |
      If the sample is made from a pure substance and cannot be further divided using
      NXsample_component.
  
  # exists: [max, 1]
  (NXfabrication):
    doc: |
      Details about the sample vendor (company or research group)
  (NXenvironment):
    
    # eventually, this should be stored in the application definitions
    doc: |
      Any environmental or external stimuli/measurements.
      These can include, among others:
      applied pressure, surrounding gas phase and gas pressure,
      external electric/magnetic/mechanical fields, temperature, ...
  (NXsample_history):
    doc: |
      A set of physical processes that occurred to the sample prior/during experiment.
  \@default:
    doc: |
      .. index:: plotting
      
      Declares which child group contains a path leading
      to a :ref:`NXdata` group.
      
      It is recommended (as of NIAC2014) to use this attribute
      to help define the path to the default dataset to be plotted.
      See https://www.nexusformat.org/2014_How_to_find_default_data.html
      for a summary of the discussion.
  depends_on:
    doc: |
      NeXus positions components by applying a set of translations and rotations
      to apply to the component starting from 0, 0, 0. The order of these operations
      is critical and forms what NeXus calls a dependency chain. The depends_on
      field defines the path to the top most operation of the dependency chain or the
      string "." if located in the origin. Usually these operations are stored in a
      NXtransformations group. But NeXus allows them to be stored anywhere.
  (NXtransformations):
    doc: |
      This is the group recommended for holding the chain of translation
      and rotation operations necessary to position the component within
      the instrument. The dependency chain may however traverse similar groups in
      other component groups.