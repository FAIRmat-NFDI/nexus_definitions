.. auto-generated by dev_tools.docs.nxdl from the NXDL source base_classes/NXevent_data_apm.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXevent_data_apm (base class)
    ! event_data_apm (base class)
    see: event_data_apm (base class); NXevent_data_apm

.. _NXevent_data_apm:

================
NXevent_data_apm
================

..
    Contributors List

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  .. collapse:: Base class to store state and (meta)data of events over the course of an atom pr ...

      Base class to store state and (meta)data of events over the course of an atom probe experiment.

      Having at least one instance for an instance of NXapm is recommended.

      This base class applies the concept of the :ref:`NXevent_data_em` base class to the specific needs
      of atom probe research. Again static and dynamic quantities are split to avoid a duplication
      of information. Specifically, the time interval considered is the entire time
      starting at start_time until end_time during which we assume the pulser triggered pulses.
      These pulses are identified via the pulse_id field. The point in time when each pulse was
      fired can be recovered from analyzing start_time and delta_time.

      Which temporal granularity is adequate depends on the situation and research question.
      Using a model which enables a collection of events offers the most flexible way to cater for
      both atom probe experiments or simulation. To monitor the course of an ion extraction experiment
      (or simulation) it makes sense to track time explicitly via time stamps or implicitly
      via e.g. a clock inside the instrument, such as the clock of the pulser and respective pulse_id.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **p**: Number of pulses collected in between start_time and end_time.

**Groups cited**:
  :ref:`NXinstrument_apm`

.. index:: NXinstrument_apm (base class); used in base class

**Structure**:

  .. _/NXevent_data_apm/start_time-field:

  .. index:: start_time (field)

  **start_time**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>` 

    .. collapse:: ISO 8601 time code with local time zone offset to UTC information included ...

        ISO 8601 time code with local time zone offset to UTC information included
        when the snapshot time interval started.

        If users wish to specify an interval of time that the snapshot should represent
        during which the instrument was stable and configured using specific settings and
        calibrations, the start_time is the start (left bound of the time interval) while
        the end_time specifies the end (right bound) of the time interval.

  .. _/NXevent_data_apm/end_time-field:

  .. index:: end_time (field)

  **end_time**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>` 

    .. collapse:: ISO 8601 time code with local time zone offset to UTC information included ...

        ISO 8601 time code with local time zone offset to UTC information included
        when the snapshot time interval ended.

  .. _/NXevent_data_apm/delta_time-field:

  .. index:: delta_time (field)

  **delta_time**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [p]) {units=\ :ref:`NX_TIME <NX_TIME>`} 

    .. collapse:: Delta time array which resolves for each pulse_id the time difference ...

        Delta time array which resolves for each pulse_id the time difference
        between when that pulse was fired and start_time.

        In summary, using start_time, end_time, delta_time, pulse_id_offset,
        and pulse_id provides temporal context information when a pulse was
        fired relative to start_time and when it is relevant to translate this into
        coordinated world time UTC.

        Note that pulses in reality have a shape and thus additional documentation
        is required to assure that the entries in delta_time are always taken at
        at points in time that, relative to the triggering of the pulse, represent an
        as close as possible state of the pulse.

  .. _/NXevent_data_apm/pulse_id_offset-field:

  .. index:: pulse_id_offset (field)

  **pulse_id_offset**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Integer which defines the first pulse_id. ...

        Integer which defines the first pulse_id.
        Typically, this is either zero or one.

  .. _/NXevent_data_apm/pulse_id-field:

  .. index:: pulse_id (field)

  **pulse_id**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [p]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: An integer to identify a specific pulse in a sequence. ...

        An integer to identify a specific pulse in a sequence.

        There are two possibilities to report pulse_id values:
        If pulse_id_offset is provided, the pulse_id values are defined
        by the sequence :math:`[pulse\_id\_offset, pulse\_id\_offset + p]`
        with :math:`p` the number of pulses collected in between
        start_time and end_time.

        Alternatively, pulse_id_offset is not provided but instead a sequence
        of :math:`p` values is defined, these integer values
        do not need to be sorted.

  .. _/NXevent_data_apm/instrument-group:

  **instrument**: (optional) :ref:`NXinstrument_apm` 

    .. collapse:: Place to store dynamic metadata of the instrument to document as close as poss ...

        Place to store dynamic metadata of the instrument to document as close as possible
        the state of the instrument during the event, i.e. in between start_time and end_time.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXevent_data_apm/delta_time-field </NXevent_data_apm/delta_time-field>`
* :ref:`/NXevent_data_apm/end_time-field </NXevent_data_apm/end_time-field>`
* :ref:`/NXevent_data_apm/instrument-group </NXevent_data_apm/instrument-group>`
* :ref:`/NXevent_data_apm/pulse_id-field </NXevent_data_apm/pulse_id-field>`
* :ref:`/NXevent_data_apm/pulse_id_offset-field </NXevent_data_apm/pulse_id_offset-field>`
* :ref:`/NXevent_data_apm/start_time-field </NXevent_data_apm/start_time-field>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/base_classes/NXevent_data_apm.nxdl.xml
