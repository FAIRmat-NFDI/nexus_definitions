.. auto-generated by dev_tools.docs.nxdl from the NXDL source base_classes/NXem_ebsd.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXem_ebsd (base class)
    ! em_ebsd (base class)
    see: em_ebsd (base class); NXem_ebsd

.. _NXem_ebsd:

=========
NXem_ebsd
=========

..
    Contributors List

**Status**:

  base class, extends :ref:`NXprocess`

**Description**:

  .. collapse:: Base class method-specific for Electron Backscatter Diffraction (EBSD). ...

      Base class method-specific for Electron Backscatter Diffraction (EBSD).

      The general procedure of an EBSD experiment is as follows:
      Users load the specimen, collect first a coarse image of the surface.
      Next, they set an approximate value for the calibrated working distance
      and tilt the stage into diffraction conditions.

      Users then typically configure the microscope for collecting quality data.
      The EBSD detector is pushed in (if retractable). Subsequently, they fine tune
      the illumination and aberration corrector settings and select one or multiple ROIs
      for the microscope to machine off automatically. They configure on-the-fly
      indexing parameter and then typically start the measurement queue.
      From this point onwards typically the microscope runs automatically.

      Diffraction pattern get collected until the queue finishes or gets interrupted by
      either errors or arrival at the end of the users' allocated timeslot at the instrument.

      Kikuchi pattern (EBSP) are usually indexed on-the-fly. These patterns are the raw data.
      Once indexed, these patterns are often not stored.

      Results are stored in files, which afterwards are typically copied
      automatically or manually for archival purposes to certain storage
      locations for further consumption. The result of such an EBSD
      measurement/experiment is a set of usually proprietary or open files
      from technology partners.

      This :ref:`NXem_ebsd` base class is a proposal how to represent method-specific
      data, metadata, and connections between these for the research field of
      electron microscopy exemplified here for electron backscatter diffraction (EBSD).
      The base class solves two key documentation issues within the EBSD community:

      Firstly, an instance of NXem_ebsd (such as a NeXus/HDF5 file that is formatted
      according to NXem_ebsd) stores the connection between the microscope session and
      the key datasets which are considered typically results of the afore-mentioned
      steps involved in an EBSD experiment.

      Different groups in NXem_ebsd make connections to data artifacts which were collected
      when working with electron microscopes via the NXem application definition.
      Using a file which stores information according to the NXem application definition
      has the benefit that it connects the sample, references to the sample processing,
      the user operating the microscope, details about the microscope session,
      and details about the acquisition and eventual indexing of Kikuchi patterns,
      associated overview images, like secondary electron or backscattered electron
      images of the region-of-interest probed, and many more (meta)data.

      Secondly, NXem_ebsd connects and stores the conventions and reference frames
      which were used and which are the key to a correct mathematical interpretation
      of every experiment or simulation using EBSD.

      Otherwise, results would be ripped out of their context like it is the current situation
      with many traditional studies where EBSD data were indexed on-the-fly and shared
      with the community only via sharing the strongly processed files with results in some
      formatting but without communicating all conventions used or just relying on the assumptions
      that colleagues likely know these conventions even though
      multiple definitions are possible.

      NXem_ebsd covers experiments with one-, two-dimensional, and so-called three-
      dimensional EBSD datasets. The third dimension is either time (in the case of
      quasi in-situ experiments) or space (in the case of serial-sectioning) experiments
      where a combination of repetitive removal of material from the surface layer to measure
      otherwise the same region-of-interest at different depth increments. Material removal
      can be achieved with mechanical, electron, or ion polishing, using manual steps or
      automated equipment like a robot system `S. Tsai et al. <https://doi.org/10.1063/5.0087945>`_.

      Three-dimensional experiments require to follow a sequence of specimen, surface
      preparation, and data collection steps. By virtue of design, these methods are destructive
      either because of the necessary material removal or surface degradation due to e.g.
      contamination or other electron-matter interaction.

      For three-dimensional EBSD, multiple two-dimensional EBSD orientation mappings
      are combined into one reconstructed stack via a computational workflow. Users collect
      data for each serial sectioning step via an experiment. This assures that data for associated
      microscope sessions and steps of data processing stay contextualized and connected.

      Eventual tomography methods also use such a workflow because first diffraction
      images are collected (e.g. with X-ray) and then these images are indexed to process
      a 3D orientation mapping. Therefore, the here proposed base class can be a blueprint
      also for future classes to embrace our colleagues from X-ray-based techniques be it 3DXRD or HEDM.

      This concept is related to term `Electron Backscatter Diffraction`_ of the EMglossary standard.

      .. _Electron Backscatter Diffraction: https://purls.helmholtz-metadaten.de/emg/EMG_00000019

**Symbols**:


  **n_op**: Number of arguments per orientation for given parameterization.

  **n_sc**: Number of scan points.

  **n_z**: Number of pixel along the slowest changing dimension for a rediscretized, i.e. standardized default plot orientation mapping.

  **n_y**: Number of pixel along slow changing dimension for a rediscretized i.e. standardized default plot orientation mapping.

  **n_x**: Number of pixel along fast changing dimension for a rediscretized i.e. standardized default plot orientation mapping.

  **n_solutions**: Number of phase solutions

  **n_hkl**: Number of reflectors (Miller crystallographic plane triplets).

**Groups cited**:
  :ref:`NXcollection`, :ref:`NXcoordinate_system`, :ref:`NXdata`, :ref:`NXnote`, :ref:`NXphase`, :ref:`NXprocess`, :ref:`NXrotations`

.. index:: NXcoordinate_system (base class); used in base class, NXprocess (base class); used in base class, NXnote (base class); used in base class, NXcollection (base class); used in base class, NXphase (base class); used in base class, NXrotations (base class); used in base class, NXdata (base class); used in base class

**Structure**:

  .. _/NXem_ebsd/gnomonic_reference_frame-group:

  **gnomonic_reference_frame**: (optional) :ref:`NXcoordinate_system` 

    .. collapse:: Details about the gnomonic (projection) reference frame. ...

        Details about the gnomonic (projection) reference frame.

        It is assumed that the configuration is inspected by looking towards the sample surface.
        If a detector is involved, it is assumed that the configuration is inspected from a position
        that is located behind this detector.

        If any of these assumptions are not met, the user is required to explicitly state this.

        Reference `<https://doi.org/10.1016/j.matchar.2016.04.008>`_ suggests to label the
        base vectors of this coordinate system as :math:`X_g, Y_g, Z_g`.

    .. _/NXem_ebsd/gnomonic_reference_frame/origin-field:

    .. index:: origin (field)

    **origin**: (optional) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcoordinate_system/origin-field>`

      .. collapse:: Origin of the gnomonic_reference_frame. ...

          Origin of the gnomonic_reference_frame.

          Reference `<https://doi.org/10.1016/j.matchar.2016.04.008>`_ suggests to
          assume that this is coordinate :math:`Xg = 0, Yg = 0, Zg = 0`.

          Obligatory value: ``in_the_pattern_center``

    .. _/NXem_ebsd/gnomonic_reference_frame/x_direction-field:

    .. index:: x_direction (field)

    **x_direction**: (optional) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcoordinate_system/x_direction-field>`

      .. collapse:: Direction of the positively pointing x-axis base vector of the ...

          Direction of the positively pointing x-axis base vector of the
          gnomonic_reference_frame.

          Any of these values:

            * ``north``

            * ``east``

            * ``south``

            * ``west``

            * ``in``

            * ``out``


    .. _/NXem_ebsd/gnomonic_reference_frame/y_direction-field:

    .. index:: y_direction (field)

    **y_direction**: (optional) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcoordinate_system/y_direction-field>`

      .. collapse:: Direction of the positively pointing y-axis base vector of the ...

          Direction of the positively pointing y-axis base vector of the
          gnomonic_reference_frame.

          Any of these values:

            * ``north``

            * ``east``

            * ``south``

            * ``west``

            * ``in``

            * ``out``


    .. _/NXem_ebsd/gnomonic_reference_frame/z_direction-field:

    .. index:: z_direction (field)

    **z_direction**: (optional) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcoordinate_system/z_direction-field>`

      .. collapse:: Direction of the positively pointing z-axis base vector of the ...

          Direction of the positively pointing z-axis base vector of the
          gnomonic_reference_frame.

          Any of these values:

            * ``north``

            * ``east``

            * ``south``

            * ``west``

            * ``in``

            * ``out``


  .. _/NXem_ebsd/pattern_center-group:

  **pattern_center**: (optional) :ref:`NXprocess` 

    .. collapse:: Details about the definition of the pattern center as a special point in the ...

        Details about the definition of the pattern center as a special point in the
        gnomonic_reference_frame.

        Typically the gnomonic space is embedded in the detector space.
        Specifically, the XgYg plane is defined such that it is laying inside the
        XdYd plane (of the detector reference frame).

        When the normalization direction is the same as e.g. the detector x-axis direction
        one effectively normalizes in fractions of the width of the detector.

        The issue with terms like width and height, though, is that these become degenerated
        if the detector region-of-interest is square-shaped. This is why instead of referring to
        width and height it is better to state explicitly which direction is considered positive
        when measuring distances.

        For the concepts used to specify the boundary_convention it is assumed that the
        region-of-interest is defined by a rectangle, referring to the direction of outer-unit
        normals to the respective edges of this rectangle.

    .. _/NXem_ebsd/pattern_center/x_boundary_convention-field:

    .. index:: x_boundary_convention (field)

    **x_boundary_convention**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: From which border of the EBSP (in the detector reference frame) is the patte ...

          From which border of the EBSP (in the detector reference frame) is the pattern
          center's x-position (PCx) measured.

          Any of these values: ``top`` | ``right`` | ``bottom`` | ``left``

    .. _/NXem_ebsd/pattern_center/x_normalization_direction-field:

    .. index:: x_normalization_direction (field)

    **x_normalization_direction**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: In which direction are positive values for the x-axis coordinate value measu ...

          In which direction are positive values for the x-axis coordinate value measured
          from the specified boundary.

          Any of these values: ``north`` | ``east`` | ``south`` | ``west``

    .. _/NXem_ebsd/pattern_center/y_boundary_convention-field:

    .. index:: y_boundary_convention (field)

    **y_boundary_convention**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: From which border of the EBSP (in the detector reference frame) is the patte ...

          From which border of the EBSP (in the detector reference frame) is the pattern
          center's y-position (PCy) measured.

          Any of these values: ``top`` | ``right`` | ``bottom`` | ``left``

    .. _/NXem_ebsd/pattern_center/y_normalization_direction-field:

    .. index:: y_normalization_direction (field)

    **y_normalization_direction**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: In which direction are positive values for the y-axis coordinate value measu ...

          In which direction are positive values for the y-axis coordinate value measured
          from the specified boundary.

          Any of these values: ``north`` | ``east`` | ``south`` | ``west``

  .. _/NXem_ebsd/measurement-group:

  **measurement**: (optional) :ref:`NXprocess` 

    .. collapse:: This group documents relevant details about the conditions and the ...

        This group documents relevant details about the conditions and the
        tools for measuring diffraction patterns with an electron microscope.

        The most frequently collected EBSD data are captured for rectangular
        regions-of-interest using a discretization into square or hexagon tiles.

    .. _/NXem_ebsd/measurement/time-field:

    .. index:: time (field)

    **time**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_TIME <NX_TIME>`} 

      .. collapse:: Physical time since the beginning of a timestamp that is required to be ...

          Physical time since the beginning of a timestamp that is required to be
          the same for all experiments in the set. The purpose of this marker is
          to identify how all experiments in the set need to be arranged
          sequentially based on the time elapsed.
          The time is relevant to sort e.g. experiments of consecutive quasi
          in-situ experiments where a measurement was e.g. taken after 0 minutes,
          30 minutes, 6 hours, or 24 hours of annealing.

      .. _/NXem_ebsd/measurement/time@epoch_start-attribute:

      .. index:: epoch_start (field attribute)

      **@epoch_start**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: Timestamp relative to which time was counted to aid ...

            Timestamp relative to which time was counted to aid
            converting between time and timestamp.

    .. _/NXem_ebsd/measurement/depends_on-field:

    .. index:: depends_on (field)

    **depends_on**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      Path to an instance of :ref:`NXdata` where the measured patterns are stored.

    .. _/NXem_ebsd/measurement/source-group:

    **source**: (optional) :ref:`NXnote` :ref:`⤆ </NXprocess/NOTE-group>`

      .. collapse:: Reference (e.g. path and filename) to an existent data artifact which ...

          Reference (e.g. path and filename) to an existent data artifact which
          stores either the measured patterns or input (already processed EBSD data).

  .. _/NXem_ebsd/simulation-group:

  **simulation**: (optional) :ref:`NXprocess` 

    .. collapse:: This group documents relevant details about the conditions and the tools ...

        This group documents relevant details about the conditions and the tools
        used for simulating diffraction patterns with some physical model.

        This group should be used if (e.g. instead of a measurement) the patterns
        were simulated (possibly awaiting indexing).

        In many practical cases where patterns are analyzed on-the-fly and dictionary
        indexing strategies used, so-called master pattern(s) are used to compare
        measured or simulated patterns with the master patterns.

    .. _/NXem_ebsd/simulation/depends_on-field:

    .. index:: depends_on (field)

    **depends_on**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      Path to an instance of :ref:`NXimage` where the simulated patterns are stored.

    .. _/NXem_ebsd/simulation/source-group:

    **source**: (optional) :ref:`NXnote` :ref:`⤆ </NXprocess/NOTE-group>`

      .. collapse:: Reference (e.g. path and filename) to an existent digital resource which ...

          Reference (e.g. path and filename) to an existent digital resource which
          stores either the patterns or input (already processed EBSD data) that are
          about to become processed further as described by this NXem_ebsd instance.

  .. _/NXem_ebsd/calibration-group:

  **calibration**: (optional) :ref:`NXprocess` 

    .. collapse:: The EBSD system, including components like the electron gun, pole-piece, ...

        The EBSD system, including components like the electron gun, pole-piece,
        stage tilt, EBSD detector, and the gnomonic projection have to be
        calibrated to achieve reliable, precise, and accurate scientific results.

        Specifically, the gnomonic projection has to be calibrated.
        Typically, standard specimens made from silicon or quartz crystals
        in specific orientations are used for this purpose.

        Considering that a system used is already calibrated well-enough is much
        more frequently the case in practice than that users perform the calibration
        themselves (with above-mentioned standard specimens).

        In the first case, the user assumes that the principle geometry of the
        hardware components and the settings in the control and EBSD pattern
        acquisition software has been calibrated already. Consequently, users pick from
        an existent library of phase candidates, i.e. :ref:`NXunit_cell` instances.
        Examples are reflector models as stored in CRY files (HKL/Channel 5/Flamenco).

        In the second case, users calibrate the system during the session
        using standards (silicon, quartz, or other common specimens).
        There is usually one person in each lab responsible for doing such
        calibrations. Often this person or technician is also in charge of
        configuring the graphical user interface and software with which most
        users control and perform their analyses.

        For EBSD this has key implications: Taking TSL OIM/EDAX as an example,
        the conventions how orientations are stored is affected by how the
        reference frames are configured and how this setup in the GUI.

        Unfortunately, these pieces of information are not necessarily stored
        in the results files. In effect, key conventions become disconnected
        from the data so it remains the users' obligation to remember these
        settings or write these down in a lab notebook. Otherwise, these metadata
        get lost. All these issues are a motivation and problem which :ref:`NXem_ebsd`
        solves in that all conventions can be specified explicitly.

    .. _/NXem_ebsd/calibration/depends_on-field:

    .. index:: depends_on (field)

    **depends_on**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      Path to an instance of :ref:`NXem` where calibration data are stored.

    .. _/NXem_ebsd/calibration/source-group:

    **source**: (optional) :ref:`NXnote` :ref:`⤆ </NXprocess/NOTE-group>`

      Reference to a digital resource where the calibration is stored.

  .. _/NXem_ebsd/indexing-group:

  **indexing**: (optional) :ref:`NXprocess` 

    .. collapse:: Indexing is a data processing step performed either after or while (aka on-the ...

        Indexing is a data processing step performed either after or while (aka on-the-fly)
        the beam scans the specimen. The resulting method is also
        known as orientation imaging microscopy (OIM).

        Different algorithms can be used to index EBSP. Common to them is the
        computational step where simulated or theoretically assumed patterns
        are compared with the measured ones. These latter patterns are referred
        to via the measurement or simulation groups of this base class respectively.

        Quality descriptors are defined based on which an indexing algorithm
        yields a quantitative measure of how similar measured and reference
        patterns are, and thus if no, one, or multiple so-called solutions were found.

        Assumed or simulated patterns are simulated using kinematical or dynamical
        theory of electron diffraction delivering master patterns.

        The Hough transform, one of the most frequently used traditional method for indexing
        EBSP is essentially a discretized Radon transform (for details see `M. van Ginkel et al. <https://www.semanticscholar.org/paper/A-short-introduction-to-the-Radon-and-Hough-and-how-Ginkel/fb6226f606cad489a15e38ed961c419037ccc858>`_). Recently, dictionary-based and artificial intelligence-based methods
        find more widespread usage for indexing.

    .. _/NXem_ebsd/indexing/method-field:

    .. index:: method (field)

    **method**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Principal algorithm used for indexing. ...

          Principal algorithm used for indexing.

          Any of these values or a custom value (if you use a custom value, also set @custom=True): ``hough_transform`` | ``dictionary`` | ``radon_transform``

    .. _/NXem_ebsd/indexing/status-field:

    .. index:: status (field)

    **status**: (optional) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_sc]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Which return value did the indexing algorithm yield for each scan point. ...

          Which return value did the indexing algorithm yield for each scan point.

          * 0 - Not analyzed
          * 1 - Too high angular deviation
          * 2 - No solution
          * 100 - Success
          * 255 - Unexpected errors

    .. _/NXem_ebsd/indexing/phases_per_scan_point-field:

    .. index:: phases_per_scan_point (field)

    **phases_per_scan_point**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [n_sc]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: How many phases i.e. crystal structure models were used to index each ...

          How many phases i.e. crystal structure models were used to index each
          scan point if any? Let's assume an example to explain how this field
          should be used: In the simplest case users collected one pattern for
          each scan point and have indexed using one phase, i.e. one instance
          of an :ref:`NXunit_cell`.

          In another example users may have skipped some scan points (not indexed
          them at all) or used differing numbers of phases for indexing different scan points.

          The cumulated of this array decodes how identifier_phase and matching_phase
          arrays have to be interpreted. In the simplest case (one pattern per scan
          point, and all scan points indexed using that same single phase model),
          identifier_phase has as many entries as scan points
          and matching_phase has also as many entries as scan points.

    .. _/NXem_ebsd/indexing/identifier_phase-field:

    .. index:: identifier_phase (field)

    **identifier_phase**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [n_solutions]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: The array phases_per_scan_point details how the identifier_phase ...

          The array phases_per_scan_point details how the identifier_phase
          and the matching_phase arrays have to be interpreted.

          For the example with a single phase identifier_phase has trivial
          values either 0 (no solution) or 1 (solution matching
          sufficiently significant with the model for phase 1).

          When there are multiple phases, it is possible (although not frequently
          required) that a pattern matches eventually (not equally well) sufficiently
          significant with multiple patterns. This can especially happen in cases of
          pseudosymmetry and more frequently with an improperly calibrated system
          or false or inaccurate phase models. Having such field is especially relevant
          for recent dictionary- or artificial intelligence-based indexing methods to communicate
          the results in a model-agnostic way in combination with matching_phase.

          Depending on the phases_per_scan_point value, identifier_phase and
          matching_phase arrays represent a collection of concatenated tuples.
          These are organized in sequence: The solutions for the 0-th scan point,
          the 1-th scan point, the n_sc - 1 th scan point and omitting tuples
          for those scan points with no phases according to phases_per_scan_point.

    .. _/NXem_ebsd/indexing/matching_phase-field:

    .. index:: matching_phase (field)

    **matching_phase**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [n_solutions]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: One-dimensional array, pattern by pattern labelling the solutions found. ...

          One-dimensional array, pattern by pattern labelling the solutions found.
          The array phases_per_scan_point has to be specified because it details
          how the identifier_phase and the matching_phase arrays are interpreted.
          See documentation of identifier_phase for further details.

    .. _/NXem_ebsd/indexing/matching_phase_descriptor-field:

    .. index:: matching_phase_descriptor (field)

    **matching_phase_descriptor**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Phase_matching is a descriptor for how well the solution matches or not. ...

          Phase_matching is a descriptor for how well the solution matches or not.
          Examples can be confidence_index, mean_angular_deviation, or other.

          Any of these values:

            * ``confidence_index``

            * ``mean_angular_deviation``

            * ``other``


    .. _/NXem_ebsd/indexing/scan_point_positions-field:

    .. index:: scan_point_positions (field)

    **scan_point_positions**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [n_sc, 2]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      .. collapse:: Calibrated center positions of each scan point ...

          Calibrated center positions of each scan point
          in the sample surface reference system.

    .. _/NXem_ebsd/indexing/indexing_rate-field:

    .. index:: indexing_rate (field)

    **indexing_rate**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`} 

      .. collapse:: Fraction of successfully indexed patterns with a phase ...

          Fraction of successfully indexed patterns with a phase
          not the null-phase vs the number_of_scan_points.

    .. _/NXem_ebsd/indexing/number_of_scan_points-field:

    .. index:: number_of_scan_points (field)

    **number_of_scan_points**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Number of scan points in the original mapping.

    .. _/NXem_ebsd/indexing/source-group:

    **source**: (optional) :ref:`NXnote` :ref:`⤆ </NXprocess/NOTE-group>`

      .. collapse:: This group enables to establish a logical connection between previous ...

          This group enables to establish a logical connection between previous
          processing steps or on-the-fly-performed indexing of the EBSD map.
          Typically these processing steps are performed with commercial software.
          Therefore, in many cases a results file from this indexing is often
          all that is communicated and saved. These are typically files in a format
          specific to the instrument and its configuration.

          Typical file formats are CPR/CRC, ANG, OSC, HDF5, H5EBSD, EDAXH5.

    .. _/NXem_ebsd/indexing/background_correction-group:

    **background_correction**: (optional) :ref:`NXprocess` 

      Details about the background correction applied to each Kikuchi pattern.

    .. _/NXem_ebsd/indexing/binning-group:

    **binning**: (optional) :ref:`NXprocess` 

      Binning i.e. downsampling to each pattern.

    .. _/NXem_ebsd/indexing/parameter-group:

    **parameter**: (optional) :ref:`NXcollection` 

      Specific parameter relevant only for certain algorithms used.

    .. _/NXem_ebsd/indexing/phaseID-group:

    **phase**\ :bolditalic:`ID`: (optional) :ref:`NXphase` 

      .. collapse:: Details for each phase used as a model with which the patterns were ...

          Details for each phase used as a model with which the patterns were
          indexed. Instances of :ref:`NXunit_cell` in this group must
          have the group name prefixed with phase. The identifier in the name is an
          integer. Start counting from 1 because the value 0 is reserved for
          the special phase that is the null-model, the null phase also known
          as notIndexed.

      .. _/NXem_ebsd/indexing/phaseID/dspacing-field:

      .. index:: dspacing (field)

      **dspacing**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_hkl]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

        Spacing between the crystallographic planes that are defined via ``miller``.

      .. _/NXem_ebsd/indexing/phaseID/relative_intensity-field:

      .. index:: relative_intensity (field)

      **relative_intensity**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_hkl]) {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`} 

        .. collapse:: Relative intensity for the computed diffraction intensity (signal) for the ...

            Relative intensity for the computed diffraction intensity (signal) for the
            plane.

      .. _/NXem_ebsd/indexing/phaseID/number_of_scan_points-field:

      .. index:: number_of_scan_points (field)

      **number_of_scan_points**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

        .. collapse:: In case the :ref:`NXunit_cell` base class is used with analyzed orientatio ...

            In case the :ref:`NXunit_cell` base class is used with analyzed orientation maps
            this field stores how many scan points of the map were identified as matching best
            with this phase.

      .. _/NXem_ebsd/indexing/phaseID/number_of_planes-field:

      .. index:: number_of_planes (field)

      **number_of_planes**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

        How many reflectors for crystallographic planes are distinguished.

      .. _/NXem_ebsd/indexing/phaseID/miller-field:

      .. index:: miller (field)

      **miller**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [n_hkl, 6]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

        .. collapse:: Miller indices :math:`(hkl)[uvw]` of the planes. ...

            Miller indices :math:`(hkl)[uvw]` of the planes.

            The first triplet specifies :math:`(hkl)`. The second triplet specifies :math:`[uvw]`.
            Miller indices refer to the Cartesian right-handed coordinate system of the unit cell.

    .. _/NXem_ebsd/indexing/rotation-group:

    **rotation**: (optional) :ref:`NXrotations` 


    .. _/NXem_ebsd/indexing/roi-group:

    **roi**: (optional) :ref:`NXdata` 

      An overview of the entire ROI.

      .. _/NXem_ebsd/indexing/roi/descriptor-field:

      .. index:: descriptor (field)

      **descriptor**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: Descriptor representing the image contrast. ...

            Descriptor representing the image contrast.

            Any of these values:

              * ``band_contrast``

              * ``confidence_index``

              * ``mean_angular_deviation``


      .. _/NXem_ebsd/indexing/roi/title-field:

      .. index:: title (field)

      **title**: (optional) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXdata/title-field>`

        Title of the default plot.

      .. _/NXem_ebsd/indexing/roi/data-field:

      .. index:: data (field)

      **data**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [n_y, n_x]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXdata/DATA-field>`

        Descriptor values displaying the ROI.

        .. _/NXem_ebsd/indexing/roi/data@long_name-attribute:

        .. index:: long_name (field attribute)

        **@long_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXdata/DATA@long_name-attribute>`

          Descriptor values

      .. _/NXem_ebsd/indexing/roi/axis_y-field:

      .. index:: axis_y (field)

      **axis_y**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_y]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

        Calibrated coordinate along the y-axis.

        .. _/NXem_ebsd/indexing/roi/axis_y@long_name-attribute:

        .. index:: long_name (field attribute)

        **@long_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

          Label for the y axis

      .. _/NXem_ebsd/indexing/roi/axis_x-field:

      .. index:: axis_x (field)

      **axis_x**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_x]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

        Calibrated coordinate along the x-axis.

        .. _/NXem_ebsd/indexing/roi/axis_x@long_name-attribute:

        .. index:: long_name (field attribute)

        **@long_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

          Label for the x axis


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXem_ebsd/calibration-group </NXem_ebsd/calibration-group>`
* :ref:`/NXem_ebsd/calibration/depends_on-field </NXem_ebsd/calibration/depends_on-field>`
* :ref:`/NXem_ebsd/calibration/source-group </NXem_ebsd/calibration/source-group>`
* :ref:`/NXem_ebsd/gnomonic_reference_frame-group </NXem_ebsd/gnomonic_reference_frame-group>`
* :ref:`/NXem_ebsd/gnomonic_reference_frame/origin-field </NXem_ebsd/gnomonic_reference_frame/origin-field>`
* :ref:`/NXem_ebsd/gnomonic_reference_frame/x_direction-field </NXem_ebsd/gnomonic_reference_frame/x_direction-field>`
* :ref:`/NXem_ebsd/gnomonic_reference_frame/y_direction-field </NXem_ebsd/gnomonic_reference_frame/y_direction-field>`
* :ref:`/NXem_ebsd/gnomonic_reference_frame/z_direction-field </NXem_ebsd/gnomonic_reference_frame/z_direction-field>`
* :ref:`/NXem_ebsd/indexing-group </NXem_ebsd/indexing-group>`
* :ref:`/NXem_ebsd/indexing/background_correction-group </NXem_ebsd/indexing/background_correction-group>`
* :ref:`/NXem_ebsd/indexing/binning-group </NXem_ebsd/indexing/binning-group>`
* :ref:`/NXem_ebsd/indexing/identifier_phase-field </NXem_ebsd/indexing/identifier_phase-field>`
* :ref:`/NXem_ebsd/indexing/indexing_rate-field </NXem_ebsd/indexing/indexing_rate-field>`
* :ref:`/NXem_ebsd/indexing/matching_phase-field </NXem_ebsd/indexing/matching_phase-field>`
* :ref:`/NXem_ebsd/indexing/matching_phase_descriptor-field </NXem_ebsd/indexing/matching_phase_descriptor-field>`
* :ref:`/NXem_ebsd/indexing/method-field </NXem_ebsd/indexing/method-field>`
* :ref:`/NXem_ebsd/indexing/number_of_scan_points-field </NXem_ebsd/indexing/number_of_scan_points-field>`
* :ref:`/NXem_ebsd/indexing/parameter-group </NXem_ebsd/indexing/parameter-group>`
* :ref:`/NXem_ebsd/indexing/phaseID-group </NXem_ebsd/indexing/phaseID-group>`
* :ref:`/NXem_ebsd/indexing/phaseID/dspacing-field </NXem_ebsd/indexing/phaseID/dspacing-field>`
* :ref:`/NXem_ebsd/indexing/phaseID/miller-field </NXem_ebsd/indexing/phaseID/miller-field>`
* :ref:`/NXem_ebsd/indexing/phaseID/number_of_planes-field </NXem_ebsd/indexing/phaseID/number_of_planes-field>`
* :ref:`/NXem_ebsd/indexing/phaseID/number_of_scan_points-field </NXem_ebsd/indexing/phaseID/number_of_scan_points-field>`
* :ref:`/NXem_ebsd/indexing/phaseID/relative_intensity-field </NXem_ebsd/indexing/phaseID/relative_intensity-field>`
* :ref:`/NXem_ebsd/indexing/phases_per_scan_point-field </NXem_ebsd/indexing/phases_per_scan_point-field>`
* :ref:`/NXem_ebsd/indexing/roi-group </NXem_ebsd/indexing/roi-group>`
* :ref:`/NXem_ebsd/indexing/roi/axis_x-field </NXem_ebsd/indexing/roi/axis_x-field>`
* :ref:`/NXem_ebsd/indexing/roi/axis_x@long_name-attribute </NXem_ebsd/indexing/roi/axis_x@long_name-attribute>`
* :ref:`/NXem_ebsd/indexing/roi/axis_y-field </NXem_ebsd/indexing/roi/axis_y-field>`
* :ref:`/NXem_ebsd/indexing/roi/axis_y@long_name-attribute </NXem_ebsd/indexing/roi/axis_y@long_name-attribute>`
* :ref:`/NXem_ebsd/indexing/roi/data-field </NXem_ebsd/indexing/roi/data-field>`
* :ref:`/NXem_ebsd/indexing/roi/data@long_name-attribute </NXem_ebsd/indexing/roi/data@long_name-attribute>`
* :ref:`/NXem_ebsd/indexing/roi/descriptor-field </NXem_ebsd/indexing/roi/descriptor-field>`
* :ref:`/NXem_ebsd/indexing/roi/title-field </NXem_ebsd/indexing/roi/title-field>`
* :ref:`/NXem_ebsd/indexing/rotation-group </NXem_ebsd/indexing/rotation-group>`
* :ref:`/NXem_ebsd/indexing/scan_point_positions-field </NXem_ebsd/indexing/scan_point_positions-field>`
* :ref:`/NXem_ebsd/indexing/source-group </NXem_ebsd/indexing/source-group>`
* :ref:`/NXem_ebsd/indexing/status-field </NXem_ebsd/indexing/status-field>`
* :ref:`/NXem_ebsd/measurement-group </NXem_ebsd/measurement-group>`
* :ref:`/NXem_ebsd/measurement/depends_on-field </NXem_ebsd/measurement/depends_on-field>`
* :ref:`/NXem_ebsd/measurement/source-group </NXem_ebsd/measurement/source-group>`
* :ref:`/NXem_ebsd/measurement/time-field </NXem_ebsd/measurement/time-field>`
* :ref:`/NXem_ebsd/measurement/time@epoch_start-attribute </NXem_ebsd/measurement/time@epoch_start-attribute>`
* :ref:`/NXem_ebsd/pattern_center-group </NXem_ebsd/pattern_center-group>`
* :ref:`/NXem_ebsd/pattern_center/x_boundary_convention-field </NXem_ebsd/pattern_center/x_boundary_convention-field>`
* :ref:`/NXem_ebsd/pattern_center/x_normalization_direction-field </NXem_ebsd/pattern_center/x_normalization_direction-field>`
* :ref:`/NXem_ebsd/pattern_center/y_boundary_convention-field </NXem_ebsd/pattern_center/y_boundary_convention-field>`
* :ref:`/NXem_ebsd/pattern_center/y_normalization_direction-field </NXem_ebsd/pattern_center/y_normalization_direction-field>`
* :ref:`/NXem_ebsd/simulation-group </NXem_ebsd/simulation-group>`
* :ref:`/NXem_ebsd/simulation/depends_on-field </NXem_ebsd/simulation/depends_on-field>`
* :ref:`/NXem_ebsd/simulation/source-group </NXem_ebsd/simulation/source-group>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/base_classes/NXem_ebsd.nxdl.xml
