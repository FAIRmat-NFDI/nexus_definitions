.. auto-generated by dev_tools.docs.nxdl from the NXDL source base_classes/NXatom.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXatom (base class)
    ! atom (base class)
    see: atom (base class); NXatom

.. _NXatom:

======
NXatom
======

..
    Contributors List

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  .. collapse:: Base class for documenting a set of atoms. ...

      Base class for documenting a set of atoms.

      Atoms in the set may be bonded. The set may have
      a net charge to represent an ion.
      An ion can be a molecular ion.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **n_pos**: Number of atom positions.

  **d**: Dimensionality

  **n_ivec_max**: Maximum number of atoms/isotopes allowed per (molecular) ion (fragment).

  **n_ranges**: Number of mass-to-charge-state-ratio range intervals for ion type.

**Groups cited**:
  none

**Structure**:

  .. _/NXatom/name-field:

  .. index:: name (field)

  **name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Given name for the set. ...

        Given name for the set.

        This field could for example be used in the research field
        of atom probe tomography to store a standardized human-readable
        name of the element or (molecular) ion like such as Al +++ or 12C +.

  .. _/NXatom/id-field:

  .. index:: id (field)

  **id**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Given numerical identifier for  the set. ...

        Given numerical identifier for  the set.

        The identifier zero is reserved for the special unknown ion type.

  .. _/NXatom/identifier_chemical-field:

  .. index:: identifier_chemical (field)

  **identifier_chemical**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Identifier used to refer to if the set of atoms represents a substance. ...

        Identifier used to refer to if the set of atoms represents a substance.

        Obligatory value: ``inchi``

  .. _/NXatom/charge-field:

  .. index:: charge (field)

  **charge**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_CHARGE <NX_CHARGE>`} 

    .. collapse:: Signed net (partial) charge of the (molecular) ion. ...

        Signed net (partial) charge of the (molecular) ion.

        Different methods for computing charge are in use.
        Care needs to be exercised with respect to the integration.
        `T. A. Manz <10.1039/c6ra04656h>`_ and `N. G. Limas <10.1039/C6RA05507A>`_ discuss computational details.

  .. _/NXatom/charge_state-field:

  .. index:: charge_state (field)

  **charge_state**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Charge reported in multiples of the charge of an electron. ...

        Charge reported in multiples of the charge of an electron.

        For research using atom probe tomography the value should be set to
        zero if the charge_state is unknown and irrecoverable. This can happen
        when classical ranging definition files in formats like RNG, RRNG are used.
        These file formats do not document the charge state explicitly but only
        the number of atoms of each element per molecular ion surplus the
        respective mass-to-charge-state-ratio interval.

        Details on ranging definition files in the literature are `M. K. Miller <https://doi.org/10.1002/sia.1719>`_.

  .. _/NXatom/volume-field:

  .. index:: volume (field)

  **volume**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_VOLUME <NX_VOLUME>`} 

    .. collapse:: Assumed volume affected by the set of atoms. ...

        Assumed volume affected by the set of atoms.

        Neither individual atoms nor a set of cluster of these have a volume
        that is unique as a some cut-off criterion is required.

  .. _/NXatom/indices-field:

  .. index:: indices (field)

  **indices**: (optional) :ref:`NX_CHAR <NX_CHAR>` (Rank: 1, Dimensions: [n_pos]) 

    .. collapse:: Index for each atom at locations as detailed by position. ...

        Index for each atom at locations as detailed by position.
        Indices can be used as identifier and thus names for individual atoms.

  .. _/NXatom/type-field:

  .. index:: type (field)

  **type**: (optional) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_pos]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Nuclide information for each atom at locations as detailed by position. ...

        Nuclide information for each atom at locations as detailed by position.

        One `approach <https://doi.org/10.1017/S1431927621012241>`_ for storing nuclide information
        efficiently is via hashing with the following formula

        :math:`H` is :math:`H = Z + N \cdot 256` with :math:`Z`

        the number of protons and :math:`N` the number of neutrons
        of each nuclide given as 8-bit unsigned integer values.

  .. _/NXatom/position-field:

  .. index:: position (field)

  **position**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [n_pos, d]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

    Position of each atom.

    .. _/NXatom/position@reference_frame-attribute:

    .. index:: reference_frame (field attribute)

    **@reference_frame**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Path to a reference frame in which positions are defined ...

          Path to a reference frame in which positions are defined
          to resolve ambiguity when the reference frame is different
          to the NeXus default reference frame (McStas).

  .. _/NXatom/occupancy-field:

  .. index:: occupancy (field)

  **occupancy**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_pos]) {units=\ :ref:`NX_DIMENSIONLESS <NX_DIMENSIONLESS>`} 

    .. collapse:: Relative occupancy of the atom position. ...

        Relative occupancy of the atom position.

        This field is useful for specifying the atomic motif in
        instances of :ref:`NXunit_cell`.

  .. _/NXatom/nuclide_hash-field:

  .. index:: nuclide_hash (field)

  **nuclide_hash**: (optional) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_ivec_max]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Vector of nuclide hash values. ...

        Vector of nuclide hash values.

        Individual hash values :math:H is :math:H = Z + N \cdot 256 with :math:Z
        encoding the number of protons and :math:N the number of neutrons for
        each nuclide respectively. :math:Z and :math:N must be 8-bit unsigned integers.

        Exemplified for tritium (:math:`Z = 1`, :math:`N = 2`), its hash value is :math:`H = 513`.

        The array is sorted in decreasing order. For the rationale behind this see `M. KÃ¼hbach et al. (2021) <https://doi.org/10.1017/S1431927621012241>`_

  .. _/NXatom/nuclide_list-field:

  .. index:: nuclide_list (field)

  **nuclide_list**: (optional) :ref:`NX_UINT <NX_UINT>` (Rank: 2, Dimensions: [n_ivec_max, 2]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Table which decodes the entries in nuclide_hash into a human-readable matrix o ...

        Table which decodes the entries in nuclide_hash into a human-readable matrix of instances.
        The first column specifies the nuclide mass number, i.e. using the hashvalues
        from the isotope_vector this is :math:`Z + N` or 0. The value 0 documents that no
        isotope-specific information about the element encoded is relevant.
        The second row specifies the number of protons :math:`Z` or 0.
        The value 0 in this case documents a placeholder or that no element-specific
        information is relevant.
        Taking a carbon-14 nuclide as an example the mass number is 14.
        That is encoded as a value pair (14, 6) as one row of the table.

        Therefore, this notation is the typical superscribed nuclide mass number
        and subscripted number of protons element notation e.g. :math:`^{14}C`.
        The array is stored matching the order of nuclide_hash.

  .. _/NXatom/mass_to_charge_range-field:

  .. index:: mass_to_charge_range (field)

  **mass_to_charge_range**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [n_ranges, 2]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

    .. collapse:: Associated lower (mqmin) and upper (mqmax) bounds of the ...

        Associated lower (mqmin) and upper (mqmax) bounds of the
        mass-to-charge-state ratio interval(s) [mqmin, mqmax]
        (boundaries inclusive). This field is primarily of interest
        for documenting :ref:`NXprocess` steps of indexing a
        ToF/mass-to-charge state histogram.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXatom/charge-field </NXatom/charge-field>`
* :ref:`/NXatom/charge_state-field </NXatom/charge_state-field>`
* :ref:`/NXatom/id-field </NXatom/id-field>`
* :ref:`/NXatom/identifier_chemical-field </NXatom/identifier_chemical-field>`
* :ref:`/NXatom/indices-field </NXatom/indices-field>`
* :ref:`/NXatom/mass_to_charge_range-field </NXatom/mass_to_charge_range-field>`
* :ref:`/NXatom/name-field </NXatom/name-field>`
* :ref:`/NXatom/nuclide_hash-field </NXatom/nuclide_hash-field>`
* :ref:`/NXatom/nuclide_list-field </NXatom/nuclide_list-field>`
* :ref:`/NXatom/occupancy-field </NXatom/occupancy-field>`
* :ref:`/NXatom/position-field </NXatom/position-field>`
* :ref:`/NXatom/position@reference_frame-attribute </NXatom/position@reference_frame-attribute>`
* :ref:`/NXatom/type-field </NXatom/type-field>`
* :ref:`/NXatom/volume-field </NXatom/volume-field>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/base_classes/NXatom.nxdl.xml
