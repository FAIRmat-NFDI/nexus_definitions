category: application
doc: |
  Application definition for the microstructure generator kanapy from ICAMS Bochum.
  
  * `A. Hartmeier et al. <https://joss.theoj.org/papers/10.21105/joss.01732>`_
  
  A draft application definition to support discussion within the infrastructure use case IUC07 of the
  NFDI-MatWerk consortium of the German NFDI working on a data model for documenting simulations
  of spatiotemporal microstructure evolution with scientific software from this community.
type: group
NXmicrostructure_kanapy_results(NXobject):
  (NXentry):
    definition(NX_CHAR):
      enumeration: [NXmicrostructure_kanapy_results]
    description(NX_CHAR):
      doc: |
        Discouraged free-text field to add further details to the computation.
    start_time(NX_DATETIME):  # better with UTC
    end_time(NX_DATETIME):  # better to get elapsed time
      exists: recommended
    profiling(NXcs_profiling):
      exists: optional
    (NXuser):  # could use owner(NXuser) meaning a special type of user
      exists: [min, 0, max, infty]
    # kanapy,  the script because this is also a program /Users/alexander/Codes/kanapy/examples/RVE_generation/create_rve.py
    program1(NXprogram):
      program(NX_CHAR):
        \@version(NX_CHAR):
        \@url(NX_CHAR):  # https://github.com/ICAMS/Kanapy.git
          exists: recommended
    program2(NXprogram):
      program(NX_CHAR):
        \@version(NX_CHAR):
        \@url(NX_CHAR):
          exists: recommended
    environment(NXobject):
      exists: optional
      doc: |
        Programs and libraries representing the computational environment
      programID(NXprogram):
        exists: [min, 1, max, infty]
        program(NX_CHAR):
          \@version(NX_CHAR):
    # no units instead labelled-property graph concepts with units
    microstructureID(NXmicrostructure):
      exists: [min, 1, max, infty]
      (NXcg_grid):  # size but much more capable
        exists: optional
        cell_dimensions(NX_NUMBER):
        extent(NX_INT):
        origin(NX_NUMBER):
        symmetry(NX_CHAR):
        position(NX_NUMBER):
          exists: recommended
        coordinate(NX_INT):
          exists: recommended
        bounding_box(NXcg_polyhedron_set):
          exists: recommended
        number_of_boundaries(NX_INT):
          exists: recommended
        boundaries(NX_CHAR):
          exists: recommended
        boundary_conditions(NX_INT):
          exists: recommended
      # TODO: populate further based on appdefs NXmicrostructure_score_results
