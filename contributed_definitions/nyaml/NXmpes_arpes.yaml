#Pincelli, Rettig, Arora at fhi-berlin.mpg.de, Dobener at hu-berlin.de, 06/2022
#Draft version of a NeXus application definition for angle resolved photoemission.
#This appdef aims to describe data produced from hemispherical analysers,
#with at least an angular coordinate and one energy coordinate.
#It is designed to be extended by other application definitions
#with higher granularity in the data description.

doc: This is an general application definition for angle-resolved multidimensional photoelectron spectroscopy.
category: application
NXmpes_arpes(NXmpes):
  (NXentry):
    definition:
      \@version:
      enumeration: ["NXmpes_arpes"]
    geometries(NXcoordinate_system_set):
      arpes_geometry(NXcoordinate_system):
        depends_on(NX_CHAR):
          doc: |
            Link to transformations defining an APRES base coordinate system,
            which is defined such that the positive z-axis points towards the analyzer entry,
            and the x-axis lies within the beam/analyzer plane.
        (NXtransformations):
          doc: |
            Set of transformations, describing the orientation of the ARPES coordinate system
            with respect to the beam coordinate system (.).
    (NXinstrument):
      angularN_resolution(NXresolution):
        exists: recommended
        doc:
        - |
          Overall angular resolution along the Nth angular axis. Create one such entry per relevant angular axis,
          corresponding to the angular axes in NXdata.
          For hemispherical analyzers, angular0_resolution corresponds to the direction along the analyzer slit,
          and angular1_resolution to the one perpendicular to it.
        physical_quantity:
          enumeration: [angle]
        type:
          exists: recommended
        resolution(NX_FLOAT):
          unit: NX_ANGLE
      (NXelectronanalyser):
        angularN_resolution(NXresolution):
          exists: recommended
          doc:
          - |
            Analyzer angular resolution along the Nth angular axis.
            Create one such entry per relevant angular axis, corresponding to the angular axes in NXdata.
            For hemispherical analyzers, angular0_resolution corresponds to the direction along the analyzer slit,
            and angular1_resolution to the one perpendicular to it.
          physical_quantity:
            enumeration: [angle]
          type:
            exists: recommended
          resolution(NX_FLOAT):
            unit: NX_ANGLE
        depends_on(NX_CHAR):
          doc: |
            Reference to the last transformation describing the orientation of the analyzer relative to the beam,
            e.g. transformations/analyzer_elevation.
        transformations(NXtransformations):
          doc: |
            Set of transformations, describing the relative orientation of the analyzer
            with respect to the beam coordinate system (.).
          analyzer_rotation(NX_NUMBER):
            doc: |
              Rotation about the analyzer lens axis.
              Its zero reference is defined such that the angular0 axis is
              increasing towards the positive y axis (analyzer slit vertical).
            unit: NX_ANGLE
            \@transformation_type:
              enumeration: ["rotation"]
            \@vector:
              enumeration: ["[0, 0, 1]"]
            \@depends_on:
              doc: |
                Path to a transformation that places the analyzer origin system into the arpes_geometry coordinate system.
          analyzer_elevation(NX_NUMBER):
            doc: 
              Elevation of the effective analyzer acceptance area,
              e.g. realized by deflectors, or as one angle in a TOF detector.
              If a resolved angle, place the calibrated axis coordinates here.
            unit: NX_ANGLE
            \@transformation_type:
              enumeration: ["rotation"]
            \@vector:
              enumeration: ["[0, 1, 0]"]
            \@depends_on:
              enumeration: ["analyzer_dispersion"]
          analyzer_dispersion(NX_NUMBER):
            doc: |
              In-plane analyzer coordinate along a dispersive direction,
              e.g. along an analyzer slit. If a resolved angle, place the calibrated coordinates here.
            unit: NX_ANGLE
            \@transformation_type:
              enumeration: ["rotation"]
            \@vector:
              enumeration: ["[1, 0, 0]"]
            \@depends_on:
              enumeration: ["analyzer_rotation"]
        (NXcollectioncolumn):
          scheme:
            exists: recommended
            doc: "Scheme of the electron collection column."
            enumeration: [
              "angular dispersive",
              "non-dispersive",
            ]
          angular_acceptance(NX_FLOAT):
            exists: recommended
        (NXenergydispersion):
          diameter(NX_NUMBER):
            exists: recommended
            unit: NX_LENGTH
          entrance_slit(NXaperture):
            exists: recommended
            shape:
              enumeration: [
                "straight slit",
                "curved slit",
              ]
    (NXsample):
      situation:
        enumeration: ["vacuum"]
      depends_on(NX_CHAR):
        doc: |
          Reference to the end of the transformation chain,
          orienting the sample surface within the arpes_geometry coordinate system
          (sample_azimuth or anything depending on it).
      transformations(NXtransformations):
        doc: |
          Set of transformations, describing the relative orientation of the sample
          with respect to the arpes_geometry coordinate system.
        sample_polar(NX_NUMBER):
          doc: "Rotation about the y axis (typically the long manipulator axis)."
          unit: NX_ANGLE
          \@transformation_type:
            enumeration: ["rotation"]
          \@vector:
            enumeration: ["[0, 1, 0]"]
          \@depends_on:
            doc: |
              Path to a transformation that places the sample surface
              into the origin of the arpes_geometry coordinate system.
        offset_polar(NX_NUMBER):
          doc: "Offset of polar rotation."
          unit: NX_ANGLE
          \@transformation_type:
            enumeration: ["rotation"]
          \@vector:
            enumeration: ["[0, 1, 0]"]
          \@depends_on:
            enumeration: ["sample_polar"]
        sample_tilt(NX_NUMBER):
          doc: "Rotation about the x axis (typically a manipulator tilt)."
          unit: NX_ANGLE
          \@transformation_type:
            enumeration: ["rotation"]
          \@vector:
            enumeration: ["[1, 0, 0]"]
          \@depends_on:
            enumeration: ["offset_polar"]
        offset_tilt(NX_NUMBER):
          doc: "Offset of tilt rotation."
          unit: NX_ANGLE
          \@transformation_type:
            enumeration: ["rotation"]
          \@vector:
            enumeration: ["[1, 0, 0]"]
          \@depends_on:
            enumeration: ["sample_tilt"]
        sample_azimuth(NX_NUMBER):
          doc: "Rotation about the z axis (azimuthal rotation within the sample plane)."
          unit: NX_ANGLE
          \@transformation_type:
            enumeration: ["rotation"]
          \@vector:
            enumeration: ["[0, 0, 1]"]
          \@depends_on:
            enumeration: ["offset_tilt"]
        offset_azimuth(NX_NUMBER):
          doc: "Offset of azimuthal rotation."
          unit: NX_ANGLE
          \@transformation_type:
            enumeration: ["rotation"]
          \@vector:
            enumeration: ["[0, 0, 1]"]
          \@depends_on:
            enumeration: ["sample_azimuth"]
    data(NXdata_mpes):
      \@signal:
        enumeration: ["data"] # There is an object named data that contains the signal
      \@axes: # There are three dimensions, one energy & two angular coordinates. Any coordinates that do not move, are represented by one point.
        enumeration: ["[angular0, angular1, energy]"]
      \@energy_indices: # energy indices have to be provided
      \@angular0_indices: # angular0 indices have to be provided
      \@angular1_indices: # angular1 indices have to be provided
      \@angular0_depends(NX_CHAR):
        doc: |
          Points to the path to a field defining the axis on which the angular axis depends.
          For example:
          @angular0_depends: '/entry/sample/transformations/sample_tilt' for a manipulator angular scan
          @angular0_depends: '/entry/instrument/detector/sensor_x' for a 2D detector
          @angular0_depends: '/entry/instrument/collectioncolumn/deflector' for a deflector scan
          @angular0_depends: '/entry/process/calibration/angular0_calibration/calibrated_axis' for a preprocessed axis.
      \@angular1_depends(NX_CHAR):
        doc: |
          Points to the path to a field defining the axis on which the angular axis depends.
          For example:
          @angular1_depends: '/entry/sample/transformations/sample_polar' for a manipulator angular scan
          @angular1_depends: '/entry/instrument/detector/sensor_x' for a 2D detector
          @angular1_depends: '/entry/instrument/collectioncolumn/deflector' for a deflector scan
          @angular1_depends: '/entry/process/calibration/angular1_calibration/calibrated_axis' for a preprocessed axis.
      \@energy_depends(NX_CHAR): # Similarly, energy can be dispersed according to different strategies
        doc: |
          Points to the path to a field defining the axis on which the energy axis depends.
          For example:
          @energy_depends: '/entry/instrument/detector/sensor_y' for a 2D detector
          @energy_depends: '/entry/instrument/energydispersion/center_kinetic_energy' for a swept scan
          @energy_depends: '/entry/process/calibration/energy_calibration/calibrated_axis' for a preprocessed axis.
      energy(NX_NUMBER):
        doc: "Trace of the energy axis. Could be linked from the respective 'AXISNAME_depends' field."
        unit: NY_ENERGY
      angular0(NX_NUMBER):
        doc: "Trace of the first angular axis. Could be linked from the respective 'AXISNAME_depends' field."
        unit: NX_ANGLE
      angular1(NX_NUMBER):
        doc: "Trace of the second axis. Could be linked from the respective 'AXISNAME_depends' field."
        unit: ANX_ANGLE
      data(NX_NUMBER): # There is a block of numbers named data.
        doc: |
          Represents a measure of three-dimensional photoemission counts, where
          the varied axes are energy, and one or more angular coordinates. Axes traces
          should be linked to the actual encoder position in NXinstrument or calibrated axes in NXprocess.
        unit: NX_ANY
