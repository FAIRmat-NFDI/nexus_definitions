category: base
doc: |
  Base class for documenting a set of atoms.
  
  Atoms in the set may be bonded. The set may have
  a net charge to represent an ion.
  An ion can be a molecular ion.
symbols:
  doc: |
    The symbols used in the schema to specify e.g. dimensions of arrays.
  n_pos: |
    Number of atom positions.
  d: |
    Dimensionality
type: group
NXatom(NXobject):
  name(NX_CHAR):
    doc: |
      Given name for the set.
      
      This field could for example be used in the research field
      of atom probe tomography to store a standardized human-readable
      name of the element or (molecular) ion like such as Al +++ or 12C +.
  identifier_chemical(NX_CHAR):
    doc: |
      Identifier used to refer to if the set of atoms represents a substance.
    enumeration: [inchi]
  charge(NX_NUMBER):
    unit: NX_CHARGE
    doc: |
      Signed net (partial) charge of the (molecular) ion.
      
      Different methods for computing charge are in use.
      Care needs to be exercised with respect to the integration.
      `T. A. Manz <10.1039/c6ra04656h>`_ and `N. G. Limas <10.1039/C6RA05507A>`_ discuss computational details.
  charge_state(NX_NUMBER):
    unit: NX_UNITLESS
    doc: |
      Charge reported in multiples of the charge of an electron.
      
      For research using atom probe tomography the value should be set to
      zero if the charge_state is unknown and irrecoverable. This can happen
      when classical ranging definition files in formats like RNG, RRNG are used.
      These file formats do not document the charge state explicitly but only
      the number of atoms of each element per molecular ion surplus the
      respective mass-to-charge-state-ratio interval.
      
      Details on ranging definition files in the literature are `M. K. Miller <https://doi.org/10.1002/sia.1719>`_.
  volume(NX_NUMBER):
    unit: NX_VOLUME
    doc: |
      Assumed volume affected by the set of atoms.
      
      Neither individual atoms nor a set of cluster of these have a volume
      that is unique as a some cut-off criterion is required.
  indices(NX_CHAR):
    doc: |
      Index for each atom at locations as detailed by position.
      Indices can be used as identifier and thus names for individual atoms.
    dimensions:
      rank: 1
      dim: (n_pos,)
  type(NX_UINT):
    unit: NX_UNITLESS
    doc: |
      Nuclide information for each atom at locations as detailed by position.
      
      One `approach <https://doi.org/10.1017/S1431927621012241>`_ for storing nuclide information
      efficiently is via hashing with the following formula
      
      :math:`H` is :math:`H = Z + N \cdot 256` with :math:`Z`
      
      the number of protons and :math:`N` the number of neutrons
      of each nuclide given as 8-bit unsigned integer values.
    dimensions:
      rank: 1
      dim: (n_pos,)
  position(NX_NUMBER):
    unit: NX_ANY
    doc: |
      Position of each atom.
    dimensions:
      rank: 2
      dim: (n_pos, d)
    \@reference_frame(NX_CHAR):
      doc: |
        Path to a reference frame in which positions are defined
        to resolve ambiguity when the reference frame is different
        to the NeXus default reference frame (McStas).
  occupancy(NX_NUMBER):
    unit: NX_DIMENSIONLESS
    doc: |
      Relative occupancy of the atom position.
      
      This field is useful for specifying the atomic motif in
      instances of :ref:`NXunit_cell`.
    dimensions:
      rank: 1
      dim: (n_pos,)

# ++++++++++++++++++++++++++++++++++ SHA HASH ++++++++++++++++++++++++++++++++++
# fc189c70eeb19f2dadb12b90700cfeef10148baf87fd6e71874db0941aeb5aaf
# <?xml version="1.0" encoding="UTF-8"?>
# <?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
# <!--
# # NeXus - Neutron and X-ray Common Data Format
# #
# # Copyright (C) 2025-2025 NeXus International Advisory Committee (NIAC)
# #
# # This library is free software; you can redistribute it and/or
# # modify it under the terms of the GNU Lesser General Public
# # License as published by the Free Software Foundation; either
# # version 3 of the License, or (at your option) any later version.
# #
# # This library is distributed in the hope that it will be useful,
# # but WITHOUT ANY WARRANTY; without even the implied warranty of
# # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# # Lesser General Public License for more details.
# #
# # You should have received a copy of the GNU Lesser General Public
# # License along with this library; if not, write to the Free Software
# # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# #
# # For further information, see http://www.nexusformat.org
# -->
# <definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXatom" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
#     <symbols>
#         <doc>
#             The symbols used in the schema to specify e.g. dimensions of arrays.
#         </doc>
#         <symbol name="n_pos">
#             <doc>
#                 Number of atom positions.
#             </doc>
#         </symbol>
#         <symbol name="d">
#             <doc>
#                 Dimensionality
#             </doc>
#         </symbol>
#     </symbols>
#     <doc>
#         Base class for documenting a set of atoms.
#         
#         Atoms in the set may be bonded. The set may have
#         a net charge to represent an ion.
#         An ion can be a molecular ion.
#     </doc>
#     <field name="name" type="NX_CHAR">
#         <doc>
#             Given name for the set.
#             
#             This field could for example be used in the research field
#             of atom probe tomography to store a standardized human-readable
#             name of the element or (molecular) ion like such as Al +++ or 12C +.
#         </doc>
#     </field>
#     <field name="identifier_chemical" type="NX_CHAR">
#         <doc>
#             Identifier used to refer to if the set of atoms represents a substance.
#         </doc>
#         <enumeration>
#             <item value="inchi"/>
#         </enumeration>
#     </field>
#     <field name="charge" type="NX_NUMBER" units="NX_CHARGE">
#         <doc>
#             Signed net (partial) charge of the (molecular) ion.
#             
#             Different methods for computing charge are in use.
#             Care needs to be exercised with respect to the integration.
#             `T. A. Manz &lt;10.1039/c6ra04656h&gt;`_ and `N. G. Limas &lt;10.1039/C6RA05507A&gt;`_ discuss computational details.
#         </doc>
#     </field>
#     <field name="charge_state" type="NX_NUMBER" units="NX_UNITLESS">
#         <doc>
#             Charge reported in multiples of the charge of an electron.
#             
#             For research using atom probe tomography the value should be set to
#             zero if the charge_state is unknown and irrecoverable. This can happen
#             when classical ranging definition files in formats like RNG, RRNG are used.
#             These file formats do not document the charge state explicitly but only
#             the number of atoms of each element per molecular ion surplus the
#             respective mass-to-charge-state-ratio interval.
#             
#             Details on ranging definition files in the literature are `M. K. Miller &lt;https://doi.org/10.1002/sia.1719&gt;`_.
#         </doc>
#     </field>
#     <field name="volume" type="NX_NUMBER" units="NX_VOLUME">
#         <doc>
#             Assumed volume affected by the set of atoms.
#             
#             Neither individual atoms nor a set of cluster of these have a volume
#             that is unique as a some cut-off criterion is required.
#         </doc>
#     </field>
#     <field name="indices" type="NX_CHAR">
#         <doc>
#             Index for each atom at locations as detailed by position.
#             Indices can be used as identifier and thus names for individual atoms.
#         </doc>
#         <dimensions rank="1">
#             <dim index="1" value="n_pos"/>
#         </dimensions>
#     </field>
#     <field name="type" type="NX_UINT" units="NX_UNITLESS">
#         <doc>
#             Nuclide information for each atom at locations as detailed by position.
#             
#             One `approach &lt;https://doi.org/10.1017/S1431927621012241&gt;`_ for storing nuclide information
#             efficiently is via hashing with the following formula
#             
#             :math:`H` is :math:`H = Z + N \cdot 256` with :math:`Z`
#             
#             the number of protons and :math:`N` the number of neutrons
#             of each nuclide given as 8-bit unsigned integer values.
#         </doc>
#         <dimensions rank="1">
#             <dim index="1" value="n_pos"/>
#         </dimensions>
#     </field>
#     <field name="position" type="NX_NUMBER" units="NX_ANY">
#         <doc>
#             Position of each atom.
#         </doc>
#         <dimensions rank="2">
#             <dim index="1" value="n_pos"/>
#             <dim index="2" value="d"/>
#         </dimensions>
#         <attribute name="reference_frame" type="NX_CHAR">
#             <doc>
#                 Path to a reference frame in which positions are defined
#                 to resolve ambiguity when the reference frame is different
#                 to the NeXus default reference frame (McStas).
#             </doc>
#         </attribute>
#     </field>
#     <field name="occupancy" type="NX_NUMBER" units="NX_DIMENSIONLESS">
#         <doc>
#             Relative occupancy of the atom position.
#             
#             This field is useful for specifying the atomic motif in
#             instances of :ref:`NXunit_cell`.
#         </doc>
#         <dimensions rank="1">
#             <dim index="1" value="n_pos"/>
#         </dimensions>
#     </field>
# </definition>
