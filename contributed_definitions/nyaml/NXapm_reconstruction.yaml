category: base
doc: |
  Base class for the configuration and results of a (static) reconstruction algorithm.
  
  Generating a tomographic reconstruction of the specimen uses selected and
  calibrated ion hit positions, the evaporation sequence, and voltage curve data.
  Very often scientists use own software scripts according to published procedures,
  so-called reconstruction protocols.
symbols:
  doc: |
    The symbols used in the schema to specify e.g. dimensions of arrays.
  n: |
    Number of ions spatially filtered from results of the hit_finding algorithm
    from which an instance of a reconstructed volume has been generated.
    These ions get new identifier assigned in the process - the so-called
    evaporation_id, which must not be confused with the pulse_id!
type: group
NXapm_reconstruction(NXprocess):
  
  # when evolving these ideas further inherit from NXapm_method instead
  (NXprogram):
  (NXnote):
  
  # config/input
  parameter(NX_CHAR):
    doc: |
      Different reconstruction protocols exist. Although these approaches
      are qualitatively similar, each protocol uses different parameters
      (and interprets these differently). The source code to IVAS/APSuite
      is not open. For now users should store reconstruction parameter
      in this free-text field to guide how to parameterize this better in the
      future. For LEAP systems and reconstructions performed with IVAS/APSuite
      see `T. Blum et al. <https://doi.org/10.1002/9781119227250.ch18>`_ (page 371).
  primary_element(NX_CHAR):
    doc: |
      CAnalysis.CSpatial.fPrimaryElement
  efficiency(NX_FLOAT):
    unit: NX_DIMENSIONLESS
    doc: |
      CAnalysis.CSpatial.fEfficiency
  flight_path(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      CAnalysis.CSpatial.fFlightPath
  evaporation_field(NX_FLOAT):
    unit: NX_ANY
    doc: |
      CAnalysis.CSpatial.fEvaporationField
  image_compression(NX_FLOAT):
    unit: NX_UNITLESS
    doc: |
      CAnalysis.CSpatial.fImageCompression
      
      Image compression factor (ICF)
  kfactor(NX_FLOAT):
    unit: NX_UNITLESS
    doc: |
      CAnalysis.CSpatial.fKfactor
      
      k factor
  volume(NX_FLOAT):
    unit: NX_VOLUME
    doc: |
      CAnalysis.CSpatial.fRecoVolume
      
      Sum of ion volumes
  shank_angle(NX_FLOAT):
    unit: NX_ANGLE
    doc: |
      CAnalysis.CSpatial.fShankAngle
      
      Shank angle
  tip_radius(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      CAnalysis.CSpatial.fTipRadius
  tip_radius_zero(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      CAnalysis.CSpatial.fTipRadius0
  voltage_zero(NX_FLOAT):
    unit: NX_VOLTAGE
    doc: |
      CAnalysis.CSpatial.fVoltage0
  protocol_name(NX_CHAR):
    doc: |
      Qualitative statement about which reconstruction protocol was used.
    enumeration:
      open_enum: true
      items: [bas, geiser, gault, cameca]
  crystallographic_calibration(NX_CHAR):
    doc: |
      Different strategies for crystallographic calibration of the
      reconstruction are possible. Therefore, we collect first such
      feedback before parametrizing this further.
      
      If no crystallographic calibration was performed, the field
      should be filled with the n/a, meaning not applied.
  obb(NXcollection):
    doc: |
      Tight, axis-aligned bounding box about the point cloud of the reconstruction.
    xmin(NX_FLOAT):
      unit: NX_LENGTH
      doc: |
        TODO
    xmax(NX_FLOAT):
      unit: NX_LENGTH
      doc: |
        TODO
    ymin(NX_FLOAT):
      unit: NX_LENGTH
      doc: |
        TODO
    ymax(NX_FLOAT):
      unit: NX_LENGTH
      doc: |
        TODO
    zmin(NX_FLOAT):
      unit: NX_LENGTH
      doc: |
        TODO
    zmax(NX_FLOAT):
      unit: NX_LENGTH
      doc: |
        TODO
  # results
  field_of_view(NX_FLOAT):
    unit: NX_LENGTH
    
    # typically in nm reconstruction space not detector coordinates
    doc: |
      The nominal diameter of the specimen ROI which is measured in the
      experiment. The physical specimen cannot be measured completely
      because ions may launch but hit in locations other than the detector.
  reconstructed_positions(NX_FLOAT):
    unit: NX_LENGTH
    doc: |
      Three-dimensional reconstructed positions of the ions.
    dimensions:
      rank: 2
      dim: (n, 3)
    \@depends_on(NX_CHAR):
      doc: |
        The instance of :ref:`NXcoordinate_system`
        in which the positions are defined.
  naive_discretization(NXprocess):
    (NXprogram):
    
    # config/input
    # results
    (NXdata):
      doc: |
        To get a first visual overview of the reconstructed dataset,
        here a 3d histogram of the ion is stored. Ion counts are characterized
        using one nanometer cubic bins without applying position smoothening
        algorithms during the histogram computation.
