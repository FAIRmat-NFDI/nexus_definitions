category: base
doc:
- |
  Base class for reporting a set of images in real or reciprocal space.
- |
  Typically an image is understood as a discretized representation of intensity distribution that was
  detected or simulated for which most often equidistantly spaced sampling is used.
  The terms pixel and voxel identify the smallest discretization unit of such a representation.
  Under these conditions pixel and voxel are polygonal or polyhedral unit cells of the underlying
  tessellation of the region of interest within the reference space.
  
  If the sampling is not equispaced, the shape and size of pixel and voxel change but still their
  reference space is tessellated. In this case the term (image) point is eventually a more appropriate
  term to use. Therefore, all docstrings in this base class refer to points.
  
  This base class represents images generated from equispaced or non-equispaced sampling.
  
  For images in reciprocal space in practice, complex numbers are encoded via some
  formatted pair of real values. Typically, fast algorithms for computing Fourier transformations
  (FFT) are used to encode images in reciprocal (frequency) space. FFT libraries are used
  for implementing the key functionalities of these mathematical operations.
  
  Different libraries use different representations and encoding of the images.
  Details can be found in the respective sections of the typical FFT libraries documentations
  
  * `FFTW by M. Frigo and S. G. Johnson <https://www.fftw.org/fftw3_doc/Tutorial.html#Tutorial>`_
  * `Intel MKL by the Intel Co. <https://www.intel.com/content/www/us/en/docs/onemkl/developer-reference-c/2024-2/fourier-transform-functions.html>`_
  * `cuFFT by the NVidia Co. <https://docs.nvidia.com/cuda/cufft/index.html>`_
  * `NFFT by the Chemnitz group <https://www-user.tu-chemnitz.de/~potts/nfft/>`_ for non-equispaced computations 
  
  Users are strongly advised to inspect carefully which specific conventions their library uses
  to enable storing and modifying the implementation of their code such that the serialized
  representations as they are detailed here for NeXus match.
  
  It is often the case that several images are combined using processing. In this case,
  the number of images which are combined in a collection is not necessarily the same
  for each collection. The NXimage_set base class addresses this logical distinction
  through the notation of image_identifier and group_identifier concepts.
  That is image_identifier are always counting from offset in increments of one.
  as each image is its own entity. By contrast, a group may contain no, or several images.
  Consequently, group_identifier are not required to be contiguous.
# for details about NXimage_r_set_diff see
# https://github.com/FAIRmat-NFDI/nexus_definitions/commit/0682943baaef54d4a6386b5433f9721af6d3d81b
# and here contributed_definitions/NXimage_r_set_diff.nxdl.xml
symbols:
  n_img: |
    Number of images in the stack, for stacks the slowest direction.
  n_k: |
    Number of image points along the slow direction (k equivalent to z).
  n_j: |
    Number of image points along the fast direction (j equivalent to y).
  n_i: |
    Number of image points along the fastest direction (i equivalent to x).
type: group
NXimage_set(NXobject):
  (NXprocess):
    doc: |
      Details how NXdata instance were processed from detector readings/raw data.
    source(NXserialized):
      doc: 
      - |
        Resolvable data artifact (e.g. file) from which all values in the :ref:`NXdata`
        instances in this :ref:`NXimage_set` were loaded during parsing.
      - |
        Possibility to document from which specific other serialized resource as the source
        pieces of information were processed when using NeXus as a semantic file format
        to serialize that information differently.
        
        The group in combination with an added field *absolute_path* therein adds context.
      absolute_path(NX_CHAR):
        doc:
        - |
          Reference to a location inside the artifact that points to the specific group of values
          that were processed if the artifacts contains several groups of values and thus
          further resolving of ambiguities is required.
    # mode(NX_CHAR):
    #   doc: |
    #    Imaging (data collection) mode of the instrument during acquisition.
    detector_identifier(NX_CHAR):
      doc: |
        Link or name of an :ref:`NXdetector` instance with which the data were collected.
    (NXprogram):
      doc: |
        Program used for processing.
  space(NX_CHAR):
    doc:
    - |
      The reference space in which the image set is defined.
    enumeration: [real, reciprocal]

  image_oned(NXdata):
    doc: |
      One-dimensional image.
    intensity(NX_NUMBER):
      doc: |
        Intensity for real-valued images as an alternative for real.
        Magnitude of the image intensity for complex-valued data.
      unit: NX_UNITLESS
      dim: (n_i,)
    real(NX_NUMBER):
      doc: |
        Real part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_i,)
    imag(NX_NUMBER):
      doc: |
        Imaginary part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_i,)
    complex(NX_COMPLEX):
      doc: |
        Image intensity as a complex number as an alternative to real and
        imaginary fields if values are stored as interleaved complex numbers.
      unit: NX_UNITLESS
      dim: (n_i,)
    axis_i(NX_NUMBER):
      doc: |
        Point coordinate along the fastest direction.
      unit: NX_LENGTH
      dim: (n_i,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the fastest direction.

  image_twod(NXdata):
    doc: |
      Two-dimensional image.
    intensity(NX_NUMBER):
      doc: |
        Intensity for real-valued images as an alternative for real.
        Magnitude of the image intensity for complex-valued data.
      unit: NX_UNITLESS
      dim: (n_j, n_i)
    real(NX_NUMBER):
      doc: |
        Real part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_j, n_i)
    imag(NX_NUMBER):
      doc: |
        Imaginary part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_j, n_i)
    complex(NX_COMPLEX):
      doc: |
        Image intensity as a complex number as an alternative to real and
        imaginary fields if values are stored as interleaved complex numbers.
      unit: NX_UNITLESS
      dim: (n_j, n_i)
    axis_j(NX_NUMBER):
      doc: |
        Point coordinate along the fast direction.
      unit: NX_LENGTH
      dim: (n_j,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the fast direction.
    axis_i(NX_NUMBER):
      doc: |
        Point coordinate along the fastest direction.
      unit: NX_LENGTH
      dim: (n_i,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the fastest direction.

  image_threed(NXdata):
    doc: |
      Three-dimensional image.
    intensity(NX_NUMBER):
      doc: |
        Intensity for real-valued images as an alternative for real.
        Magnitude of the image intensity for complex-valued data.
      unit: NX_UNITLESS
      dim: (n_k, n_j, n_i)
    real(NX_NUMBER):
      doc: |
        Real part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_k, n_j, n_i)
    imag(NX_NUMBER):
      doc: |
        Imaginary part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_k, n_j, n_i)
    complex(NX_COMPLEX):
      doc: |
        Image intensity as a complex number as an alternative to real and
        imaginary fields if values are stored as interleaved complex numbers.
      unit: NX_UNITLESS
      dim: (n_k, n_j, n_i)
    axis_k(NX_NUMBER):
      doc: |
        Point coordinate along the slow direction.
      unit: NX_LENGTH
      dim: (n_k,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the slow direction.
    axis_j(NX_NUMBER):
      doc: |
        Point coordinate along the fast direction.
      unit: NX_LENGTH
      dim: (n_j,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the fast direction.
    axis_i(NX_NUMBER):
      doc: |
        Point coordinate along the fastest direction.
      unit: NX_LENGTH
      dim: (n_i,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the fastest direction.

  stack_oned(NXdata):
    doc: |
      Collection of one-dimensional images.
    intensity(NX_NUMBER):
      doc: |
        Intensity for real-valued images as an alternative for real.
        Magnitude of the image intensity for complex-valued data.
      unit: NX_UNITLESS
      dim: (n_img, n_i)
    real(NX_NUMBER):
      doc: |
        Real part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_img, n_i)
    imag(NX_NUMBER):
      doc: |
        Imaginary part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_img, n_i)
    complex(NX_COMPLEX):
      doc: |
        Image intensity as a complex number as an alternative to real and
        imaginary fields if values are stored as interleaved complex numbers.
      unit: NX_UNITLESS
      dim: (n_img, n_i)
    group_identifier(NX_INT):
      doc: |
        Group identifier
      unit: NX_UNITLESS
      dim: (n_img,)
      \@long_name(NX_CHAR):
        doc: |
          Group identifier
    image_identifier(NX_INT):
      doc: |
        Image identifier
      unit: NX_UNITLESS
      dim: (n_img,)
      \@long_name(NX_CHAR):
        doc: |
          Image identifier
    axis_i(NX_NUMBER):
      doc: |
        Point coordinate along the fastest direction.
      unit: NX_LENGTH
      dim: (n_i,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the fastest direction.

  stack_twod(NXdata):
    doc: |
      Collection of two-dimensional images.
    intensity(NX_NUMBER):
      doc: |
        Intensity for real-valued images as an alternative for real.
        Magnitude of the image intensity for complex-valued data.
      unit: NX_UNITLESS
      dim: (n_img, n_j, n_i)
    real(NX_NUMBER):
      doc: |
        Real part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_img, n_j, n_i)
    imag(NX_NUMBER):
      doc: |
        Imaginary part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_img, n_j, n_i)
    complex(NX_COMPLEX):
      doc: |
        Image intensity as a complex number as an alternative to real and
        imaginary fields if values are stored as interleaved complex numbers.
      unit: NX_UNITLESS
      dim: (n_img, n_j, n_i)
    group_identifier(NX_INT):
      doc: |
        Group identifier
      unit: NX_UNITLESS
      dim: (n_img,)
      \@long_name(NX_CHAR):
        doc: |
          Group identifier
    image_identifier(NX_INT):
      doc: |
        Image identifier
      unit: NX_UNITLESS
      dim: (n_img,)
      \@long_name(NX_CHAR):
        doc: |
          Image identifier.
    axis_y(NX_NUMBER):
      doc: |
        Point coordinate along the fast direction.
      unit: NX_LENGTH
      dim: (n_j,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the fast direction.
    axis_i(NX_NUMBER):
      doc: |
        Point coordinate along the fastest direction.
      unit: NX_LENGTH
      dim: (n_i,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the fastest direction.

  stack_threed(NXdata):
    doc: |
      Collection of three-dimensional images.
    intensity(NX_NUMBER):
      doc: |
        Intensity for real-valued images as an alternative for real.
        Magnitude of the image intensity for complex-valued data.
      unit: NX_UNITLESS
      dim: (n_img, n_k, n_j, n_i)
    real(NX_NUMBER):
      doc: |
        Real part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_img, n_k, n_j, n_i)
    imag(NX_NUMBER):
      doc: |
        Imaginary part of the image intensity per point.
      unit: NX_UNITLESS
      dim: (n_img, n_k, n_j, n_i)
    complex(NX_COMPLEX):
      doc: |
        Image intensity as a complex number as an alternative to real and
        imaginary fields if values are stored as interleaved complex numbers.
      unit: NX_UNITLESS
      dim: (n_img, n_k, n_j, n_i)
    group_identifier(NX_INT):
      doc: |
        Group identifier
      unit: NX_UNITLESS
      dim: (n_img,)
      \@long_name(NX_CHAR):
        doc: |
          Group identifier
    image_identifier(NX_INT):
      doc: |
        Image identifier
      unit: NX_UNITLESS
      dim: (n_img,)
      \@long_name(NX_CHAR):
        doc: |
          Image identifier
    axis_k(NX_NUMBER):
      doc: |
        Point coordinate along the slow direction.
      unit: NX_LENGTH
      dim: (n_k,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the slow direction.
    axis_j(NX_NUMBER):
      doc: |
        Point coordinate along the fast direction.
      unit: NX_LENGTH
      dim: (n_j,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the fast direction.
    axis_i(NX_NUMBER):
      doc: |
        Point coordinate along the fastest direction.
      unit: NX_LENGTH
      dim: (n_i,)
      \@long_name(NX_CHAR):
        doc: |
          Point coordinate along the fastest direction.
