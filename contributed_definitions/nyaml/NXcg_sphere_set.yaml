category: base
doc: |
  Computational geometry description of a set of spheres in Euclidean space.
  
  Each sphere can have a different radius.
symbols:
  doc: |
    The symbols used in the schema to specify e.g. dimensions of arrays.
  d: |
    The dimensionality, which has to be at least 2.
  c: |
    The cardinality of the set, i.e. the number of circles or spheres.

# redundant as there is NXcsg, and NXquadric but easier to understand
type: group
NXcg_sphere_set(NXobject):
  dimensionality(NX_POSINT):
    unit: NX_UNITLESS
  cardinality(NX_POSINT):
    unit: NX_UNITLESS
  identifier_offset(NX_INT):
    unit: NX_UNITLESS
    doc: |
      Integer which specifies the first index to be used for distinguishing
      identifiers for spheres. Identifiers are defined either implicitly
      or explicitly. For implicit indexing the identifiers are defined on the
      interval [identifier_offset, identifier_offset+c-1].
      For explicit indexing the identifier array has to be defined.
      
      The identifier_offset field can for example be used to communicate if the
      identifiers are expected to start from 1 (referred to as Fortran-/Matlab-)
      or from 0 (referred to as C-, Python-style index notation) respectively.
  identifier(NX_INT):
    unit: NX_UNITLESS
    doc: |
      Integer used to distinguish spheres for explicit indexing.
    dimensions:
      rank: 1
      dim: [[1, c]]
  center(NX_NUMBER):
    unit: NX_LENGTH
    doc: |
      Geometric center of the spheres. This can be the center of mass.
      Dimensionality and cardinality of the point and sphere set have to match.
      The identifier_offset and identifier field of NXcg_point_set do not need
      to be used as they should be same as the identifier_offset and the
      identifier for the spheres.
    dimensions:
      rank: 2
      dim: [[1, c], [2, d]]
  radius(NX_NUMBER):
    unit: NX_LENGTH
    doc: |
      In the case that all spheres have the same radius.
  radii(NX_NUMBER):
    unit: NX_LENGTH
    doc: |
      In the case that spheres have different radius use this
      instead of the radius field.
    dimensions:
      rank: 1
      dim: [[1, c]]
  (NXtransformations):
    doc: |
      Reference to or definition of a coordinate system with
      which the positions and directions are interpretable.
  
  # properties of spheres
  is_closed(NX_BOOLEAN):
    doc: |
      Are the spheres closed or hollow?
    dimensions:
      rank: 1
      dim: [[1, c]]
  volume(NX_NUMBER):
    unit: NX_ANY
    dimensions:
      rank: 1
      dim: [[1, c]]
  surface_area(NX_NUMBER):
    unit: NX_ANY
    dimensions:
      rank: 1
      dim: [[1, c]]

# ++++++++++++++++++++++++++++++++++ SHA HASH ++++++++++++++++++++++++++++++++++
# 8252d8a3382853f5c129870a6ffd8c8c4c79a16da413f1092367ba600a69c6b6
# <?xml version="1.0" encoding="UTF-8"?>
# <?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
# <!--
# # NeXus - Neutron and X-ray Common Data Format
# # 
# # Copyright (C) 2014-2022 NeXus International Advisory Committee (NIAC)
# # 
# # This library is free software; you can redistribute it and/or
# # modify it under the terms of the GNU Lesser General Public
# # License as published by the Free Software Foundation; either
# # version 3 of the License, or (at your option) any later version.
# #
# # This library is distributed in the hope that it will be useful,
# # but WITHOUT ANY WARRANTY; without even the implied warranty of
# # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# # Lesser General Public License for more details.
# #
# # You should have received a copy of the GNU Lesser General Public
# # License along with this library; if not, write to the Free Software
# # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# #
# # For further information, see http://www.nexusformat.org
# -->
# <!--redundant as there is NXcsg, and NXquadric but easier to understand-->
# <definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" name="NXcg_sphere_set" extends="NXobject" type="group" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
#     <symbols>
#         <doc>
#              The symbols used in the schema to specify e.g. dimensions of arrays.
#         </doc>
#         <symbol name="d">
#             <doc>
#                  The dimensionality, which has to be at least 2.
#             </doc>
#         </symbol>
#         <symbol name="c">
#             <doc>
#                  The cardinality of the set, i.e. the number of circles or spheres.
#             </doc>
#         </symbol>
#     </symbols>
#     <doc>
#          Computational geometry description of a set of spheres in Euclidean space.
#          
#          Each sphere can have a different radius.
#     </doc>
#     <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
#     <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
#     <field name="identifier_offset" type="NX_INT" units="NX_UNITLESS">
#         <doc>
#              Integer which specifies the first index to be used for distinguishing
#              identifiers for spheres. Identifiers are defined either implicitly
#              or explicitly. For implicit indexing the identifiers are defined on the
#              interval [identifier_offset, identifier_offset+c-1].
#              For explicit indexing the identifier array has to be defined.
#              
#              The identifier_offset field can for example be used to communicate if the
#              identifiers are expected to start from 1 (referred to as Fortran-/Matlab-)
#              or from 0 (referred to as C-, Python-style index notation) respectively.
#         </doc>
#     </field>
#     <field name="identifier" type="NX_INT" units="NX_UNITLESS">
#         <doc>
#              Integer used to distinguish spheres for explicit indexing.
#         </doc>
#         <dimensions rank="1">
#             <dim index="1" value="c"/>
#         </dimensions>
#     </field>
#     <field name="center" type="NX_NUMBER" units="NX_LENGTH">
#         <doc>
#              Geometric center of the spheres. This can be the center of mass.
#              Dimensionality and cardinality of the point and sphere set have to match.
#              The identifier_offset and identifier field of NXcg_point_set do not need
#              to be used as they should be same as the identifier_offset and the
#              identifier for the spheres.
#         </doc>
#         <dimensions rank="2">
#             <dim index="1" value="c"/>
#             <dim index="2" value="d"/>
#         </dimensions>
#     </field>
#     <field name="radius" type="NX_NUMBER" units="NX_LENGTH">
#         <doc>
#              In the case that all spheres have the same radius.
#         </doc>
#     </field>
#     <field name="radii" type="NX_NUMBER" units="NX_LENGTH">
#         <doc>
#              In the case that spheres have different radius use this
#              instead of the radius field.
#         </doc>
#         <dimensions rank="1">
#             <dim index="1" value="c"/>
#         </dimensions>
#     </field>
#     <group type="NXtransformations">
#         <doc>
#              Reference to or definition of a coordinate system with
#              which the positions and directions are interpretable.
#         </doc>
#     </group>
#     <!--properties of spheres-->
#     <field name="is_closed" type="NX_BOOLEAN">
#         <doc>
#              Are the spheres closed or hollow?
#         </doc>
#         <dimensions rank="1">
#             <dim index="1" value="c"/>
#         </dimensions>
#     </field>
#     <field name="volume" type="NX_NUMBER" units="NX_ANY">
#         <dimensions rank="1">
#             <dim index="1" value="c"/>
#         </dimensions>
#     </field>
#     <field name="surface_area" type="NX_NUMBER" units="NX_ANY">
#         <dimensions rank="1">
#             <dim index="1" value="c"/>
#         </dimensions>
#     </field>
# </definition>
