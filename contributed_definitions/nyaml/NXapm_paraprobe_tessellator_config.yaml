category: application
doc: |
  Application definition for a configuration file of the paraprobe-tessellator tool.
  
  This tool is part of the paraprobe-toolbox. Inspect :ref:`NXapm_paraprobe_tool_config` for details.

# n_control_points: The number of control points for tessellating regions instead of tessellating the volume about ion positions.
# an example for limited conditions in NeXus
# if windowing_method is entire_dataset: no constraint on existence of NXcg and NXcs instances
# if windowing_method is union_of_primitives: sum of cardinality of NXcg >= 0
# if windowing_method is bitmasked_points: sum cardinality of NXcg := 0 and cardinality of NXcs_filter_boolean_mask == 1
type: group
NXapm_paraprobe_tessellator_config(NXobject):
  (NXentry):
    exists: ['min', '1', 'max', '1']
    definition(NX_CHAR):
      \@version(NX_CHAR):
      enumeration: [NXapm_paraprobe_tessellator_config]
    tessellate(NXapm_paraprobe_tool_config):
      exists: ['min', '1', 'max', '1']
      (NXidentifier):
        exists: optional
      analysis_identifier(NX_UINT):
        exists: recommended
      reconstruction(NXserialized):
        type(NX_CHAR):
        path(NX_CHAR):
        checksum(NX_CHAR):
        algorithm(NX_CHAR):
        position(NX_CHAR):
        mass_to_charge(NX_CHAR):
      ranging(NXserialized):
        type(NX_CHAR):
        path(NX_CHAR):
        checksum(NX_CHAR):
        algorithm(NX_CHAR):
        ranging_definitions(NX_CHAR):
      surface_distance(NXserialized):
        exists: optional
        type(NX_CHAR):
        path(NX_CHAR):
        checksum(NX_CHAR):
        algorithm(NX_CHAR):
        distance(NX_CHAR):
      spatial_filter(NXspatial_filter):
        windowing_method(NX_CHAR):
        hexahedron_set(NXcg_hexahedron_set):
          exists: optional
          dimensionality(NX_POSINT):
          cardinality(NX_POSINT):
          identifier_offset(NX_INT):
          hexahedra(NXcg_face_list_data_structure):
            vertices(NX_UINT):
        cylinder_set(NXcg_cylinder_set):
          exists: optional
          dimensionality(NX_POSINT):
          cardinality(NX_POSINT):
          identifier_offset(NX_INT):
          center(NX_NUMBER):
          height(NX_NUMBER):
          radii(NX_NUMBER):
        ellipsoid_set(NXcg_ellipsoid_set):
          exists: optional
          dimensionality(NX_POSINT):
          cardinality(NX_POSINT):
          identifier_offset(NX_INT):
          center(NX_NUMBER):
          half_axes_radii(NX_NUMBER):
          orientation(NX_NUMBER):
        polyhedron_set(NXcg_polyhedron_set):
          exists: optional
        
        # TODO
        bitmask(NXcs_filter_boolean_mask):
          exists: optional
          number_of_objects(NX_UINT):
          bitdepth(NX_UINT):
          mask(NX_UINT):
          
          # leave open if scalar or matrix
          # dim: (i,)
          identifier(NX_UINT):
      evaporation_id_filter(NXsubsampling_filter):
        exists: optional
        min_incr_max(NX_INT):
      iontype_filter(NXmatch_filter):
        exists: optional
        method(NX_CHAR):
        match(NX_NUMBER):
      hit_multiplicity_filter(NXmatch_filter):
        exists: optional
        method(NX_CHAR):
        match(NX_NUMBER):
      
      # config
      method(NX_CHAR):
        doc: |
          The method used to compute the tessellation.
          The value *default* configures the computation of the Voronoi tessellation.
        
        # check versions prior paraprobe-toolbox v0.5 for control_point-based method
        enumeration: [default]
      has_cell_volume(NX_BOOLEAN):
        doc: |
          Specifies if the tool should report the volume of each cell.
      has_cell_neighbors(NX_BOOLEAN):
        doc: |
          Specifies if the tool should report the first-order neighbors of each cell.
      has_cell_geometry(NX_BOOLEAN):
        doc: |
          Specifies if the tool should report the facets and vertices of each cell.
      has_cell_edge_detection(NX_BOOLEAN):
        doc: |
          Specifies if the tool should report for each cell if it makes contact with
          the tight axis-aligned bounding box about the point cloud.
          This can be used to identify if the shape of the cell is likely affected
          by the edge of the dataset or if cells are deeply enough embedded
          into the point cloud so that the shape of their cells are not affected
          anymore by the boundary. This is valuable information to judge
          about the significance of finite size effects.
    
    # erosion_distance(NX_FLOAT):
    # doc: |
    # Maximum distance for which cells are eroded.
    # unit: NX_LENGTH
    # \@units: nm
    # minValue: EPSILON
    common(NXapm_paraprobe_tool_common):
      status(NX_CHAR):
      programID(NXprogram):
        exists: ['min', '1', 'max', 'unbounded']
        program(NX_CHAR):
          \@version(NX_CHAR):
      profiling(NXcs_profiling):
        exists: recommended
        start_time(NX_DATE_TIME):
        end_time(NX_DATE_TIME):
        total_elapsed_time(NX_FLOAT):
        current_working_directory(NX_CHAR):

# ++++++++++++++++++++++++++++++++++ SHA HASH ++++++++++++++++++++++++++++++++++
# f4c3408502cdbbe6c23210bf7267d29bf1583f8e6c355e8c2b649c6aaf34596e
# <?xml version='1.0' encoding='UTF-8'?>
# <?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
# <!--
# # NeXus - Neutron and X-ray Common Data Format
# #
# # Copyright (C) 2014-2024 NeXus International Advisory Committee (NIAC)
# #
# # This library is free software; you can redistribute it and/or
# # modify it under the terms of the GNU Lesser General Public
# # License as published by the Free Software Foundation; either
# # version 3 of the License, or (at your option) any later version.
# #
# # This library is distributed in the hope that it will be useful,
# # but WITHOUT ANY WARRANTY; without even the implied warranty of
# # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# # Lesser General Public License for more details.
# #
# # You should have received a copy of the GNU Lesser General Public
# # License along with this library; if not, write to the Free Software
# # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# #
# # For further information, see http://www.nexusformat.org
# -->
# <!--
# n_control_points: The number of control points for tessellating regions instead of tessellating the volume about ion positions.
# an example for limited conditions in NeXus
# if windowing_method is entire_dataset: no constraint on existence of NXcg and NXcs instances
# if windowing_method is union_of_primitives: sum of cardinality of NXcg >= 0
# if windowing_method is bitmasked_points: sum cardinality of NXcg := 0 and cardinality of NXcs_filter_boolean_mask == 1-->
# <definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="application" type="group" name="NXapm_paraprobe_tessellator_config" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
#     <doc>
#          Application definition for a configuration file of the paraprobe-tessellator tool.
#          
#          This tool is part of the paraprobe-toolbox. Inspect :ref:`NXapm_paraprobe_tool_config` for details.
#     </doc>
#     <group type="NXentry" minOccurs="1" maxOccurs="1">
#         <field name="definition" type="NX_CHAR">
#             <attribute name="version" type="NX_CHAR"/>
#             <enumeration>
#                 <item value="NXapm_paraprobe_tessellator_config"/>
#             </enumeration>
#         </field>
#         <group name="tessellate" type="NXapm_paraprobe_tool_config" minOccurs="1" maxOccurs="1">
#             <group type="NXidentifier" optional="true"/>
#             <field name="analysis_identifier" type="NX_UINT" recommended="true"/>
#             <group name="reconstruction" type="NXserialized">
#                 <field name="type" type="NX_CHAR"/>
#                 <field name="path" type="NX_CHAR"/>
#                 <field name="checksum" type="NX_CHAR"/>
#                 <field name="algorithm" type="NX_CHAR"/>
#                 <field name="position" type="NX_CHAR"/>
#                 <field name="mass_to_charge" type="NX_CHAR"/>
#             </group>
#             <group name="ranging" type="NXserialized">
#                 <field name="type" type="NX_CHAR"/>
#                 <field name="path" type="NX_CHAR"/>
#                 <field name="checksum" type="NX_CHAR"/>
#                 <field name="algorithm" type="NX_CHAR"/>
#                 <field name="ranging_definitions" type="NX_CHAR"/>
#             </group>
#             <group name="surface_distance" type="NXserialized" optional="true">
#                 <field name="type" type="NX_CHAR"/>
#                 <field name="path" type="NX_CHAR"/>
#                 <field name="checksum" type="NX_CHAR"/>
#                 <field name="algorithm" type="NX_CHAR"/>
#                 <field name="distance" type="NX_CHAR"/>
#             </group>
#             <group name="spatial_filter" type="NXspatial_filter">
#                 <field name="windowing_method" type="NX_CHAR"/>
#                 <group name="hexahedron_set" type="NXcg_hexahedron_set" optional="true">
#                     <field name="dimensionality" type="NX_POSINT"/>
#                     <field name="cardinality" type="NX_POSINT"/>
#                     <field name="identifier_offset" type="NX_INT"/>
#                     <group name="hexahedra" type="NXcg_face_list_data_structure">
#                         <field name="vertices" type="NX_UINT"/>
#                     </group>
#                 </group>
#                 <group name="cylinder_set" type="NXcg_cylinder_set" optional="true">
#                     <field name="dimensionality" type="NX_POSINT"/>
#                     <field name="cardinality" type="NX_POSINT"/>
#                     <field name="identifier_offset" type="NX_INT"/>
#                     <field name="center" type="NX_NUMBER"/>
#                     <field name="height" type="NX_NUMBER"/>
#                     <field name="radii" type="NX_NUMBER"/>
#                 </group>
#                 <group name="ellipsoid_set" type="NXcg_ellipsoid_set" optional="true">
#                     <field name="dimensionality" type="NX_POSINT"/>
#                     <field name="cardinality" type="NX_POSINT"/>
#                     <field name="identifier_offset" type="NX_INT"/>
#                     <field name="center" type="NX_NUMBER"/>
#                     <field name="half_axes_radii" type="NX_NUMBER"/>
#                     <field name="orientation" type="NX_NUMBER"/>
#                 </group>
#                 <group name="polyhedron_set" type="NXcg_polyhedron_set" optional="true"/>
#                 <!--TODO-->
#                 <group name="bitmask" type="NXcs_filter_boolean_mask" optional="true">
#                     <field name="number_of_objects" type="NX_UINT"/>
#                     <field name="bitdepth" type="NX_UINT"/>
#                     <field name="mask" type="NX_UINT"/>
#                     <!--leave open if scalar or matrix
#   dim: (i,)-->
#                     <field name="identifier" type="NX_UINT"/>
#                 </group>
#             </group>
#             <group name="evaporation_id_filter" type="NXsubsampling_filter" optional="true">
#                 <field name="min_incr_max" type="NX_INT"/>
#             </group>
#             <group name="iontype_filter" type="NXmatch_filter" optional="true">
#                 <field name="method" type="NX_CHAR"/>
#                 <field name="match" type="NX_NUMBER"/>
#             </group>
#             <group name="hit_multiplicity_filter" type="NXmatch_filter" optional="true">
#                 <field name="method" type="NX_CHAR"/>
#                 <field name="match" type="NX_NUMBER"/>
#             </group>
#             <!--config-->
#             <field name="method" type="NX_CHAR">
#                 <doc>
#                      The method used to compute the tessellation.
#                      The value *default* configures the computation of the Voronoi tessellation.
#                 </doc>
#                 <!--check versions prior paraprobe-toolbox v0.5 for control_point-based method-->
#                 <enumeration>
#                     <item value="default"/>
#                 </enumeration>
#             </field>
#             <field name="has_cell_volume" type="NX_BOOLEAN">
#                 <doc>
#                      Specifies if the tool should report the volume of each cell.
#                 </doc>
#             </field>
#             <field name="has_cell_neighbors" type="NX_BOOLEAN">
#                 <doc>
#                      Specifies if the tool should report the first-order neighbors of each cell.
#                 </doc>
#             </field>
#             <field name="has_cell_geometry" type="NX_BOOLEAN">
#                 <doc>
#                      Specifies if the tool should report the facets and vertices of each cell.
#                 </doc>
#             </field>
#             <field name="has_cell_edge_detection" type="NX_BOOLEAN">
#                 <doc>
#                      Specifies if the tool should report for each cell if it makes contact with
#                      the tight axis-aligned bounding box about the point cloud.
#                      This can be used to identify if the shape of the cell is likely affected
#                      by the edge of the dataset or if cells are deeply enough embedded
#                      into the point cloud so that the shape of their cells are not affected
#                      anymore by the boundary. This is valuable information to judge
#                      about the significance of finite size effects.
#                 </doc>
#             </field>
#         </group>
#         <!--erosion_distance(NX_FLOAT):
#   doc: |
#     Maximum distance for which cells are eroded.
#   unit: NX_LENGTH
#   \@units: nm
#   minValue: EPSILON-->
#         <group name="common" type="NXapm_paraprobe_tool_common">
#             <field name="status" type="NX_CHAR"/>
#             <group name="programID" type="NXprogram" minOccurs="1" maxOccurs="unbounded">
#                 <field name="program" type="NX_CHAR">
#                     <attribute name="version" type="NX_CHAR"/>
#                 </field>
#             </group>
#             <group name="profiling" type="NXcs_profiling" recommended="true">
#                 <field name="start_time" type="NX_DATE_TIME"/>
#                 <field name="end_time" type="NX_DATE_TIME"/>
#                 <field name="total_elapsed_time" type="NX_FLOAT"/>
#                 <field name="current_working_directory" type="NX_CHAR"/>
#             </group>
#         </group>
#     </group>
# </definition>
