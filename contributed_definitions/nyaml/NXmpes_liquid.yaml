#Pincelli, Rettig, Arora at fhi-berlin.mpg.de, Dobener at hu-berlin.de, 06/2022
#Draft version of a NeXus application definition for photoemission,
#It is designed to be extended by other application definitions
#with higher granularity in the data description.

doc: This is the application definition for multidimensional photoelectron spectroscopy on liquids
category: application 
NXmpes_liquid(NXmpes):
  (NXentry):
    \@entry(NX_CHAR):
      doc: "NeXus convention is to use “entry1”, “entry2”, for analysis software to locate each entry."
    \@default(NX_CHAR):
      exists: optional
      doc: "Default path for data display."
    title(NX_CHAR):
    entry_identifier(NX_CHAR):
      exists: recommended
    start_time(NX_DATE_TIME):
      doc: "ISO8601 formatted Datetime of the start of the measurement."
    end_time(NX_DATE_TIME):
      exists: recommended
      doc: "ISO8601 formatted Datetime of the end of the measurement."
    definition:
      \@version(NX_CHAR):
      enumeration: ["NXmpes_liquid"]
    (NXinstrument):
      energy_resolution(NX_FLOAT):
      (NXsource):
        doc: "The source used to generate the primary photons. Properties refer strictly to parameters of the source, not of the output beam. For example, the energy of the source is not the optical power of the beam, but the energy of the electron beam in a synchrotron and so on."
        type(NX_CHAR):
          enumeration: [
            "Synchrotron X-ray Source",
            "Rotating Anode X-ray", 
            "Fixed Tube X-ray",
            "UV Laser", 
            "Free-Electron Laser", 
            "Optical Laser", 
            "UV Plasma Source", 
            "Metal Jet X-ray", 
            "HHG laser",
          ]
        name(NX_CHAR):
        probe(NX_CHAR):
          doc: "Type of probe. In photoemission it's always photons, so the full NIAC list is restricted."
          enumeration: ["x-ray","ultraviolet", "visible light"]
      (NXbeam): 
        distance(NX_NUMBER):
          doc: "Distance of the point of evaluation of the beam from the sample surface."
        incident_energy(NX_FLOAT):
          unit: NX_ENERGY
          doc: "In the case of a monchromatic beam this is the scalar energy. Several other use cases are permitted, depending on the presence of other incident_energy_X fields. In the case of a polychromatic beam this is an array of length m of energies, with the relative weights in incident_energy_weights. In the case of a monochromatic beam that varies shot-to-shot, this is an array of energies, one for each recorded shot. Here, incident_energy_weights and incident_energy_spread are not set. In the case of a polychromatic beam that varies shot-to-shot, this is an array of length m with the relative weights in incident_energy_weights as a 2D array. In the case of a polychromatic beam that varies shot-to-shot and where the channels also vary, this is a 2D array of dimensions nP by m (slow to fast) with the relative weights in incident_energy_weights as a 2D array. Note, variants are a good way to represent several of these use cases in a single dataset, e.g. if a calibrated, single-value energy value is available along with the original spectrum from which it was calibrated."
        incident_energy_spread(NX_NUMBER):
          exists: recommended
          unit: NX_ENERGY
          doc: "The energy spread FWHM for the corresponding energy(ies) in incident_energy. In the case of shot-to-shot variation in the energy spread, this is a 2D array of dimension nP by m (slow to fast) of the spreads of the corresponding energy in incident_energy."
        incident_polarization(NX_NUMBER):
          exists: recommended
          doc: "Incident polarization specified as a Stokes vector."
          \@units(NX_CHAR):
            doc: "The units for this observable are not included in the NIAC list. Responsibility on correct formatting and parsing is handed to the user by using ‘NX_ANY’. Correct parsing can still be implemented by using this attribute. Fill with: The unit unidata symbol if the unit has one (Example: ‘T’ for the unit of magnetic flux density tesla). The unit unidata name if the unit has a name (Example: ‘farad’ for capacitance). A string describing the units according to unidata unit operation notation, if the unit is a complex combination of named units and does not have a name. Example: for lightsource brilliance (SI) ‘1/(s.mm2.mrad2)’. Here: SI units are ‘V2/m2’."
      (NXelectronanalyser):
        description(NX_CHAR):
          doc: "Free text description of the type of detector."
        energy_resolution(NX_FLOAT):
          doc: "Energy resolution of the analyser with the current setting. May be linked from a NXcalibration."
        fast_axes(NX_CHAR):
          exists: optional
          doc: "List of the axes that are acquired symultaneously by the detector. These refer only to the experimental variables recorded by the electron analyser. Other variables such as temperature, manipulator angles etc. are labeled as fast or slow in the data. Examples: Hemispherical in ARPES mode: fast_axes: [energy,kx] Hemispherical with channeltron, sweeping energy mode: slow_axes: [energy] Tof: fast_axes: [energy, kx, ky] Momentum microscope, spin-resolved: fast_axes: [energy, kx, ky] slow_axes: [spin up-down, spin left-right] axes can be less abstract than this, i.e. [detector_x, detector_y] If energy_scan_mode=sweep, fast_axes: [energy, kx]; slow_axes: [energy] is allowed."
        slow_axes(NX_CHAR):
          exists: optional
          doc: "List of the axes that are acquired by scanning a physical parameter, listed in order of decreasing speed. See fast_axes for examples."
        (NXcollectioncolumn):
          scheme(NX_CHAR):
            doc: "Scheme of the electron collection column."
            enumeration: [
              "Standard", 
              "Angular dispersive", 
              "Selective area",
              "Deflector", 
              "PEEM", 
              "Momentum Microscope",
            ]
          mode(NX_CHAR):
            exists: recommended
            doc: "Labelling of the lens setting in use."
          projection(NX_CHAR):
            exists: recommended
            doc: "The space projected in the angularly dispersive directions, i.e. real or reciprocal."
            enumeration: [
              "real", 
              "reciprocal",
            ]
          (NXtransformations):
            exists: optional
            doc: "Direction of lens axis of analyzer."
            rot_x(NX_NUMBER):
              \@depends_on(NX_CHAR):
                doc: "Is '.', since beam axis is assumed to be horizontal (perpendicular to gravity)."
              \@transformation_type(NX_CHAR):
                enumeration: ["rotation"]
              \@units: NX_ANGLE
              \@vector(NX_NUMBER):
            rot_y(NX_NUMBER):
              \@depends_on(NX_CHAR):
                doc: "Link to /NXentry/NXinstrument/NXelectronanalyser/NXcollectioncolumn/NXtransformations/rot_x"
              \@transformation_type(NX_CHAR):
                enumeration: ["rotation"]
              \@units: NX_ANGLE
              \@vector(NX_NUMBER):
            rot_z(NX_NUMBER):
              \@depends_on(NX_CHAR):
                doc: "Link to /NXentry/NXinstrument/NXelectronanalyser/NXcollectioncolumn/NXtransformations/rot_y."
              \@transformation_type(NX_CHAR):
                enumeration: ["rotation"]
              \@units: NX_ANGLE
              \@vector(NX_NUMBER): 
            trans_z(NX_NUMBER):
              doc: "Same as working_distance."
              \@depends_on(NX_CHAR):
                doc: "Link to /NXentry/NXinstrument/NXelectronanalyser/NXcollectioncolumn/NXtransformations/rot_z."
              \@transformation_type(NX_CHAR):
                enumeration: ["translation"]
              \@units: NX_LENGTH
              \@vector(NX_NUMBER):
        (NXenergydispersion):
          scheme(NX_CHAR):
            enumeration:
              [
                "tof",
                "hemispherical",
                "double hemispherical",
                "cylindrical mirror",
                "display mirror",
                "retarding grid",
              ]
          pass_energy(NX_FLOAT):
            unit: NX_ENERGY
            doc: "Energy of the electrons on the mean path of the analyser. Pass energy for hemispherics, drift energy for tofs."
          energy_scan_mode(NX_CHAR):
            doc: "Way of scanning the energy axis (fixed or sweep)."
            enumeration:
              ["fixed","sweep",]
          (NXaperture):
            exists: recommended
            doc: "Aperture generating the momentum and/or energy filtering."
            description(NX_CHAR):
              doc: "Type of aperture inserted in the beam."
              enumeration:
                [
                  "slit",
                  "pinhole",
                  "iris",
                ]
            shape(NX_CHAR):
              doc: "Description of the shape of the active part of the aperture, curved or straight for horizontal slits, square or round for pinhole etc."
              enumeration:
                [
                  "curved",
                  "straight",
                  "circle",
                  "square",
                  "hexagon",
                  "octagon",
                  "bladed",
                ]
              pass_energy(NX_FLOAT):
                unit: NX_LENGTH
                doc: "The relevant dimension for the aperture (slit width, pinhole diameter etc)."
        (NXdetector):
          amplifier_type(NX_CHAR):
            exists: recommended
            doc: "Type of electron amplifier in the first amplification step."
            enumeration: ["MCP", "channeltron"]
          detector_type(NX_CHAR):
            doc: "Description of the detector type."
            enumeration:
              [
                "DLD",
                "Phosphor+CCD",
                "Phosphor+CMOS",
                "ECMOS",
                "Anode",
                "Multi-anode",
              ]
          (NXdata): # Raw signal without calibrated axes.
            exists: recommended
            \@signal(NX_CHAR):
              enumeration: ['raw']
            raw(NX_NUMBER): # There is a block of numbers named raw.
              doc: "Raw data before calibration."
          (NXtransformations):
            exists: optional
            doc: "Direction of the hemisphere of an HEA. Points towards the detector from the entrance slit."
            rot_x(NX_NUMBER):
              \@depends_on(NX_CHAR):
                doc: "Is '.', since beam axis is assumed to be horizontal (perpendicular to gravity)."
              \@transformation_type(NX_CHAR):
                enumeration: ["rotation"]
              \@units: NX_ANGLE
              \@vector(NX_NUMBER):
            rot_y(NX_NUMBER):
              \@depends_on(NX_CHAR):
                doc: "Link to /NXentry/NXinstrument/NXelectronanalyser/NXdetector/NXtransformations/rot_x"
              \@transformation_type(NX_CHAR):
                enumeration: ["rotation"]
              \@units: NX_ANGLE
              \@vector(NX_NUMBER):
            rot_z(NX_NUMBER):
              \@depends_on(NX_CHAR):
                doc: "Link to /NXentry/NXinstrument/NXelectronanalyser/NXdetector/NXtransformations/rot_y."
              \@transformation_type(NX_CHAR):
                enumeration: ["rotation"]
              \@units: NX_ANGLE
              \@vector(NX_NUMBER):
        (NXtransformations):
          exists: optional
          doc: "Transformations describing base geometry in the experiment. Usually defaults to the beam in z direction and gravity in -y direction."
          gravity_axis(NX_NUMBER):
            doc: "Direction of gravity."
            \@vector(NX_NUMBER):
              doc: "The vector in the direction of gravity."
            \@depends_on(NX_CHAR):
              enumeration: ["."]
          beam_axis(NX_NUMBER):
            doc: "Direction of the photon beam."
            \@vector(NX_NUMBER):
              doc: "The vector of the photon-beam direction into the chamber after the last optical element (or directly from the source if there are no optical elements)."
            \@depends_on(NX_CHAR):
              enumeration: ["."]
    (NXprocess):
        doc: "Document an event of data processing, reconstruction, or analysis for this data. Describe the appropriate axis calibrations for your experiment using one or more of the following NXcalibrations"
        energy_calibration(NXcalibration):
          applied(NX_BOOLEAN):
            doc: "Has an energy calibration been applied?"
          calibrated_axis(NX_FLOAT):
            exists: recommended
            doc: "This is the calibrated energy axis to be used for data plotting."
    (NXsample):
      name(NX_CHAR):
      description(NX_CHAR):
        exists: recommended
      chemical_formula(NX_CHAR):
        exists: optional
        doc: "The chemical formula of the sample. For mixtures use the NXsample_component group in NXsample instead."
      preparation_date(NX_DATE_TIME):
        exists: recommended
        doc: "Date of preparation of the sample for the XPS experiment."
      preparation_description(NXnote):
        doc: "Description of the sample preparation setups, used chemicals, treatment etc. Ideally, a full report of the previous operations, in any format(NXnote allows to add pictures, audio, movies). Alternatively, a reference to the location or a unique identifier or other metadata file. In the case these are not available, free-text description."
      temperature(NX_FLOAT):
        unit: NX_TEMPERATURE
        doc: "In the case of a fixed temperature measurement this is the scalar temperature of the sample. In the case of an experiment in which the temperature is changed and recoded, this is an array of length m of temperatures."
      situation(NX_CHAR): 
        enumeration:
          [
          "vacuum",
          "inert atmosphere",
          "oxidising atmosphere",
          "reducing atmosphere",
          ]
      gas_pressure(NX_FLOAT):
        unit: NX_PRESSURE
        doc: "In the case of a fixed pressure measurement this is the scalar pressure. In the case of an experiment in which pressure changes, or anyway it is recorded, this is an array of length m of pressures."
      electric_field(NX_FLOAT):
        exists: recommended
        unit: NX_VOLTAGE
        doc: "Electric field applied to the sample with respect to ground / the system, e.g., via biasing."
      thickness(NX_FLOAT):
        exists: recommended
        unit: NX_LENGTH
        doc: "Thickness of the sample in normal direction to the surface that is probed, e.g., diameter of capillary (round jets) or thickness of the leaf (flat jets)."
      type(NX_CHAR):
        exists: optional
        enumeration:
          [
          "sample",
          "sample+can",
          "can",
          "sample+buffer",
          "buffer",
          "calibration sample",
          "normalisation sample",
          "simulated data",
          "none",
          "sample environment",
          ]
      flow_rate(NX_FLOAT):
        exists: recommended
        unit: NX_VOLUME / NX_TIME
        doc: "Flow rate of the liquid into the chamber, i.e., throught the microjet capillary (or in case of a flat jet: both capillaries)."
      shape(NX_CHAR):
        enumeration: ["round", "flat",]
      nozzle_material(NX_CHAR):
        exists: recommended
        doc: "Material the microjet nozzle is made of (users are encouraged to expand on that in group preparation_description)."
      (NXtransformations):
        exists: recommended
        doc: "Transformations describing the transformation chain of the liquid jet flow direction and optionally the flat jet normal. The vector of the major flow direction of the liquid jet from the injection into the chamber. Along the cylinder axis for single, cylidrical jets, and parallel to the leaf plane for flatjets."
        rot_x(NX_NUMBER):
          \@depends_on(NX_CHAR):
            doc: "Is '.', since beam axis is assumed to be horizontal (perpendicular to gravity)."
          \@transformation_type(NX_CHAR):
            enumeration: ["rotation"]
          \@units: NX_ANGLE
          \@vector(NX_NUMBER):
        rot_y(NX_NUMBER):
          \@depends_on(NX_CHAR):
            doc: "Link to /NXentry/NXsample/rot_x"
          \@transformation_type(NX_CHAR):
            enumeration: ["rotation"]
          \@units: NX_ANGLE
          \@vector(NX_NUMBER):
        rot_z(NX_NUMBER):
          \@depends_on(NX_CHAR):
            doc: "Link to /NXentry/NXsample/rot_y."
          \@transformation_type(NX_CHAR):
            enumeration: ["rotation"]
          \@units: NX_ANGLE
          \@vector(NX_NUMBER):
        leaf_normal(NXtransformations):
          exists: optional
          doc: "Direction of surface normal vector of the first leaf on the side of solvent #1."
          rotation_theta(NX_NUMBER):
            doc: "Direction of surface normal vector of the first leaf on the side of solvent #1. Defaults to be parallel to detection direction."
            \@depends_on(NX_CHAR):
              doc: "Link to /NXentry/NXinstrument/NXelectronanalyser/NXcollectioncolumn/NXtransformations/rot_z."
            \@transformation_type(NX_CHAR):
              enumeration: ["rotation"]
            \@units: NX_ANGLE
            \@vector(NX_NUMBER):
              doc: "Base vector is the liquid jet flow direction."
      SOLVENT(NXsample_component):
        doc: "Solvent substance of the liquid jet. This also accounts for multiple jets if more than one solvent is given."
        description(NX_CHAR):
          exists: recommended
        name(NX_CHAR):
        chemical_formula(NX_CHAR):
          doc: "Molecular or structural formula of the solvent."
        chem_id_cas(NX_CHAR):
          exists: recommended
        ph_value(NX_FLOAT):
          exists: optional
          unit: NX_UNITLESS
          doc: "Measured pH value of the solution."
        ph_adjustment(NX_BOOLEAN):
          exists: optional
          doc: "Whether or not agents for pH adjustment were added to the solution. In this case, users are encouraged to expand on that in preparation_description."
        mol_fraction(NX_FLOAT):
          exists: optional
          unit: 1 / NX_VOLUME
          doc: "Molarity of the solvent in the solution."
      SOLUTE(NXsample_component):
        doc: "Solute substance solved in a given solvent. This also accounts for multiple solutes if more than one is given."
        description(NX_CHAR):
          exists: recommended
        name(NX_CHAR):
        chemical_formula(NX_CHAR):
          doc: "Molecular or structural formula of the solute."
        chem_id_cas(NX_CHAR):
          exists: recommended
        mol_fraction(NX_FLOAT):
          exists: recommended
          unit: 1 / NX_VOLUME
          doc: "Molarity of the solute in the solution."
        solvent(NX_CHAR):
          doc: "Specifies the parent solvent entry of the solution."
    (NXdata):
      \@signal(NX_CHAR):
        enumeration: ["data"]
      \@axes(NX_CHAR):
        enumeration: ["energy"]
      data(NX_NUMBER):
        \@units(NX_CHAR):
          exists: recommended
        \@long_name(NX_CHAR):
          exists: optional
        doc: "Processed plottable data."
      energy(NX_NUMBER):
        \@units(NX_CHAR):
          exists: recommended
        \@long_name(NX_CHAR):
          exists: optional
        doc: "Data containing the energy axis."