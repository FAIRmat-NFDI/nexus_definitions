category: application
doc: |
  Application definition for normalized representation of electron microscopy research.
  
  This application definition is a comprehensive example for a general description
  with which to normalize specific pieces of information and data collected within
  electron microscopy research.
  
  NXem is designed to be used for documenting experiments or computer simulations in which
  controlled electron beams are used for studying electron-beam matter interaction to explore
  physical mechanisms and phenomena, or to characterize materials with an electron microscope.
type: group
NXem(NXobject):
  # \@NX_class:
  # \@file_time(NX_DATE_TIME):
  # \@file_name(NX_CHAR):
  # \@file_update_time(NX_DATE_TIME):
  # \@NeXus_version(NX_CHAR):
  # \@HDF5_Version(NX_CHAR):
  # \@h5py_version(NX_CHAR):
  # \@default(NX_CHAR):
  # starting to reorganize the docstrings, as a list of blocks:
  # -| req: first part, concept definition, human-readable but such that one could take as is to define an concept in OWL
  # -| opt: second part, comment, i.e. information that in an ideal world would be ideal if represented strongly semantic
  #    but for practical purposes currently is interpretable only by human to provide them further contextualization
  # -| recommended: xref part (ideally also as a list of triple (spec, term, url to uri)
  (NXentry):  # means ENTRY(NXentry)
    exists: [min, 1, max, infty]
    definition(NX_CHAR):
      \@version(NX_CHAR):
        exists: optional
      enumeration: [NXem]
    profiling(NXcs_profiling):
      exists: optional
      doc: |
        The configuration of the I/O writer software (e.g. `pynxtools <https://github.com/FAIRmat-NFDI/pynxtools>`_ or its plugins)
        which was used to generate this NeXus file instance.
      programID(NXprogram):  # program1, program2
        doc:
        - |
          A collection of all programs and libraries that are considered as relevant
          to understand with which software tools this NeXus file instance was
          generated. Ideally, to enable a binary recreation from the input data.
        - |
          Examples include the name and version of the libraries used to write the
          instance. Ideally, the software which writes these NXprogram instances
          also includes the version of the set of NeXus classes i.e. the specific
          set of base classes, application definitions, and  contributed definitions
          with which the here described concepts can be resolved.
          
          For the `pynxtools library <https://github.com/FAIRmat-NFDI/pynxtools>`_
          which is used by the `NOMAD <https://nomad-lab.eu/nomad-lab>`_
          research data management system, it makes sense to store e.g. the GitHub
          repository commit and respective submodule references used.
        exists: [min, 0, max, infty]
        program(NX_CHAR):
          \@version(NX_CHAR):
    experiment_identifier(NXidentifier):
      exists: recommended
      doc:
      - |
        Ideally, a (globally) unique persistent identifier for referring to this experiment.
        
        An experiment should be understood in that this can be an experiment
        in reality or a computer simulation because also the latter is an experiment
        (see the Cambridge Dictionary experiment *a test done in order to find out
        something, eg if an idea is correct*).
      - |
        The identifier is usually issued by the facility, laboratory, or the principle investigator.
        The identifier enables to link experiments/simulations to e.g. proposals.
      service(NX_CHAR):
      identifier(NX_CHAR):
      is_persistent(NX_BOOLEAN):
    experiment_alias(NX_CHAR):
      doc:
      - |
        Alias which scientists can easier identify this experiment by.
    experiment_description(NX_CHAR):
      exists: optional
      doc:
      - |
        Free-text description about the experiment.
      - |
        Users are strongly advised to parameterize the description of their experiment
        by using respective groups and fields and base classes instead of writing prose
        into the field. The reason is that such free-text field is difficult to machine-interpret.
        The motivation behind keeping this field for now is to learn in how far the
        current base classes need extension based on user feedback.
    start_time(NX_DATE_TIME):
      doc:
      - |
        ISO 8601 time code with local time zone offset to UTC information included
        when the microscope session started. If the application demands that time
        codes in this section of the application definition should only be used
        for specifying when the experiment was performed - and the exact
        duration is not relevant use this start_time field.
      - |
        Often though it is useful to specify a time interval via setting both a start_time
        and an end_time because this enables software tools and users to collect a
        more detailed bookkeeping of the experiment.
        
        Users should be aware though that even with having both time instances
        specified, it may not be possible to infer how long the experiment took or
        for how long data were acquired.
        
        More detailed timing data over the course of the experiment have
        to be collected to compute this. These computations can take
        advantage of individual time stamps start_time and end_time
        in :ref:`NXevent_data_em` instances.
    end_time(NX_DATE_TIME):
      exists: recommended
      doc:
      - |
        ISO 8601 time code with local time zone offset to UTC included when
        the microscope session ended.
      - |
        See docstring of the start_time field to see how to use the
        start_time and end_time together.
    citeID(NXcite):
      exists: [min, 0, max, infty]
    serializedID(NXserialized):
      exists: [min, 0, max, infty]
      doc:
      - |
        Possibility to store a collection of serialized resources associated with the experiment.
      - |
        An example how to use this set could be to document from which files, which have been
        e.g. generated by software of technology partners, the information in an instance of
        NXem was filled with during parsing or transcoding between different formats.
      type(NX_CHAR):
      path(NX_CHAR):
      checksum(NX_CHAR):
      algorithm(NX_CHAR):
    userID(NXuser):
      # this is one of the few examples where groups may end up without fields because for reasons of not breaking GDPR compliance
      exists: [min, 0, max, infty]
      doc:
      - |
        Information about persons who performed or were involved in the microscope session or simulation run.
      - |
        This can be the principle investigator who performed this experiment or the student who performed simulations.
        Adding multiple users if relevant is recommended.
      name(NX_CHAR):
        exists: optional
        doc:
        - |
          Given (first) name and surname.
      affiliation(NX_CHAR):
        exists: optional
        doc:
        - |
          Name of the affiliation at the point in time when the experiment was performed.
      address(NX_CHAR):
        exists: optional
        doc:
        - |
          Postal address of the affiliation.
      email(NX_CHAR):
        exists: optional
        doc:
        - |
          Email address at the point in time when the experiment was performed.
        - |
          Writing the most permanently used email is recommended.
      telephone_number(NX_CHAR):
        exists: optional
        doc: 
        - |
          Telephone number at the point in time when the experiment was performed.
      role(NX_CHAR):
        exists: optional
        doc:
        - |
          User role at the point in time when the experiment was performed.
        - |
          Examples are technician operating the microscope, student, postdoc,
          principle investigator, or guest.
      identifier(NXidentifier):
        exists: optional
        doc:
        - |
          Identifier offered by a service to report the user other than by using its name.
        - |
          Examples could be an ORCID or social media account of the user.
        service(NX_CHAR):
        identifier(NX_CHAR):
        is_persistent(NX_BOOLEAN):
    sample(NXsample):
      doc:
      - |
        A physical entity which contains material intended to be investigated.
        Sample and specimen are treated as de facto synonyms. Samples can be real or virtual ones.
      - |
        xref:
          spec: EMglossary
          term: Specimen
          url: https://purls.helmholtz-metadaten.de/emg/EMG_00000046
      type(NX_CHAR):
        doc:
        - |
          Qualifier whether the sample is a real or a virtual one.
        enumeration: [experiment, simulation]
      identifier(NXidentifier):
        exists: recommended
        doc: |
          Ideally, (globally) unique persistent identifier which distinguishes the sample from all others
          and especially the predecessor/origin from where that sample was cut.  The terms sample
          and specimen are here considered as exact synonyms.
          
          This field must not be used for an alias! Instead, use name.
          
          In cases where multiple specimens were loaded into the microscope, the identifier has to resolve
          the specific sample, whose results are stored by this :ref:`NXentry` instance because a single
          NXentry should be used for the characterization of a single specimen.
          
          Details about the specimen preparation should be stored in resources referring to parent_identifier.
        service(NX_CHAR):
        identifier(NX_CHAR):
        is_persistent(NX_BOOLEAN):
      parent_identifier(NXidentifier):
        exists: recommended
        doc: |
          Identifier of the sample from which the sample was cut or the string *None*.
          
          The purpose of this field is to support functionalities for tracking
          sample provenance in a research data management system.
        service(NX_CHAR):
        identifier(NX_CHAR):
        is_persistent(NX_BOOLEAN):
      preparation_date(NX_DATE_TIME):
        doc: |
          ISO 8601 time code with local time zone offset to UTC information
          when the specimen was prepared.
          
          Ideally, report the end of the preparation, i.e. the last known timestamp when
          the measured specimen surface was actively prepared. Ideally, this matches
          the last timestamp that is mentioned in the digital resource pointed to by
          parent_identifier.
          
          Knowing when the specimen was exposed to e.g. specific atmosphere is especially
          required for environmentally sensitive material such as specimen charged with hydrogen
          or experiments including tracers that have a short halflife. Additional time stamps
          prior to preparation_date should better be placed in resources which describe but
          which do not pollute the description here with prose. Resolving these connected
          pieces of information is considered the responsibility of the
          research data management system not of a NeXus file.
      name(NX_CHAR):
        exists: recommended
        doc: |
          An alias used to refer to the specimen to please readability for humans.
      atom_types(NX_CHAR):
        doc: |
          List of comma-separated elements from the periodic table that are contained in the sample.
          If the sample substance has multiple components, all elements from each component
          must be included in atom_types.
          
          The purpose of the field is to offer research data management systems an opportunity
          to parse the relevant elements without having to interpret these from the resources
          pointed to by parent_identifier or walk through eventually deeply nested groups in
          individual data instances.
      thickness(NX_NUMBER):
        exists: optional
        doc: |
          (Measured) sample thickness.
          
          The information is recorded to qualify if the beam used was likely
          able to shine through the specimen. For scanning electron microscopy,
          in many cases the specimen is typically thicker than what is
          illuminatable by the electron beam.
          
          In this case the value should be set to the actual thickness of
          the specimen viewed for an illumination situation where the nominal
          surface normal of the specimen is parallel to the optical axis.
        unit: NX_LENGTH
      # \@units: nm
      # NEW ISSUE: error estimates of the thickness and origin, i.e. how the value was obtained would be useful
      # NEW ISSUE: error model
      # NEW ISSUE: the KIT/SCC SEM, TEM schemata further qualify samples whether they are conductive e/ibeam sensitive
      # etc. The problem with this is that beam sensitivity is too vague but spatiotemporal electron dose integral dependent
      # KIT/SCC distinguish further conductivity and magnetic properties. While the motivation is clear, making
      # it thus simple is likely problematic when the data entered in such fields remaining qualitative.
      # what are good or bad properties, it would make sense though to quantify these values
      # this includes the description of eventual plasma cleaning steps,
      # just knowing that a sample was plasma cleaned is insufficient, maybe it was not cleaned long enough
      # if plasma cleaning is done outside the EM than its certainly history, if it happens inside the EM
      # are the ibeam description capabilities not sufficient enough?
      density(NX_NUMBER):
        exists: optional
        doc: |
          (Measured) density of the specimen.
          
          For multi-layered specimens this field should only be used to describe
          the density of the excited volume. For scanning electron microscopy
          the usage of this field is discouraged and instead an instance of an 
          :ref:`NXinteraction_vol_em` within individual :ref:`NXevent_data_em`
          instances can provide a cleaner description of the relevant details
          why one may wish to store the density of the specimen.
        unit: NX_ANY
      description(NX_CHAR):
        exists: optional
        doc: |
          Discouraged free-text field to provide further detail although adding
          parent_identifier and having a working research data management system
          should provide this contextualization.
    coordinate_system_set(NXcoordinate_system_set):
      exists: [min, 1, max, 1]
      doc:
      - |
        Set to hold different coordinate systems conventions.
      - |
        Inspect the description of the :ref:`NXcoordinate_system_set` and :ref:`NXcoordinate_system` base classes
        how to define coordinate systems in NeXus.
      (NXcoordinate_system):
        exists: [min, 1, max, infty]
        alias(NX_CHAR):
          exists: optional
        type(NX_CHAR):
        handedness(NX_CHAR):
        origin(NX_CHAR):
      processing_reference_frame(NXcoordinate_system):
        exists: recommended
        alias(NX_CHAR):
          exists: optional
        type(NX_CHAR):
        handedness(NX_CHAR):
        origin(NX_CHAR):
          exists: recommended
          doc: |
            Location of the origin of the processing_reference_frame.
            
            It is assumed that regions-of-interest in this reference frame form a rectangle or cuboid.
            Edges are interpreted by inspecting the direction of their outer unit normals
            (which point either parallel or antiparallel) along respective base vector direction
            of the reference frame.
            
            If any of these assumptions is not met, the user is required to explicitly state this.
          enumeration: [undefined, front_top_left, front_top_right, front_bottom_right, front_bottom_left, back_top_left, back_top_right, back_bottom_right, back_bottom_left]
        x_direction(NX_CHAR):
          exists: recommended
          doc: |
            Direction of the positively pointing x-axis base vector of the processing_reference_frame.
          enumeration: [undefined, north, east, south, west, in, out]
        y_direction(NX_CHAR):
          exists: recommended
          doc: |
            Direction of the positively pointing y-axis base vector of the processing_reference_frame.
          enumeration: [undefined, north, east, south, west, in, out]
        z_direction(NX_CHAR):
          exists: recommended
          doc: |
            Direction of the positively pointing z-axis base vector of the processing_reference_frame.
          enumeration: [undefined, north, east, south, west, in, out]
      sample_reference_frame(NXcoordinate_system):
        exists: recommended
        depends_on(NX_CHAR):
          exists: optional
          doc: |
            Reference to the specifically named :ref:`NXsample` instance(s) for
            which these conventions apply (e.g. /entry1/sample1).
        alias(NX_CHAR):
          exists: optional
        type(NX_CHAR):
        handedness(NX_CHAR):
        origin(NX_CHAR):
          exists: recommended
          doc: |
            Location of the origin of the sample_reference_frame.
            
            It is assumed that regions-of-interest in this reference frame form a rectangle or cuboid.
            Edges are interpreted by inspecting the direction of their outer unit normals
            (which point either parallel or antiparallel) along respective base vector direction
            of the reference frame.
            
            If any of these assumptions is not met, the user is required to explicitly state this.
          enumeration: [undefined, front_top_left, front_top_right, front_bottom_right, front_bottom_left, back_top_left, back_top_right, back_bottom_right, back_bottom_left]
        x_direction(NX_CHAR):
          exists: recommended
          doc: |
            Direction of the positively pointing x-axis base vector of the sample_reference_frame.
          enumeration: [undefined, north, east, south, west, in, out]
        y_direction(NX_CHAR):
          exists: recommended
          doc: |
            Direction of the positively pointing y-axis base vector of the sample_reference_frame.
          enumeration: [undefined, north, east, south, west, in, out]
        z_direction(NX_CHAR):
          exists: recommended
          doc: |
            Direction of the positively pointing z-axis base vector of the sample_reference_frame.
          enumeration: [undefined, north, east, south, west, in, out]
      detector_reference_frameID(NXcoordinate_system):
        exists: [min, 0, max, infty]
        depends_on(NX_CHAR):
          exists: optional
          doc: |
            Reference to the specifically named :ref:`NXdetector` instance for
            which these conventions apply (e.g. /entry1/instrument/detector1).
        alias(NX_CHAR):
          exists: optional
        type(NX_CHAR):
        handedness(NX_CHAR):
        origin(NX_CHAR):
          exists: recommended
          doc: |
            Location of the origin of the detector_reference_frame.
            
            If the regions-of-interest forms a rectangle or cuboid, it is assumed that edges are interpreted
            by inspecting the direction of their outer unit normals (which point either parallel or antiparallel)
            along respective base vector direction of the reference frame.
            
            If any of these assumptions is not met, the user is required to explicitly state this.
          enumeration: [undefined, front_top_left, front_top_right, front_bottom_right, front_bottom_left, back_top_left, back_top_right, back_bottom_right, back_bottom_left]
        x_direction(NX_CHAR):
          exists: recommended
          doc: |
            Direction of the positively pointing x-axis base vector of the detector_reference_frame.
          enumeration: [undefined, north, east, south, west, in, out]
        y_direction(NX_CHAR):
          exists: recommended
          doc: |
            Direction of the positively pointing y-axis base vector of the detector_reference_frame.
          enumeration: [undefined, north, east, south, west, in, out]
        z_direction(NX_CHAR):
          exists: recommended
          doc: |
            Direction of the positively pointing z-axis base vector of the detector_reference_frame.
          enumeration: [undefined, north, east, south, west, in, out]
        # the description can be so lean because we do not need to overwrite here s.th. as everything is defined already
        # we just say we compose using the base class NXcoordinate_system
    measurement(NXem_msr):
      exists: optional
      em_lab(NXinstrument):
        instrument_name(NX_CHAR):
          exists: recommended
        location(NX_CHAR):
          exists: recommended
        fabrication(NXfabrication):
          exists: optional
          vendor(NX_CHAR):
          model(NX_CHAR):
          identifier(NX_CHAR):
            exists: recommended
        control_programID(NXprogram):
          exists: [min, 1, max, infty]
          doc:
          - |
            Details about the control program used for operating the microscope.
          program(NX_CHAR):
            \@version(NX_CHAR):
        ebeam_column(NXebeam_column):
          chamber(NXchamber):
            exists: optional
          fabrication(NXfabrication):
            exists: optional
            vendor(NX_CHAR):
            model(NX_CHAR):
            identifier(NX_CHAR):
              exists: recommended  
          electron_source(NXsource):
            doc:
            - |
              xref:
                spec: EMglossary
                term: Source
                url: https://purls.helmholtz-metadaten.de/emg/EMG_00000045
            emitter_type(NX_CHAR):
            probe(NX_CHAR):
            # voltage like all other dynamic quantities should better be placed in instances of NXevent_data_em
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
            # fabrication is an example which shows when one needs to specify in the appdef if some of the
            # inherited objects from NXebeam_column have to be specified that is when one wishes to document
            # e.g. a combination of cardinality constraints or concept symbol constraints
            # i.e. use NXfabrication from NXsource but demand it to be labelled with the symbol fabrication
            # likewise if you provide fabrication details you need to provide vendor and model but not necessarily identifier
          lensID(NXlens_em):
            exists: [min, 0, max, infty]
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
          apertureID(NXaperture):
            exists: [min, 0, max, infty]
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
          monochromatorID(NXmonochromator):
            exists: [min, 0, max, infty]
            doc:
            - |
              Device for improving energy resolution or reducing chromatic aberration.
            - |
              Examples are Wien, $\textalpha$-, or $\Omega$- energy filter or `cc corrector like <https://www.ceos-gmbh.de/en/basics/cc-corrector>`_
            # user perspective
            type(NX_CHAR):
              doc:
              - |
                Qualitative type of the component.
              enumeration: [wien, alfa, omega, castaing_henry, gatan_imaging, sector_analyzer]
            # control level perspective
            # technical design perspective
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
          corrector_cs(NXcorrector_cs):
            exists: [min, 0, max, 1]
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
          corrector_ax(NXcomponent):
            exists: [min, 0, max, 1]
            doc:
            - |
              Device reshaping an ellipse-shaped electron beam to a circular one.
              
              * `L. Reimer 1998, Springer, 1998 <https://dx.doi.org/10.1007/978-3-540-3896>`_
              * `M. Tanaka et al., Electron Microscopy Glossary, 2024 <https://www.jeol.com/words/semterms/20201020.111014.php#gsc.tab=0>`_
              
            - |
              Stigmator is an exact synonym.
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
          biprism(NXcomponent):
            exists: optional
            doc:
            - |
              Electron biprism as it is used e.g. for electron holography.
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
          phaseplateID(NXcomponent):
            # contributed definition NXwaveplate is a closely related concept but may fit even better but waveplate
            # has been defined from the perspective of classical optics
            # same challenge like with NXlens and NXlens_em, an electrostatic lens is not the same concept
            # like it is an glass lens (i.e. optical) NXlens
            # but both concepts have in common that they can be assumed to be specialization of a super class
            # lenses i.e. devices which can affect the pathes of beams
            exists: [min, 0, max, infty]
            doc:
            - |
              Device that causes a change in the phase of an electron wave.
              
              * `M. Malac et al. <https://doi.org/10.1093/jmicro/dfaa070>`_
              * `R. R. Schröder et al. <https://www.lem.kit.edu/152.php>`_
            type(NX_CHAR):
              doc:
              - |
                Qualitative type
              enumeration: [thin_film, electrostatic]
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
          sensorID(NXsensor):
            exists: [min, 0, max, infty]
          actuatorID(NXactuator):
            exists: [min, 0, max, infty]
        ibeam_column(NXibeam_column):
          exists: [min, 0, max, 1]
          # there are tri-beam SEMs but they typically use a laser for which we should have an own base class
          chamber(NXchamber):
            exists: optional
          fabrication(NXfabrication):
            exists: optional
            vendor(NX_CHAR):
            model(NX_CHAR):
            identifier(NX_CHAR):
              exists: recommended
          ion_source(NXsource):
            probe(NXion):
          lensID(NXlens_em):
            exists: [min, 0, max, infty]
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
          apertureID(NXaperture):
            exists: [min, 0, max, infty]
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
          monochromatorID(NXmonochromator):
            exists: [min, 0, max, infty]
            doc:
            - |
              Device for improving energy resolution or reducing chromatic aberration.
            - |
              Examples are Wien, $\textalpha$-, or $\Omega$- energy filter or `cc corrector like <https://www.ceos-gmbh.de/en/basics/cc-corrector>`_
            type(NX_CHAR):
              doc:
              - |
                Qualitative type of the component.
              enumeration: [wien, alfa, omega, castaing_henry, gatan_imaging, sector_analyzer]
            fabrication(NXfabrication):
              exists: optional
              vendor(NX_CHAR):
              model(NX_CHAR):
              identifier(NX_CHAR):
                exists: recommended
          # device for correcting axial astigmatism of ion beam?
          sensorID(NXsensor):
            exists: [min, 0, max, infty]
          actuatorID(NXactuator):
            exists: [min, 0, max, infty]
        detectorID(NXdetector):
          exists: [min, 0, max, infty]
          fabrication(NXfabrication):
            vendor(NX_CHAR):
            model(NX_CHAR):
            # identifier(NX_CHAR):   # only relevant when deprecating serial_number
            #   exists: recommended
        scan_controller(NXscanbox_em):
          exists: optional
          fabrication(NXfabrication):
            exists: optional
            vendor(NX_CHAR):
            model(NX_CHAR):
            identifier(NX_CHAR):
              exists: recommended
        (NXsensor):
          exists: [min, 0, max, infty]
        (NXactuator):
          exists: [min, 0, max, infty]
        (NXstage_lab):
          exists: [min, 0, max, infty]
          fabrication(NXfabrication):
            exists: optional
            vendor(NX_CHAR):
            model(NX_CHAR):
            identifier(NX_CHAR):
              exists: recommended
        (NXchamber):
          exists: [min, 0, max, infty]
        (NXpump):
          exists: [min, 0, max, infty]
      event_data_em_set(NXevent_data_em_set):
        exists: [min, 0, max, 1]
        # an instance must not have an NXevent_data_em_set but if it has one it must not be more than 1 !
        (NXevent_data_em):
          exists: [min, 0, max, infty]
          start_time(NX_DATE_TIME):
            exists: recommended
          end_time(NX_DATE_TIME):
            exists: recommended
          (NXimage_set):
            exists: [min, 0, max, infty]
            (NXprocess):
              source(NXserialized):
                exists: recommended
                type(NX_CHAR):
                path(NX_CHAR):
                checksum(NX_CHAR):
                algorithm(NX_CHAR):
                absolute_path(NX_CHAR):
                  exists: recommended
              detector_identifier(NX_CHAR):
            image_1d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              real(NX_NUMBER):
                \@long_name(NX_CHAR):
              imag(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              magnitude(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              intensity(NX_COMPLEX):
                exists: optional
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
            image_2d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              real(NX_NUMBER):
                \@long_name(NX_CHAR):
              imag(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              magnitude(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              intensity(NX_COMPLEX):
                exists: optional
                \@long_name(NX_CHAR):
              axis_j(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
            image_3d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              real(NX_NUMBER):
                \@long_name(NX_CHAR):
              imag(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              magnitude(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              intensity(NX_COMPLEX):
                exists: optional
                \@long_name(NX_CHAR):
              axis_k(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_j(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
            stack_1d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              real(NX_NUMBER):
                \@long_name(NX_CHAR):
              imag(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              magnitude(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              intensity(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              group_identifier(NX_INT):
                exists: optional
                \@long_name(NX_CHAR):
              image_identifier(NX_INT):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
            stack_2d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              real(NX_NUMBER):
                \@long_name(NX_CHAR):
              imag(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              magnitude(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              intensity(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              group_identifier(NX_INT):
                exists: optional
                \@long_name(NX_CHAR):
              image_identifier(NX_INT):
                \@long_name(NX_CHAR):
              axis_j(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
            stack_3d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              real(NX_NUMBER):
                \@long_name(NX_CHAR):
              imag(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              magnitude(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              intensity(NX_NUMBER):
                exists: optional
                \@long_name(NX_CHAR):
              group_identifier(NX_INT):
                exists: optional
                \@long_name(NX_CHAR):
              image_identifier(NX_INT):
                \@long_name(NX_CHAR):
              axis_k(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_j(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
          (NXspectrum_set):
            exists: [min, 0, max, infty]
            (NXprocess):
              source(NXserialized):
                exists: recommended
                type(NX_CHAR):
                path(NX_CHAR):
                checksum(NX_CHAR):
                algorithm(NX_CHAR):
                absolute_path(NX_CHAR):
                  exists: recommended
              detector_identifier(NX_CHAR):
            spectrum_0d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              intensity(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_energy(NX_NUMBER):
                \@long_name(NX_CHAR):
            spectrum_1d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              intensity(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_energy(NX_NUMBER):
                \@long_name(NX_CHAR):
            spectrum_2d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              intensity(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_j(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_energy(NX_NUMBER):
                \@long_name(NX_CHAR):
            spectrum_3d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              intensity(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_k(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_j(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_energy(NX_NUMBER):
                \@long_name(NX_CHAR):
            stack_0d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              intensity(NX_NUMBER):
                \@long_name(NX_CHAR):
              spectrum_identifier(NX_INT):
                \@long_name(NX_CHAR):
              axis_energy(NX_NUMBER):
                \@long_name(NX_CHAR):
            stack_1d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              intensity(NX_NUMBER):
                \@long_name(NX_CHAR):
              spectrum_identifier(NX_INT):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_energy(NX_NUMBER):
                \@long_name(NX_CHAR):
            stack_2d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              intensity(NX_NUMBER):
                \@long_name(NX_CHAR):
              spectrum_identifier(NX_INT):
                \@long_name(NX_CHAR):
              axis_j(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_energy(NX_NUMBER):
                \@long_name(NX_CHAR):
            stack_3d(NXdata):
              exists: optional
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_INT):
              title(NX_CHAR):
              intensity(NX_NUMBER):
                \@long_name(NX_CHAR):
              spectrum_identifier(NX_INT):
                \@long_name(NX_CHAR):
              axis_k(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_j(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_i(NX_NUMBER):
                \@long_name(NX_CHAR):
              axis_energy(NX_NUMBER):
                \@long_name(NX_CHAR):

          em_lab(NXinstrument):
            exists: recommended
            ebeam_column(NXebeam_column):
              operation_mode(NX_CHAR):
              electron_source(NXsource):
                doc:
                - |
                  xref:
                    spec: EMglossary
                    term: Source
                    url: https://purls.helmholtz-metadaten.de/emg/EMG_00000045
                voltage(NX_NUMBER):
                  doc:
                  - |
                    The potential difference between anode and cathode.
                  - |
                    xref: 
                      spec: EMglossary
                      term: Acceleration Voltage
                      url: https://purls.helmholtz-metadaten.de/emg/EMG_00000004
                extraction_voltage(NX_NUMBER):
                  exists: optional
                  doc:
                  - |
                    Voltage which is utilised to create an electric field that draws particles from the source.
                  - |
                    xref:
                      spec: EMglossary
                      term: Extraction Voltage
                      url: https://purls.helmholtz-metadaten.de/emg/EMG_00000025
                  unit: NX_VOLTAGE
                emission_current(NX_NUMBER):
                  exists: optional
                  doc:
                  - |
                    Electrical current which is released from the source.
                  - |
                    xref:
                      spec: EMglossary
                      term: Emission Current
                      url: https://purls.helmholtz-metadaten.de/emg/EMG_00000025
                  unit: NX_CURRENT
                filament_current(NX_NUMBER):
                  exists: optional
                  doc:
                  - |
                    Electrical current which flows through the source.
                  - |
                    xref:
                      spec: EMglossary
                      term: Filament Current
                      url: https://purls.helmholtz-metadaten.de/emg/EMG_00000027
                  unit: NX_CURRENT
              lensID(NXlens_em):
                exists: [min, 0, max, infty]
                value(NX_NUMBER):
              apertureID(NXaperture):
                exists: [min, 0, max, infty]
                value(NX_NUMBER):
                  doc:
                  - |
                    Relevant value from the control software.
                  - |
                    This is not always just the diameter of the aperture (not even in the case)
                    of a circular aperture. Usually, it is a value that is set in the control
                    software whereby a specific configuration of an aperture is selected by the
                    software.
                    
                    The control software of commercial microscope typically offers the user
                    access at a high abstraction level because of which many details about
                    the actual settings of the electrical components are typically unknown.
                    
                    However, if more details are known or should be documented one should
                    use the description field for this.
                  unit: NX_ANY
              monochromatorID(NXmonochromator):
                exists: [min, 0, max, infty]
                doc:
                - |
                  Device to improve energy resolution or chromatic aberration.
                - |
                  Examples are Wien, $\textalpha$-, or $\Omega$- energy filter or `cc corrector like <https://www.ceos-gmbh.de/en/basics/cc-corrector>`_
                 # user perspective
                applied(NX_BOOLEAN):
                  doc:
                  - |
                   Was the corrector used?
                # control level perspective
                # technical components of the corrector
                dispersion(NX_NUMBER):
                  exists: recommended
                  doc:
                  - |
                    Energy dispersion in e.g. µm/eV.
                  unit: NX_ANY
                voltage(NX_NUMBER):
                  exists: recommended
                  doc:
                  - |
                    Corresponding voltage for that energy dispersion.
                  unit: NX_VOLTAGE
              corrector_cs(NXcorrector_cs):
                exists: [min, 0, max, 1]  # but there are systems with several ones https://www.globalsino.com/EM/page4263.html
                applied(NX_BOOLEAN):
                  exists: recommended
                tableauID(NXprocess):
                  exists: [min, 1, max, infty]
                  # model(NX_CHAR):
                  #  exists: optional
                  # ceos
                  c_1(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  a_1(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  b_2(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  a_2(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_3(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  s_3(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  a_3(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  b_4(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  d_4(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  a_4(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_5(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  s_5(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  r_5(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  a_6(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  # nion
                  c_1_0(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_1_2_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_1_2_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_2_1_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_2_1_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_2_3_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_2_3_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_3_0(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_3_2_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_3_2_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_3_4_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_3_4_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_4_1_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_4_1_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_4_3_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_4_3_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_4_5_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_4_5_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_5_0(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_5_2_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_5_2_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_5_4_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_5_4_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_5_6_a(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  c_5_6_b(NXaberration):
                    exists: optional
                    magnitude(NX_NUMBER):
                  # we could write down how to store the aberrations but we should not force to add aberrations
                  # basically optional use of NXaberration therein at least some value required
              corrector_ax(NXcomponent):
                exists: [min, 0, max, 1]
                doc:
                - |
                  Device reshaping an ellipse-shaped electron beam to a circular one.
                  
                  * `L. Reimer 1998, Springer, 1998 <https://dx.doi.org/10.1007/978-3-540-3896>`_
                  * `M. Tanaka et al., Electron Microscopy Glossary, 2024 <https://www.jeol.com/words/semterms/20201020.111014.php#gsc.tab=0>`_
                  
                - |
                  Stigmator is an exact synonym.
                applied(NX_BOOLEAN):
                 doc:
                 - |
                   Was the corrector used?
                value_x(NX_NUMBER):
                  doc:
                  - |
                    Descriptor for the correction strength along the first direction when exact technical details
                    are unknown or not directly controllable as the control software of the microscope does not
                    enable or was not configured to display these values (for end users).
                  unit: NX_ANY
                value_y(NX_NUMBER):
                  doc:
                  - |
                    Descriptor for the correction strength along the second direction when exact technical details
                    are unknown or not directly controllable as the control software of the microscope does not
                    enable or was not configured to display these values (for end users).
                  unit: NX_ANY
              biprism(NXcomponent):
                exists: [min, 0, max, 1]
              phaseplateID(NXcomponent):
                exists: [min, 0, max, infty]
              sensorID(NXsensor):
                exists: [min, 0, max, infty]
              actuatorID(NXactuator):
                exists: [min, 0, max, infty]
              (NXbeam):
                exists: [min, 0, max, infty]
                doc:
                - |
                  xref:
                    spec: EMglossary
                    term: Electron Beam
                    url: https://purls.helmholtz-metadaten.de/emg/EMG_00000021
            ibeam_column(NXibeam_column):
              exists: [min, 0, max, 1]
              ion_source(NXsource):
                probe(NXion):
                voltage(NX_NUMBER):
              lensID(NXlens_em):
                exists: [min, 0, max, infty]
                value(NX_NUMBER):
              apertureID(NXaperture):
                exists: [min, 0, max, infty]
                value(NX_NUMBER):
                  doc:
                  - |
                    Relevant value from the control software.
                  - |
                    This is not always just the diameter of the aperture (not even in the case)
                    of a circular aperture. Usually, it is a value that is set in the control
                    software whereby a specific configuration of an aperture is selected by the
                    software.
                    
                    The control software of commercial microscope typically offers the user
                    access at a high abstraction level because of which many details about
                    the actual settings of the electrical components are typically unknown.
                    
                    However, if more details are known or should be documented one should
                    use the description field for this.
                  unit: NX_ANY
              monochromatorID(NXmonochromator):
                exists: [min, 0, max, infty]
                applied(NX_BOOLEAN):
              sensorID(NXsensor):
                exists: [min, 0, max, infty]
              actuatorID(NXactuator):
                exists: [min, 0, max, infty]
              (NXbeam):
                exists: [min, 0, max, infty]
            detectorID(NXdetector):
              exists: [min, 0, max, infty]
              mode(NX_CHAR):
            scan_controller(NXscanbox_em):
              exists: optional
              scan_schema(NX_CHAR):
              dwell_time(NX_NUMBER):

            (NXsensor):
              exists: [min, 0, max, infty]
            (NXactuator):
              exists: [min, 0, max, infty]
            heater(NXactuator):
              exists: optional
              current(NX_NUMBER):
                doc:
                - |
                  Nominal current of the heater.
                unit: NX_CURRENT
              voltage(NX_NUMBER):
                doc:
                - |
                  Nominal voltage of the heater.
                unit: NX_VOLTAGE
              power(NX_NUMBER):
                doc:
                - |
                  Nominal power of the heater.
                unit: NX_POWER
            (NXstage_lab):
              exists: [min, 0, max, infty]
              design(NX_CHAR):
                exists: recommended
            (NXchamber):
              exists: [min, 0, max, infty]
            (NXpump):
              exists: [min, 0, max, infty]

    simulation(NXem_sim):
      exists: optional
      # remains to be discussed based on examples

    # relevant research result post-processed for specific community methods
    # but normalized in its representation ready to be consumed for a
    # research data management system
    roiID(NXroi):
      exists: [min, 0, max, infty]
      doc:
      - |
        A region-of-interest analyzed either during or after the session
        for which specific processed data are available.
      - |
        xref:
          spec: EMglossary
          term: Region Of Interest
          url: https://purls.helmholtz-metadaten.de/emg/EMG_00000042
      # as soon as one entry is here constrained further
      # an RDM can be sure to find specific pieces of information in a
      # specific way but then every user of this application definition
      # is required to provide such information in this way!
      imaging(NXem_img):
        exists: optional
        imaging_mode(NX_CHAR):
        (NXimage_set):
          exists: [min, 0, max, infty]
          half_angle_interval(NX_NUMBER):
            exists: optional
          microstructureID(NXmicrostructure):
            exists: optional
      ebsd(NXem_ebsd):
        exists: optional
        # remains to be discussed based on examples
        gnomonic_reference_frame(NXcoordinate_system):
          exists: optional
          alias(NX_CHAR):
            exists: optional
          type(NX_CHAR):
          handedness(NX_CHAR):
          origin(NX_CHAR):
          x_direction(NX_CHAR):
          y_direction(NX_CHAR):
          z_direction(NX_CHAR):
        pattern_centre(NXprocess):
          exists: recommended
          x_boundary_convention(NX_CHAR):
          x_normalization_direction(NX_CHAR):
          y_boundary_convention(NX_CHAR):
          y_normalization_direction(NX_CHAR):
        measurement(NXprocess):
          exists: optional
          depends_on(NX_CHAR):
          source(NXserialized):
            type(NX_CHAR):
            path(NX_CHAR):
            checksum(NX_CHAR):
            algorithm(NX_CHAR):
        simulation(NXprocess):
          exists: optional
          depends_on(NX_CHAR):
          source(NXserialized):
            type(NX_CHAR):
            path(NX_CHAR):
            checksum(NX_CHAR):
            algorithm(NX_CHAR):
        indexing(NXprocess):
          exists: optional
          number_of_scan_points(NX_UINT):
          indexing_rate(NX_NUMBER):
            exists: recommended
          source(NXserialized):
            exists: optional
            type(NX_CHAR):
            path(NX_CHAR):
            checksum(NX_CHAR):
            algorithm(NX_CHAR):
          phaseID(NXcrystal_structure):
            exists: [min, 0, max, infty]
            number_of_scan_points(NX_UINT):
            a_b_c(NX_NUMBER):
            alpha_beta_gamma(NX_NUMBER):
            space_group(NX_CHAR):
            phase_identifier(NX_INT):
            phase_name(NX_CHAR):
            ipfID(NXmicrostructure_ipf):
              exists: recommended
              projection_direction(NX_NUMBER):
              map(NXdata):
                \@signal(NX_CHAR):
                \@axes(NX_CHAR):
                \@AXISNAME_indices(NX_INT):
                title(NX_CHAR):
                data(NX_NUMBER):
                  \@long_name(NX_CHAR):
                axis_x(NX_NUMBER):
                  \@long_name(NX_CHAR):
                axis_y(NX_NUMBER):
                  exists: optional
                  \@long_name(NX_CHAR):
                axis_z(NX_NUMBER):
                  exists: optional
                  \@long_name(NX_CHAR):
              legend(NXdata):
                \@signal(NX_CHAR):
                \@axes(NX_CHAR):
                \@AXISNAME_indices(NX_INT):
                title(NX_CHAR):
                data(NX_NUMBER):
                  \@long_name(NX_CHAR):
                axis_x(NX_NUMBER):
                  \@long_name(NX_CHAR):
                axis_y(NX_NUMBER):
                  \@long_name(NX_CHAR):
          roi(NXdata):
            exists: recommended
            \@signal(NX_CHAR):
            \@axes(NX_CHAR):
            \@AXISNAME_indices(NX_CHAR):
            title(NX_CHAR):
            descriptor(NX_CHAR):
            data(NX_NUMBER):
            axis_y(NX_NUMBER):
              \@long_name(NX_CHAR):
            axis_x(NX_NUMBER):
              \@long_name(NX_CHAR):
      eds(NXem_eds):
        exists: optional
        # remains to be discussed based on examples
        indexing(NXprocess):
          summary(NXdata):
            exists: optional
            \@signal(NX_CHAR):
            \@axes(NX_CHAR):
            \@AXISNAME_indices(NX_CHAR):
            title(NX_CHAR):
            intensity(NX_NUMBER):
            axis_energy(NX_CHAR):
              \@long_name(NX_CHAR):
          atom_types(NX_CHAR):
          (NXimage_set):
            exists: [min, 0, max, 118]  # given that image_set instances should be named with the chemical_symbol of the elements
            iupac_line_candidates(NX_CHAR):
              exists: recommended
            energy_range(NX_NUMBER):
            image_2d(NXdata):
              \@signal(NX_CHAR):
              \@axes(NX_CHAR):
              \@AXISNAME_indices(NX_CHAR):
              title(NX_CHAR):
                exists: optional
              intensity(NX_NUMBER):
                \@units(NX_CHAR):
                  exists: recommended
              axis_i(NX_NUMBER):  # x
                \@long_name(NX_CHAR):
                \@units(NX_CHAR):
              axis_j(NX_NUMBER):  # y
                \@long_name(NX_CHAR):
                \@units(NX_CHAR):  # exemplar test to enforce that units are added
      eels(NXem_eels):
        exists: optional
      correlation(NXem_correlation):
        exists: optional
        # remains to be discussed based on examples

# see an example how to map e.g. the following flat schema https://www.zenodo.org/record/6513745 to NXem
# in https://github.com/FAIRmat-NFDI/nexus_definitions/commit/0b928c4352bc5636f673b5fb25ce990f1af8a099
