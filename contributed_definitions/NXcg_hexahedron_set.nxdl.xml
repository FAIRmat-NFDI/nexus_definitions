<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2014-2022 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<!--it is useful to define own base classes for frequently used classes
a polyhedron is a specific polytope in 3d, do we need
higher-dimensional polytopes? that could be useful for simplicies though
as they are used in numerics etc. maybe reach out here to our friends
from MarDI, for now let's assume we do not need polytopes for d > 3-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXcg_hexahedron_set" extends="NXcg_primitive_set" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="c">
            <doc>
                 The cardinality of the set, i.e. the number of hexahedra.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Computational geometry description of a set of hexahedra in Euclidean space.
    </doc>
    <!--qualifiers and properties of hexahedra-->
    <field name="shape" type="NX_FLOAT" units="NX_LENGTH">
        <doc>
             Qualifier for the shape of each hexahedron.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="3"/>
        </dimensions>
    </field>
    <field name="length" type="NX_FLOAT" units="NX_LENGTH">
        <doc>
             Qualifier how one edge is longer than all other edges of the hexahedra.
             Often the term length is associated with one edge being parallel to
             an axis of the coordinate system.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="width" type="NX_FLOAT" units="NX_LENGTH">
        <doc>
             Qualifier often used to describe the length of an edge within
             the coordinate system.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="height" type="NX_FLOAT" units="NX_LENGTH">
        <doc>
             Qualifier often used to describe the length of an edge within
             the coordinate system.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="volume" type="NX_FLOAT" units="NX_VOLUME">
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="surface_area" type="NX_NUMBER" units="NX_AREA">
        <doc>
             Total area (of all six faces) of each hexahedron.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="face_area" type="NX_FLOAT" units="NX_AREA">
        <doc>
             Area of each of the six faces of each hexahedron.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="6"/>
        </dimensions>
    </field>
    <field name="is_box" type="NX_BOOLEAN">
        <doc>
             Specifies if the hexahedra represent cuboids or cubes eventually rotated
             ones but at least not too exotic six-faced polyhedra.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="is_axis_aligned" type="NX_BOOLEAN">
        <doc>
             Only to be used if is_box is present. In this case, this field describes
             whether hexahedra are boxes whose primary edges are parallel to the
             axes of the coordinate system.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <group type="NXtransformations">
        <doc>
             Reference to or definition of a coordinate system with
             which the qualifiers and mesh data are interpretable.
        </doc>
    </group>
    <!--substantially more detailed descriptors of the shape, the mesh-->
    <group name="orientation" type="NXorientation_set"/>
    <group name="vertex_normal" type="NXcg_unit_normal_set"/>
    <group name="edge_normal" type="NXcg_unit_normal_set"/>
    <group name="face_normal" type="NXcg_unit_normal_set"/>
    <!--detailed mesh-based representation-->
    <group name="hexahedra" type="NXcg_face_list_data_structure">
        <!--exists: [min, 0, max, 1]-->
        <doc>
             A simple approach to describe the entire set of hexahedra when the
             main intention is to store the shape of the hexahedra for visualization.
        </doc>
    </group>
    <group name="hexahedron" type="NXcg_face_list_data_structure">
        <!--exists: [min, 0, max, infty]  # can this be max, c?-->
        <doc>
             Disentangled representations of the mesh of specific hexahedra.
        </doc>
    </group>
    <group name="hexahedron_half_edge" type="NXcg_half_edge_data_structure">
        <!--exists: [min, 0, max, infty]-->
        <doc>
             Disentangled representation of the planar graph that each hexahedron
             represents. Such a description simplifies topological processing
             or analyses of mesh primitive operations and neighborhood queries.
        </doc>
    </group>
</definition>
