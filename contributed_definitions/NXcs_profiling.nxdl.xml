<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2014-2022 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXcs_profiling" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
    </symbols>
    <doc>
         Computer science description for summary performance/profiling data of an
         application.
    </doc>
    <!--details about queuing systems etc-->
    <field name="current_working_directory">
        <doc>
             Path to the directory from which the tool was called.
        </doc>
    </field>
    <field name="command_line_call">
        <doc>
             Command line call with arguments if applicable.
        </doc>
    </field>
    <field name="start_time" type="NX_DATE_TIME">
        <doc>
             ISO 8601 time code with local time zone offset to UTC information
             included when the app was started.
        </doc>
    </field>
    <field name="end_time" type="NX_DATE_TIME">
        <doc>
             ISO 8601 time code with local time zone offset to UTC information
             included when the app terminated or crashed.
        </doc>
    </field>
    <field name="total_elapsed_time" type="NX_FLOAT" units="NX_TIME">
        <doc>
             Wall-clock time how long the app execution took. This may be in principle
             end_time minus start_time; however usage of eventually more precise timers
             may warrant to use a finer temporal discretization,
             and thus demands a more precise record of the wall-clock time.
        </doc>
    </field>
    <field name="number_of_processes" type="NX_POSINT" units="NX_UNITLESS">
        <doc>
             Qualifier which specifies with how many nominal processes the app was
             invoked. The main idea behind this field e.g. for app using MPI
             (Message Passing Interface) parallelization is to communicate
             how many processes were used.
        </doc>
    </field>
    <field name="number_of_threads" type="NX_POSINT" units="NX_UNITLESS">
        <doc>
             Qualifier with how many nominal threads were accessible to the app at
             runtime. Specifically here the maximum number of threads used for the
             high-level threading library used (e.g. OMP_NUM_THREADS), posix.
        </doc>
    </field>
    <field name="number_of_gpus" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Qualifier with how many nominal GPUs the app was invoked at runtime.
        </doc>
    </field>
    <!--there are more complicated usage models, where GPUs are activated in
between runs etc, but here application definition and base class developers
should feel free to suggest customizations wrt to if and how such more
complicated models should be captured.
how can you have an empty list?-->
    <group type="NXcs_computer">
        <doc>
             A collection with one or more computing nodes each with own resources.
             This can be as simple as a laptop or the nodes of a cluster computer.
        </doc>
    </group>
    <group type="NXcs_profiling_event">
        <doc>
             A collection of individual profiling event data which detail e.g. how
             much time the app took for certain computational steps and/or how much
             memory was consumed during these operations.
        </doc>
    </group>
    <!--how to retrieve UUID for cloud computing instances
https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/identify_ec2_instances.html-->
</definition>
