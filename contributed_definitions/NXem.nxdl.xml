<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2014-2022 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="application" type="group" name="NXem" extends="NXem_base" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <doc>
         Application definition for electron microscopy research used for an RDM or
         exchange of electron microscopy research across RDMs.
         
         In line with the idea of NeXus application definitions, this schema is a
         specialized version of NXem_base in that fields and groups are specifically
         constrained, mainly with the effect that some quantities are required, so
         that a research data management system can rely on the existence of certain
         pieces of information without demanding further verification in its own
         source code or further harmonization or normalization what each piece of
         information means conceptually.
         
         This application definition is thus an example and blueprint how users
         can build specific application definitions by reusing em-specific base
         classes. The constraints of all these application definitions
         might be different than for the here exemplified NXem.
         
         Nevertheless, the key benefit remains: Many pieces of information are still
         conceptually the same, named in the same way and found in the same place
         in the hierarchy. This supports interoperability of electron microscopy data
         and is advantageous compared to having everybody using own formatting and
         conceptually not harmonized terms for their research.
         
         For the detailed rationale and explanation of the concept behind the
         NeXus electron microscopy class definitions please consult the preamble
         of the NXem_base base class.
    </doc>
    <!--composing from NXem_base should work because NXem_base is composed from NXroot
just list what is required or recommended or optional
overwrite which known building blocks should get a different meaning
and add specific fields for which there is not yet a base class
this also strenghtens that people write base classes instead of
highly customized and deeply overwriting application definitions
from the NXem_base class
\@NX_class:
\@file_time: (optional) NX_DATE_TIME
\@file_name: (optional) NX_CHAR
\@file_update_time: (optional) NX_DATE_TIME
\@NeXus_version: (optional) NX_CHAR
\@HDF_version: (optional) NX_CHAR
\@HDF5_Version: (optional) NX_CHAR
\@XML_version: (optional) NX_CHAR
\@h5py_version: (optional) NX_CHAR
\@creator: (optional) NX_CHAR
\@creator_version: (optional) NX_CHAR
\@default: (optional) NX_CHAR-->
    <group type="NXentry" minOccurs="1" maxOccurs="unbounded">
        <attribute name="version"/>
        <field name="definition">
            <enumeration>
                <item value="NXem"/>
            </enumeration>
        </field>
        <field name="experiment_identifier"/>
        <field name="experiment_description"/>
        <field name="start_time" type="NX_DATE_TIME"/>
        <field name="end_time" type="NX_DATE_TIME" recommended="true"/>
        <group type="NXcite" minOccurs="0" maxOccurs="unbounded"/>
        <group type="NXprogram" minOccurs="1" maxOccurs="unbounded">
            <field name="program">
                <attribute name="version"/>
            </field>
        </group>
        <!--\@url:-->
        <group type="NXuser" minOccurs="1" maxOccurs="unbounded">
            <field name="name"/>
        </group>
        <!--all other fields are optional but clearly defined in NXem_base-->
        <group name="sample" type="NXsample">
            <field name="identifier"/>
            <field name="method"/>
            <field name="preparation_date"/>
            <field name="name" recommended="true"/>
            <field name="atom_types"/>
        </group>
        <!--again all other fields are optional-->
        <group type="NXcoordinate_system_set" minOccurs="1" maxOccurs="1">
            <group type="NXcoordinate_system" minOccurs="1" maxOccurs="unbounded">
                <field name="alias"/>
                <field name="type"/>
                <field name="handedness"/>
                <field name="x"/>
                <field name="y"/>
                <field name="z"/>
            </group>
        </group>
        <!--the description can be so lean because we do not need
to overwrite here s.th. as everything is defined already
in NXem_base and we also do not wish to overwrite the datatype
of fields, we just say hey we need the above-mentioned fields
in the way they are defined in the respective composed base classes
and they have to be defined
we also should not need to specify the value type like R, NX_POSINT
because anyway within a group all field names have to be unique
so there must not be any name conflict and this we can take to our
advantage-->
        <group name="measurement" type="NXem_msr" optional="true">
            <group name="em_lab" type="NXinstrument">
                <group type="NXfabrication">
                    <field name="vendor"/>
                    <field name="model"/>
                </group>
                <group type="NXdetector" minOccurs="1" maxOccurs="unbounded">
                    <group type="NXfabrication">
                        <field name="vendor"/>
                        <field name="model"/>
                    </group>
                </group>
                <group type="NXebeam_column">
                    <group name="electron_source" type="NXsource">
                        <field name="emitter_type"/>
                    </group>
                </group>
                <group type="NXibeam_column" optional="true">
                    <group name="ion_source" type="NXsource">
                        <group name="probe" type="NXion"/>
                        <field name="voltage" type="NX_FLOAT"/>
                    </group>
                </group>
            </group>
            <group type="NXevent_data_em_set" optional="true">
                <group type="NXevent_data_em" minOccurs="0" maxOccurs="unbounded">
                    <field name="start_time" type="NX_DATE_TIME" recommended="true"/>
                    <field name="end_time" type="NX_DATE_TIME" recommended="true"/>
                    <group type="NXimage_r_set" minOccurs="0" maxOccurs="unbounded">
                        <group type="NXprocess">
                            <field name="source" recommended="true"/>
                            <field name="detector_identifier"/>
                        </group>
                        <group name="stack" type="NXdata">
                            <!--required annotations-->
                            <field name="title"/>
                            <field name="data_counts" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="axis_image_identifier" type="NX_UINT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="axis_y" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="axis_x" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                        </group>
                    </group>
                    <group type="NXimage_c_set" minOccurs="0" maxOccurs="unbounded">
                        <group type="NXprocess">
                            <field name="source" recommended="true"/>
                            <field name="detector_identifier"/>
                        </group>
                        <group name="stack" type="NXdata">
                            <!--required annotations-->
                            <field name="title"/>
                            <field name="real" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="imag" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="axis_image_identifier" type="NX_UINT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="axis_k" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="axis_j" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="axis_i" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                        </group>
                    </group>
                    <group type="NXspectrum_set" minOccurs="0" maxOccurs="unbounded">
                        <group type="NXprocess">
                            <field name="source" recommended="true"/>
                            <field name="detector_identifier"/>
                        </group>
                        <group name="stack" type="NXdata">
                            <!--required annotations-->
                            <field name="title"/>
                            <field name="data_counts" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="axis_y" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="axis_x" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                            <field name="axis_energy" type="NX_FLOAT">
                                <attribute name="long_name"/>
                            </field>
                        </group>
                    </group>
                    <group name="em_lab" type="NXinstrument">
                        <group type="NXebeam_column">
                            <group name="electron_source" type="NXsource">
                                <field name="voltage" type="NX_FLOAT"/>
                            </group>
                        </group>
                        <group type="NXibeam_column" optional="true">
                            <group name="ion_source" type="NXsource">
                                <group name="probe" type="NXion"/>
                                <field name="voltage" type="NX_FLOAT"/>
                            </group>
                        </group>
                    </group>
                </group>
            </group>
        </group>
        <!--why at all do we need to add here (NXinstrument) ?
nyaml2nxdl could query the NXem_msr base class definition
and check if an identifier named em_lab exists in this case
it assumes it is em_lab(NXinstrument) and continues.-->
        <group name="simulation" type="NXem_sim" optional="true"/>
        <!--remains to be discussed based on examples-->
        <group type="NXroi" optional="true">
            <doc>
                 A region-of-interest analyzed either during or after the session.
                 For which specific processed data of the measured or simulated
                 data are available.
            </doc>
            <!--as soon as one entry is here constrained further
an RDM can be sure to find specific pieces of information in a
specific way but then every user of this application definition
is required to provide such information in this way!-->
            <group name="se" type="NXem_img" optional="true"/>
            <!--remains to be discussed based on examples-->
            <group name="bse" type="NXem_img" optional="true"/>
            <!--remains to be discussed based on examples-->
            <group name="ebsd" type="NXem_ebsd" optional="true"/>
            <!--remains to be discussed based on examples-->
            <group name="eds" type="NXem_eds" optional="true"/>
            <!--remains to be discussed based on examples-->
            <group name="adf" type="NXem_adf" optional="true"/>
            <!--remains to be discussed based on examples-->
            <group name="eels" type="NXem_eels" optional="true"/>
            <!--remains to be discussed based on examples
cl(NXem_cl):
  exists: optional-->
            <group name="correlation" type="NXem_correlation" optional="true"/>
        </group>
    </group>
    <!--remains to be discussed based on examples-->
    <!--finally an example how to map e.g. a simple flat schema to NXem:
https://www.zenodo.org/record/6513745, source path mapped on (->) target path
for all source paths /SEM/ is the src path prefix
for all target paths /entry1/ is the trg path prefix
ID -> experiment_identifier
External/alias ID -> none
User -> map on NXuser instances
Date -> use start_time and end_time respectively
Affiliation -> map on NXuser instances
DOIs -> none, map on NXcite instances
Temperature (of what?) -> be more specific and add as property of group of relevance
Relative humidity (of what? likely lab like temperature) -> NXsample
Environmental gas -> NXsample
Operator -> map on NXuser with specific role
Instrument ID -> map on best matching field from NXfabrication in em_lab
Sample ID -> NXsample/identifier
Parent sample ID -> NXsample/sample_history
Any dataset to be linked with this experiment (too vague for the I in FAIR) -> none
Environmental protection during sample processing -> NXsample
Pre-treatment -> own appdef and connect to NXsample/sample_history
Measurement position (the example is totally unclear) -> NXstage_lab, coordinate system etc.
Detector IDs -> NXdetector/identifier
Accelerating voltage -> electron_source/voltage
Current -> much more possibilities electron_source and NXoptical_system_em
Magnification -> use NXoptical_system_em
Image width -> implicit in roi/NXdata instances
Image size -> see image width
Acquisition mode (too vague) -> map on more expressive fields of NXem_base
Storage tilt (what is this) for tilt see NXstage_lab
Measurement date (how is it different from Date?
Comments -> any of the description fields, in both cases not fair
the respective TEM group has pixel coordinates, which is all much cleaner
described using NXem_conventions, NXcoordinate_system, etc...-->
</definition>
