<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2014-2022 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<!--position would need another depends_on the specific coordinate system used, currently we assume McStas
roi1/ebsd/microstructure1-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXms_recon" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <doc>
         Base class to describe reconstructed projection of microstructural features.
         
         An example for EBSD.
    </doc>
    <!--as e.g. a result of one grain reconstruction with MTex or othe
grain reconstruction software in commercial tools
the idea is we may wish to run as many grain reconstructions as we want...
add details about the processing-->
    <group name="configuration" type="NXobject">
        <doc>
             The configuration and parameterization of the grain reconstruction algorithm.
        </doc>
        <!--maybe a depends_on what was the input however if the group is injected
in an roi1/ebsd instance isnt this information implicit?-->
        <field name="algorithm">
            <doc>
                 Which algorithm is used to reconstruct the features.
            </doc>
            <enumeration>
                <item value="unknown"/>
                <item value="disorientation_clustering"/>
                <item value="fast_multiscale_clustering"/>
                <item value="markov_chain_clustering"/>
            </enumeration>
        </field>
        <field name="disorientation_threshold" type="NX_FLOAT" units="NX_ANGLE">
            <doc>
                 Threshold to define at which disorientation to assume two regions have a
                 significant orientation difference.
            </doc>
        </field>
    </group>
    <!--the result of running such grain reconstruction
ms_feature_set1-->
    <group type="NXms_feature_set">
        <!--dimensionality(N) composed from NXms_feature_set base:
controlled vocabulary of base class instances to be used to inform about the discretization of these features
instances to discretize the features-->
        <group name="points" type="NXobject"/>
        <group name="lines" type="NXobject"/>
        <group name="surfaces" type="NXobject"/>
        <group name="volumes" type="NXobject"/>
        <!--domain-specific, i.e. beyond computational geometry based interpretation which
specific features are assumed constructed from the above-mentioned geometrical descriptive building blocks-->
        <group name="crystallite_projections" type="NXms_feature_set">
            <!--only for 2D
the explicit description often generating unnecessary information duplication-->
            <group name="geometry" type="NXcg_polyhedron_set">
                <doc>
                     Set of polyhedra which specify the shape and location of the discretized cross-sectioned crystal.
                     
                     A single EBSD map is mainly a two-dimensional description of the spatial distribution of
                     orientations and phase in a material. Thus, it can be used to describe what is a
                     cross-section of crystals. These projections and descriptions derived from such cross-sections
                     must not be confused with true volumetric techniques to describe the real shape of such crystal.
                     
                     See stereology literature for more details e.g.
                     E.E. Underwood's book entitled Quantitative Stereology.
                </doc>
            </group>
            <!--alternatively for EBSD maps one could also add a list of identifier for points in the mapping
which specify which scan points are assumed to belong (fully or partially to the grain), i.e.
which scan points discretize the areal description of the shape and location of each crystal-->
            <field name="discretization" type="NX_UINT"/>
        </group>
        <!--alternatively one could one sparse (boolean) mask for each crystal which
encodes which scan points belong to each grain-->
        <group name="interface_projections" type="NXms_feature_set">
            <!--only for 2D, use interface_patches in 3D, grain boundaries have a network of line-like defects
the explicit description often generating unnecessary information duplication-->
            <group name="geometry" type="NXcg_polyline_set">
                <doc>
                     Set of polylines which specify the location of the discretized curved interface
                     segments.
                </doc>
            </group>
            <!--alternative implicit descriptions of which several are possible but which have different description quality
topological ones
i) Set of pair of crystals sharing an interface-->
            <field name="crystals" type="NX_UINT">
                <doc>
                     Set of pairs of identifiers for crystals which the interface connects.
                </doc>
                <attribute name="depends_on">
                    <doc>
                         The relevant NXms_feature_set instance to resolve crystal identifier.
                    </doc>
                </attribute>
            </field>
            <!--ii) Set of pair of topologically connected triple points-->
            <field name="triple_points" type="NX_UINT">
                <doc>
                     Set of pairs of triple points which the interface segment connects.
                </doc>
                <attribute name="depends_on">
                    <doc>
                         The relevant NXms_feature_set instance to resolve triple_point identifier.
                    </doc>
                </attribute>
            </field>
            <!--alternatively which polyline of adjoining interfaces
more in spirit of descriptors
Set of pair of different thermodynamic phases to enable computations of the homo and heterophase boundary statistics-->
            <field name="discretization" type="NX_UINT">
                <doc>
                     Set of tuples of polyline segments which build the interface.
                </doc>
                <attribute name="depends_on">
                    <doc>
                         The relevant NXms_feature_set instance to resolve polyline segments.
                    </doc>
                </attribute>
            </field>
        </group>
        <!--the term triple_junction is used to name a group of features where three features meet
triple_line in a 3D description or a triple_point in a 2D description-->
        <group name="triple_line_projections" type="NXms_feature_set">
            <!--only for 2D, quad junction is the equivalent for 3D is not a triple_line
four alternative descriptors with different strength to specify spatial
or logical information about the triple junction feature set.
the explicit description often generating unnecessary information duplication-->
            <group name="geometry" type="NXcg_point_set">
                <doc>
                     Set of points which specify where triple points are assumed to be located.
                </doc>
            </group>
            <!--needs no depends_on because is self-explanatory at the costs of duplicating information
or refer to already written information to reduce storage space by virtue of design
one view how to describe a triple junction is via its properties, i.e. its location
alternative implicit descriptions of which several are possible but which have different description quality-->
            <field name="location" type="NX_UINT">
                <doc>
                     Set of identifier of point-like features. Each identifier resolves
                     where the triple junctions are located.
                </doc>
                <attribute name="depends_on">
                    <doc>
                         The relevant NXms_feature_set instance to resolve locations of points/vertices.
                    </doc>
                </attribute>
            </field>
            <!--another view to describe a triple junction is via its topology/connection expressed either via
i) triplet of interface identifier-->
            <field name="interfaces" type="NX_UINT">
                <doc>
                     Set of triplets of identifier of line-like features.
                     Each triplet resolves which three interface projections the triple point connects.
                </doc>
                <attribute name="depends_on">
                    <doc>
                         The relevant NXms_feature_set instance to resolve interface triplets.
                    </doc>
                </attribute>
            </field>
            <!--there a implicit constraints
or a more programmatic/technical view
ii) a triplet of line segment identifier whereby the point-like features is assumed discretized via three polylines representing interfaces-->
            <field name="polylines" type="NX_UINT">
                <doc>
                     Triplet of identifier of polyline segments. Each triplet resolves
                     which three segments of polyline segments the triple junction connects.
                </doc>
                <attribute name="depends_on">
                    <doc>
                         The relevant NXms_feature_set instance to resolve polyline segments.
                    </doc>
                </attribute>
            </field>
        </group>
    </group>
    <!--add all sort of other qualitative or quantitive descriptors (triple junction energy, volume etc)-->
</definition>
